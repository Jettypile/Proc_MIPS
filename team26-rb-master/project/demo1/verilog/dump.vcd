$date
	Wed Mar 11 22:17:03 2020
$end
$version
	ModelSim Version 10.4a
$end
$timescale
	1ns
$end

$scope module proc_hier_bench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemData [15] $end
$var wire 1 h MemData [14] $end
$var wire 1 i MemData [13] $end
$var wire 1 j MemData [12] $end
$var wire 1 k MemData [11] $end
$var wire 1 l MemData [10] $end
$var wire 1 m MemData [9] $end
$var wire 1 n MemData [8] $end
$var wire 1 o MemData [7] $end
$var wire 1 p MemData [6] $end
$var wire 1 q MemData [5] $end
$var wire 1 r MemData [4] $end
$var wire 1 s MemData [3] $end
$var wire 1 t MemData [2] $end
$var wire 1 u MemData [1] $end
$var wire 1 v MemData [0] $end
$var wire 1 w Halt $end
$var integer 32 x inst_count $end
$var integer 32 y trace_file $end
$var integer 32 z sim_log_file $end

$scope module DUT $end
$var wire 1 { clk $end
$var wire 1 | err $end
$var wire 1 } rst $end

$scope module c0 $end
$var reg 1 ~ clk $end
$var reg 1 !! rst $end
$var wire 1 | err $end
$var integer 32 "! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 | err $end
$var wire 1 #! PC_add_2 [15] $end
$var wire 1 $! PC_add_2 [14] $end
$var wire 1 %! PC_add_2 [13] $end
$var wire 1 &! PC_add_2 [12] $end
$var wire 1 '! PC_add_2 [11] $end
$var wire 1 (! PC_add_2 [10] $end
$var wire 1 )! PC_add_2 [9] $end
$var wire 1 *! PC_add_2 [8] $end
$var wire 1 +! PC_add_2 [7] $end
$var wire 1 ,! PC_add_2 [6] $end
$var wire 1 -! PC_add_2 [5] $end
$var wire 1 .! PC_add_2 [4] $end
$var wire 1 /! PC_add_2 [3] $end
$var wire 1 0! PC_add_2 [2] $end
$var wire 1 1! PC_add_2 [1] $end
$var wire 1 2! PC_add_2 [0] $end
$var wire 1 3! instr [15] $end
$var wire 1 4! instr [14] $end
$var wire 1 5! instr [13] $end
$var wire 1 6! instr [12] $end
$var wire 1 7! instr [11] $end
$var wire 1 8! instr [10] $end
$var wire 1 9! instr [9] $end
$var wire 1 :! instr [8] $end
$var wire 1 ;! instr [7] $end
$var wire 1 <! instr [6] $end
$var wire 1 =! instr [5] $end
$var wire 1 >! instr [4] $end
$var wire 1 ?! instr [3] $end
$var wire 1 @! instr [2] $end
$var wire 1 A! instr [1] $end
$var wire 1 B! instr [0] $end
$var wire 1 C! BorJDecode_CNTRL $end
$var wire 1 D! BorJSel_CNTRL $end
$var wire 1 E! HaltSel_CNTRL $end
$var wire 1 F! writeEnDecode $end
$var wire 1 G! writeSetInDecode $end
$var wire 1 H! ALUInA [15] $end
$var wire 1 I! ALUInA [14] $end
$var wire 1 J! ALUInA [13] $end
$var wire 1 K! ALUInA [12] $end
$var wire 1 L! ALUInA [11] $end
$var wire 1 M! ALUInA [10] $end
$var wire 1 N! ALUInA [9] $end
$var wire 1 O! ALUInA [8] $end
$var wire 1 P! ALUInA [7] $end
$var wire 1 Q! ALUInA [6] $end
$var wire 1 R! ALUInA [5] $end
$var wire 1 S! ALUInA [4] $end
$var wire 1 T! ALUInA [3] $end
$var wire 1 U! ALUInA [2] $end
$var wire 1 V! ALUInA [1] $end
$var wire 1 W! ALUInA [0] $end
$var wire 1 X! ALUInB [15] $end
$var wire 1 Y! ALUInB [14] $end
$var wire 1 Z! ALUInB [13] $end
$var wire 1 [! ALUInB [12] $end
$var wire 1 \! ALUInB [11] $end
$var wire 1 ]! ALUInB [10] $end
$var wire 1 ^! ALUInB [9] $end
$var wire 1 _! ALUInB [8] $end
$var wire 1 `! ALUInB [7] $end
$var wire 1 a! ALUInB [6] $end
$var wire 1 b! ALUInB [5] $end
$var wire 1 c! ALUInB [4] $end
$var wire 1 d! ALUInB [3] $end
$var wire 1 e! ALUInB [2] $end
$var wire 1 f! ALUInB [1] $end
$var wire 1 g! ALUInB [0] $end
$var wire 1 h! writeRegDataDecode [15] $end
$var wire 1 i! writeRegDataDecode [14] $end
$var wire 1 j! writeRegDataDecode [13] $end
$var wire 1 k! writeRegDataDecode [12] $end
$var wire 1 l! writeRegDataDecode [11] $end
$var wire 1 m! writeRegDataDecode [10] $end
$var wire 1 n! writeRegDataDecode [9] $end
$var wire 1 o! writeRegDataDecode [8] $end
$var wire 1 p! writeRegDataDecode [7] $end
$var wire 1 q! writeRegDataDecode [6] $end
$var wire 1 r! writeRegDataDecode [5] $end
$var wire 1 s! writeRegDataDecode [4] $end
$var wire 1 t! writeRegDataDecode [3] $end
$var wire 1 u! writeRegDataDecode [2] $end
$var wire 1 v! writeRegDataDecode [1] $end
$var wire 1 w! writeRegDataDecode [0] $end
$var wire 1 x! BorJaddrDecode [15] $end
$var wire 1 y! BorJaddrDecode [14] $end
$var wire 1 z! BorJaddrDecode [13] $end
$var wire 1 {! BorJaddrDecode [12] $end
$var wire 1 |! BorJaddrDecode [11] $end
$var wire 1 }! BorJaddrDecode [10] $end
$var wire 1 ~! BorJaddrDecode [9] $end
$var wire 1 !" BorJaddrDecode [8] $end
$var wire 1 "" BorJaddrDecode [7] $end
$var wire 1 #" BorJaddrDecode [6] $end
$var wire 1 $" BorJaddrDecode [5] $end
$var wire 1 %" BorJaddrDecode [4] $end
$var wire 1 &" BorJaddrDecode [3] $end
$var wire 1 '" BorJaddrDecode [2] $end
$var wire 1 (" BorJaddrDecode [1] $end
$var wire 1 )" BorJaddrDecode [0] $end
$var wire 1 *" memData [15] $end
$var wire 1 +" memData [14] $end
$var wire 1 ," memData [13] $end
$var wire 1 -" memData [12] $end
$var wire 1 ." memData [11] $end
$var wire 1 /" memData [10] $end
$var wire 1 0" memData [9] $end
$var wire 1 1" memData [8] $end
$var wire 1 2" memData [7] $end
$var wire 1 3" memData [6] $end
$var wire 1 4" memData [5] $end
$var wire 1 5" memData [4] $end
$var wire 1 6" memData [3] $end
$var wire 1 7" memData [2] $end
$var wire 1 8" memData [1] $end
$var wire 1 9" memData [0] $end
$var wire 1 :" instr_op_ext [6] $end
$var wire 1 ;" instr_op_ext [5] $end
$var wire 1 <" instr_op_ext [4] $end
$var wire 1 =" instr_op_ext [3] $end
$var wire 1 >" instr_op_ext [2] $end
$var wire 1 ?" instr_op_ext [1] $end
$var wire 1 @" instr_op_ext [0] $end
$var wire 1 A" writeRegSelDecode [2] $end
$var wire 1 B" writeRegSelDecode [1] $end
$var wire 1 C" writeRegSelDecode [0] $end
$var wire 1 D" ALU_output [15] $end
$var wire 1 E" ALU_output [14] $end
$var wire 1 F" ALU_output [13] $end
$var wire 1 G" ALU_output [12] $end
$var wire 1 H" ALU_output [11] $end
$var wire 1 I" ALU_output [10] $end
$var wire 1 J" ALU_output [9] $end
$var wire 1 K" ALU_output [8] $end
$var wire 1 L" ALU_output [7] $end
$var wire 1 M" ALU_output [6] $end
$var wire 1 N" ALU_output [5] $end
$var wire 1 O" ALU_output [4] $end
$var wire 1 P" ALU_output [3] $end
$var wire 1 Q" ALU_output [2] $end
$var wire 1 R" ALU_output [1] $end
$var wire 1 S" ALU_output [0] $end
$var wire 1 T" JaddrExecute [15] $end
$var wire 1 U" JaddrExecute [14] $end
$var wire 1 V" JaddrExecute [13] $end
$var wire 1 W" JaddrExecute [12] $end
$var wire 1 X" JaddrExecute [11] $end
$var wire 1 Y" JaddrExecute [10] $end
$var wire 1 Z" JaddrExecute [9] $end
$var wire 1 [" JaddrExecute [8] $end
$var wire 1 \" JaddrExecute [7] $end
$var wire 1 ]" JaddrExecute [6] $end
$var wire 1 ^" JaddrExecute [5] $end
$var wire 1 _" JaddrExecute [4] $end
$var wire 1 `" JaddrExecute [3] $end
$var wire 1 a" JaddrExecute [2] $end
$var wire 1 b" JaddrExecute [1] $end
$var wire 1 c" JaddrExecute [0] $end
$var wire 1 d" writeRegDataExecute [15] $end
$var wire 1 e" writeRegDataExecute [14] $end
$var wire 1 f" writeRegDataExecute [13] $end
$var wire 1 g" writeRegDataExecute [12] $end
$var wire 1 h" writeRegDataExecute [11] $end
$var wire 1 i" writeRegDataExecute [10] $end
$var wire 1 j" writeRegDataExecute [9] $end
$var wire 1 k" writeRegDataExecute [8] $end
$var wire 1 l" writeRegDataExecute [7] $end
$var wire 1 m" writeRegDataExecute [6] $end
$var wire 1 n" writeRegDataExecute [5] $end
$var wire 1 o" writeRegDataExecute [4] $end
$var wire 1 p" writeRegDataExecute [3] $end
$var wire 1 q" writeRegDataExecute [2] $end
$var wire 1 r" writeRegDataExecute [1] $end
$var wire 1 s" writeRegDataExecute [0] $end
$var wire 1 t" memWriteEn_CNTRL $end
$var wire 1 u" memRead_CNTRL $end
$var wire 1 v" memDataOut [15] $end
$var wire 1 w" memDataOut [14] $end
$var wire 1 x" memDataOut [13] $end
$var wire 1 y" memDataOut [12] $end
$var wire 1 z" memDataOut [11] $end
$var wire 1 {" memDataOut [10] $end
$var wire 1 |" memDataOut [9] $end
$var wire 1 }" memDataOut [8] $end
$var wire 1 ~" memDataOut [7] $end
$var wire 1 !# memDataOut [6] $end
$var wire 1 "# memDataOut [5] $end
$var wire 1 ## memDataOut [4] $end
$var wire 1 $# memDataOut [3] $end
$var wire 1 %# memDataOut [2] $end
$var wire 1 &# memDataOut [1] $end
$var wire 1 '# memDataOut [0] $end
$var wire 1 (# writeRegEn $end
$var wire 1 )# writeRegSel [2] $end
$var wire 1 *# writeRegSel [1] $end
$var wire 1 +# writeRegSel [0] $end
$var wire 1 ,# writeRegData [15] $end
$var wire 1 -# writeRegData [14] $end
$var wire 1 .# writeRegData [13] $end
$var wire 1 /# writeRegData [12] $end
$var wire 1 0# writeRegData [11] $end
$var wire 1 1# writeRegData [10] $end
$var wire 1 2# writeRegData [9] $end
$var wire 1 3# writeRegData [8] $end
$var wire 1 4# writeRegData [7] $end
$var wire 1 5# writeRegData [6] $end
$var wire 1 6# writeRegData [5] $end
$var wire 1 7# writeRegData [4] $end
$var wire 1 8# writeRegData [3] $end
$var wire 1 9# writeRegData [2] $end
$var wire 1 :# writeRegData [1] $end
$var wire 1 ;# writeRegData [0] $end
$var wire 1 <# writeRegEnDecode $end

$scope module fetch $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 E! HaltSel_CNTRL $end
$var wire 1 D! BorJSel_CNTRL $end
$var wire 1 C! BorJDecode_CNTRL $end
$var wire 1 x! BorJaddrDecode [15] $end
$var wire 1 y! BorJaddrDecode [14] $end
$var wire 1 z! BorJaddrDecode [13] $end
$var wire 1 {! BorJaddrDecode [12] $end
$var wire 1 |! BorJaddrDecode [11] $end
$var wire 1 }! BorJaddrDecode [10] $end
$var wire 1 ~! BorJaddrDecode [9] $end
$var wire 1 !" BorJaddrDecode [8] $end
$var wire 1 "" BorJaddrDecode [7] $end
$var wire 1 #" BorJaddrDecode [6] $end
$var wire 1 $" BorJaddrDecode [5] $end
$var wire 1 %" BorJaddrDecode [4] $end
$var wire 1 &" BorJaddrDecode [3] $end
$var wire 1 '" BorJaddrDecode [2] $end
$var wire 1 (" BorJaddrDecode [1] $end
$var wire 1 )" BorJaddrDecode [0] $end
$var wire 1 T" JaddrExecute [15] $end
$var wire 1 U" JaddrExecute [14] $end
$var wire 1 V" JaddrExecute [13] $end
$var wire 1 W" JaddrExecute [12] $end
$var wire 1 X" JaddrExecute [11] $end
$var wire 1 Y" JaddrExecute [10] $end
$var wire 1 Z" JaddrExecute [9] $end
$var wire 1 [" JaddrExecute [8] $end
$var wire 1 \" JaddrExecute [7] $end
$var wire 1 ]" JaddrExecute [6] $end
$var wire 1 ^" JaddrExecute [5] $end
$var wire 1 _" JaddrExecute [4] $end
$var wire 1 `" JaddrExecute [3] $end
$var wire 1 a" JaddrExecute [2] $end
$var wire 1 b" JaddrExecute [1] $end
$var wire 1 c" JaddrExecute [0] $end
$var wire 1 #! PC_add_2 [15] $end
$var wire 1 $! PC_add_2 [14] $end
$var wire 1 %! PC_add_2 [13] $end
$var wire 1 &! PC_add_2 [12] $end
$var wire 1 '! PC_add_2 [11] $end
$var wire 1 (! PC_add_2 [10] $end
$var wire 1 )! PC_add_2 [9] $end
$var wire 1 *! PC_add_2 [8] $end
$var wire 1 +! PC_add_2 [7] $end
$var wire 1 ,! PC_add_2 [6] $end
$var wire 1 -! PC_add_2 [5] $end
$var wire 1 .! PC_add_2 [4] $end
$var wire 1 /! PC_add_2 [3] $end
$var wire 1 0! PC_add_2 [2] $end
$var wire 1 1! PC_add_2 [1] $end
$var wire 1 2! PC_add_2 [0] $end
$var wire 1 3! instr [15] $end
$var wire 1 4! instr [14] $end
$var wire 1 5! instr [13] $end
$var wire 1 6! instr [12] $end
$var wire 1 7! instr [11] $end
$var wire 1 8! instr [10] $end
$var wire 1 9! instr [9] $end
$var wire 1 :! instr [8] $end
$var wire 1 ;! instr [7] $end
$var wire 1 <! instr [6] $end
$var wire 1 =! instr [5] $end
$var wire 1 >! instr [4] $end
$var wire 1 ?! instr [3] $end
$var wire 1 @! instr [2] $end
$var wire 1 A! instr [1] $end
$var wire 1 B! instr [0] $end
$var wire 1 =# PC_nxt [15] $end
$var wire 1 ># PC_nxt [14] $end
$var wire 1 ?# PC_nxt [13] $end
$var wire 1 @# PC_nxt [12] $end
$var wire 1 A# PC_nxt [11] $end
$var wire 1 B# PC_nxt [10] $end
$var wire 1 C# PC_nxt [9] $end
$var wire 1 D# PC_nxt [8] $end
$var wire 1 E# PC_nxt [7] $end
$var wire 1 F# PC_nxt [6] $end
$var wire 1 G# PC_nxt [5] $end
$var wire 1 H# PC_nxt [4] $end
$var wire 1 I# PC_nxt [3] $end
$var wire 1 J# PC_nxt [2] $end
$var wire 1 K# PC_nxt [1] $end
$var wire 1 L# PC_nxt [0] $end
$var wire 1 M# PC_cur [15] $end
$var wire 1 N# PC_cur [14] $end
$var wire 1 O# PC_cur [13] $end
$var wire 1 P# PC_cur [12] $end
$var wire 1 Q# PC_cur [11] $end
$var wire 1 R# PC_cur [10] $end
$var wire 1 S# PC_cur [9] $end
$var wire 1 T# PC_cur [8] $end
$var wire 1 U# PC_cur [7] $end
$var wire 1 V# PC_cur [6] $end
$var wire 1 W# PC_cur [5] $end
$var wire 1 X# PC_cur [4] $end
$var wire 1 Y# PC_cur [3] $end
$var wire 1 Z# PC_cur [2] $end
$var wire 1 [# PC_cur [1] $end
$var wire 1 \# PC_cur [0] $end
$var wire 1 ]# BorJaddr [15] $end
$var wire 1 ^# BorJaddr [14] $end
$var wire 1 _# BorJaddr [13] $end
$var wire 1 `# BorJaddr [12] $end
$var wire 1 a# BorJaddr [11] $end
$var wire 1 b# BorJaddr [10] $end
$var wire 1 c# BorJaddr [9] $end
$var wire 1 d# BorJaddr [8] $end
$var wire 1 e# BorJaddr [7] $end
$var wire 1 f# BorJaddr [6] $end
$var wire 1 g# BorJaddr [5] $end
$var wire 1 h# BorJaddr [4] $end
$var wire 1 i# BorJaddr [3] $end
$var wire 1 j# BorJaddr [2] $end
$var wire 1 k# BorJaddr [1] $end
$var wire 1 l# BorJaddr [0] $end

$scope module PC_reg $end
$var parameter 32 m# regSize $end
$var wire 1 =# In [15] $end
$var wire 1 ># In [14] $end
$var wire 1 ?# In [13] $end
$var wire 1 @# In [12] $end
$var wire 1 A# In [11] $end
$var wire 1 B# In [10] $end
$var wire 1 C# In [9] $end
$var wire 1 D# In [8] $end
$var wire 1 E# In [7] $end
$var wire 1 F# In [6] $end
$var wire 1 G# In [5] $end
$var wire 1 H# In [4] $end
$var wire 1 I# In [3] $end
$var wire 1 J# In [2] $end
$var wire 1 K# In [1] $end
$var wire 1 L# In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 M# Out [15] $end
$var wire 1 N# Out [14] $end
$var wire 1 O# Out [13] $end
$var wire 1 P# Out [12] $end
$var wire 1 Q# Out [11] $end
$var wire 1 R# Out [10] $end
$var wire 1 S# Out [9] $end
$var wire 1 T# Out [8] $end
$var wire 1 U# Out [7] $end
$var wire 1 V# Out [6] $end
$var wire 1 W# Out [5] $end
$var wire 1 X# Out [4] $end
$var wire 1 Y# Out [3] $end
$var wire 1 Z# Out [2] $end
$var wire 1 [# Out [1] $end
$var wire 1 \# Out [0] $end

$scope module regFF[15] $end
$var wire 1 M# q $end
$var wire 1 =# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 n# state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 N# q $end
$var wire 1 ># d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 o# state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 O# q $end
$var wire 1 ?# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 p# state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 P# q $end
$var wire 1 @# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 q# state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 Q# q $end
$var wire 1 A# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 r# state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 R# q $end
$var wire 1 B# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 s# state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 S# q $end
$var wire 1 C# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 t# state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 T# q $end
$var wire 1 D# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 u# state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 U# q $end
$var wire 1 E# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 v# state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 V# q $end
$var wire 1 F# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 w# state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 W# q $end
$var wire 1 G# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 x# state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 X# q $end
$var wire 1 H# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 y# state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 Y# q $end
$var wire 1 I# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 z# state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 Z# q $end
$var wire 1 J# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 {# state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 [# q $end
$var wire 1 K# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 |# state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 \# q $end
$var wire 1 L# d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 }# state $end
$upscope $end
$upscope $end

$scope module NxtPCAdder $end
$var parameter 32 ~# N $end
$var wire 1 M# A [15] $end
$var wire 1 N# A [14] $end
$var wire 1 O# A [13] $end
$var wire 1 P# A [12] $end
$var wire 1 Q# A [11] $end
$var wire 1 R# A [10] $end
$var wire 1 S# A [9] $end
$var wire 1 T# A [8] $end
$var wire 1 U# A [7] $end
$var wire 1 V# A [6] $end
$var wire 1 W# A [5] $end
$var wire 1 X# A [4] $end
$var wire 1 Y# A [3] $end
$var wire 1 Z# A [2] $end
$var wire 1 [# A [1] $end
$var wire 1 \# A [0] $end
$var wire 1 !$ B [15] $end
$var wire 1 "$ B [14] $end
$var wire 1 #$ B [13] $end
$var wire 1 $$ B [12] $end
$var wire 1 %$ B [11] $end
$var wire 1 &$ B [10] $end
$var wire 1 '$ B [9] $end
$var wire 1 ($ B [8] $end
$var wire 1 )$ B [7] $end
$var wire 1 *$ B [6] $end
$var wire 1 +$ B [5] $end
$var wire 1 ,$ B [4] $end
$var wire 1 -$ B [3] $end
$var wire 1 .$ B [2] $end
$var wire 1 /$ B [1] $end
$var wire 1 0$ B [0] $end
$var wire 1 1$ C_in $end
$var wire 1 #! S [15] $end
$var wire 1 $! S [14] $end
$var wire 1 %! S [13] $end
$var wire 1 &! S [12] $end
$var wire 1 '! S [11] $end
$var wire 1 (! S [10] $end
$var wire 1 )! S [9] $end
$var wire 1 *! S [8] $end
$var wire 1 +! S [7] $end
$var wire 1 ,! S [6] $end
$var wire 1 -! S [5] $end
$var wire 1 .! S [4] $end
$var wire 1 /! S [3] $end
$var wire 1 0! S [2] $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 2$ C_out $end
$var wire 1 3$ G [3] $end
$var wire 1 4$ G [2] $end
$var wire 1 5$ G [1] $end
$var wire 1 6$ G [0] $end
$var wire 1 7$ P [3] $end
$var wire 1 8$ P [2] $end
$var wire 1 9$ P [1] $end
$var wire 1 :$ P [0] $end
$var wire 1 ;$ sub_carry [3] $end
$var wire 1 <$ sub_carry [2] $end
$var wire 1 =$ sub_carry [1] $end
$var wire 1 >$ sub_carry [0] $end

$scope module GP0 $end
$var wire 1 Y# A [3] $end
$var wire 1 Z# A [2] $end
$var wire 1 [# A [1] $end
$var wire 1 \# A [0] $end
$var wire 1 -$ B [3] $end
$var wire 1 .$ B [2] $end
$var wire 1 /$ B [1] $end
$var wire 1 0$ B [0] $end
$var wire 1 ?$ g [3] $end
$var wire 1 @$ g [2] $end
$var wire 1 A$ g [1] $end
$var wire 1 B$ g [0] $end
$var wire 1 C$ p [3] $end
$var wire 1 D$ p [2] $end
$var wire 1 E$ p [1] $end
$var wire 1 F$ p [0] $end
$var wire 1 6$ superG $end
$var wire 1 :$ superP $end
$var wire 1 G$ g0_n $end
$var wire 1 H$ g1_n $end
$var wire 1 I$ g2_n $end
$var wire 1 J$ g3_n $end
$var wire 1 K$ p0_n $end
$var wire 1 L$ p1_n $end
$var wire 1 M$ p2_n $end
$var wire 1 N$ p3_n $end
$var wire 1 O$ p2p1g0_nand $end
$var wire 1 P$ p2p1g0_and $end
$var wire 1 Q$ p3p2p1g0_nand $end
$var wire 1 R$ p3p2p1g0_and $end
$var wire 1 S$ p3p2g1_nand $end
$var wire 1 T$ p3p2g1_and $end
$var wire 1 U$ p3g2_nand $end
$var wire 1 V$ p3g2_and $end
$var wire 1 W$ G_LHS_nor $end
$var wire 1 X$ G_LHS_or $end
$var wire 1 Y$ G_RHS_nor $end
$var wire 1 Z$ P_nand_RHS $end
$var wire 1 [$ P_and_RHS $end
$var wire 1 \$ P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 G$ out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 H$ out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 I$ out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 J$ out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 K$ out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 L$ out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 M$ out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 N$ out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 G$ in1 $end
$var wire 1 B$ out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 H$ in1 $end
$var wire 1 A$ out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 I$ in1 $end
$var wire 1 @$ out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 J$ in1 $end
$var wire 1 ?$ out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 K$ in1 $end
$var wire 1 F$ out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 L$ in1 $end
$var wire 1 E$ out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 M$ in1 $end
$var wire 1 D$ out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 N$ in1 $end
$var wire 1 C$ out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 E$ in1 $end
$var wire 1 B$ in2 $end
$var wire 1 D$ in3 $end
$var wire 1 O$ out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 O$ in1 $end
$var wire 1 P$ out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 P$ in1 $end
$var wire 1 C$ in2 $end
$var wire 1 Q$ out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 Q$ in1 $end
$var wire 1 R$ out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 C$ in1 $end
$var wire 1 D$ in2 $end
$var wire 1 A$ in3 $end
$var wire 1 S$ out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 S$ in1 $end
$var wire 1 T$ out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 C$ in1 $end
$var wire 1 @$ in2 $end
$var wire 1 U$ out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 U$ in1 $end
$var wire 1 V$ out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 ?$ in1 $end
$var wire 1 V$ in2 $end
$var wire 1 T$ in3 $end
$var wire 1 W$ out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 W$ in1 $end
$var wire 1 X$ out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 R$ in1 $end
$var wire 1 X$ in2 $end
$var wire 1 Y$ out $end
$upscope $end

$scope module G_out $end
$var wire 1 Y$ in1 $end
$var wire 1 6$ out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 F$ in1 $end
$var wire 1 E$ in2 $end
$var wire 1 D$ in3 $end
$var wire 1 Z$ out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 Z$ in1 $end
$var wire 1 [$ out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 [$ in1 $end
$var wire 1 C$ in2 $end
$var wire 1 \$ out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 \$ in1 $end
$var wire 1 :$ out $end
$upscope $end
$upscope $end

$scope module GP1 $end
$var wire 1 U# A [3] $end
$var wire 1 V# A [2] $end
$var wire 1 W# A [1] $end
$var wire 1 X# A [0] $end
$var wire 1 )$ B [3] $end
$var wire 1 *$ B [2] $end
$var wire 1 +$ B [1] $end
$var wire 1 ,$ B [0] $end
$var wire 1 ]$ g [3] $end
$var wire 1 ^$ g [2] $end
$var wire 1 _$ g [1] $end
$var wire 1 `$ g [0] $end
$var wire 1 a$ p [3] $end
$var wire 1 b$ p [2] $end
$var wire 1 c$ p [1] $end
$var wire 1 d$ p [0] $end
$var wire 1 5$ superG $end
$var wire 1 9$ superP $end
$var wire 1 e$ g0_n $end
$var wire 1 f$ g1_n $end
$var wire 1 g$ g2_n $end
$var wire 1 h$ g3_n $end
$var wire 1 i$ p0_n $end
$var wire 1 j$ p1_n $end
$var wire 1 k$ p2_n $end
$var wire 1 l$ p3_n $end
$var wire 1 m$ p2p1g0_nand $end
$var wire 1 n$ p2p1g0_and $end
$var wire 1 o$ p3p2p1g0_nand $end
$var wire 1 p$ p3p2p1g0_and $end
$var wire 1 q$ p3p2g1_nand $end
$var wire 1 r$ p3p2g1_and $end
$var wire 1 s$ p3g2_nand $end
$var wire 1 t$ p3g2_and $end
$var wire 1 u$ G_LHS_nor $end
$var wire 1 v$ G_LHS_or $end
$var wire 1 w$ G_RHS_nor $end
$var wire 1 x$ P_nand_RHS $end
$var wire 1 y$ P_and_RHS $end
$var wire 1 z$ P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 e$ out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 f$ out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 g$ out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 h$ out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 i$ out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 j$ out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 k$ out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 l$ out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 e$ in1 $end
$var wire 1 `$ out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 f$ in1 $end
$var wire 1 _$ out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 g$ in1 $end
$var wire 1 ^$ out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 h$ in1 $end
$var wire 1 ]$ out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 i$ in1 $end
$var wire 1 d$ out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 j$ in1 $end
$var wire 1 c$ out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 k$ in1 $end
$var wire 1 b$ out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 l$ in1 $end
$var wire 1 a$ out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 c$ in1 $end
$var wire 1 `$ in2 $end
$var wire 1 b$ in3 $end
$var wire 1 m$ out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 m$ in1 $end
$var wire 1 n$ out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 n$ in1 $end
$var wire 1 a$ in2 $end
$var wire 1 o$ out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 o$ in1 $end
$var wire 1 p$ out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 a$ in1 $end
$var wire 1 b$ in2 $end
$var wire 1 _$ in3 $end
$var wire 1 q$ out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 q$ in1 $end
$var wire 1 r$ out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 a$ in1 $end
$var wire 1 ^$ in2 $end
$var wire 1 s$ out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 s$ in1 $end
$var wire 1 t$ out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 ]$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 r$ in3 $end
$var wire 1 u$ out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 u$ in1 $end
$var wire 1 v$ out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 p$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 w$ out $end
$upscope $end

$scope module G_out $end
$var wire 1 w$ in1 $end
$var wire 1 5$ out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 d$ in1 $end
$var wire 1 c$ in2 $end
$var wire 1 b$ in3 $end
$var wire 1 x$ out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 x$ in1 $end
$var wire 1 y$ out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 y$ in1 $end
$var wire 1 a$ in2 $end
$var wire 1 z$ out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 z$ in1 $end
$var wire 1 9$ out $end
$upscope $end
$upscope $end

$scope module GP2 $end
$var wire 1 Q# A [3] $end
$var wire 1 R# A [2] $end
$var wire 1 S# A [1] $end
$var wire 1 T# A [0] $end
$var wire 1 %$ B [3] $end
$var wire 1 &$ B [2] $end
$var wire 1 '$ B [1] $end
$var wire 1 ($ B [0] $end
$var wire 1 {$ g [3] $end
$var wire 1 |$ g [2] $end
$var wire 1 }$ g [1] $end
$var wire 1 ~$ g [0] $end
$var wire 1 !% p [3] $end
$var wire 1 "% p [2] $end
$var wire 1 #% p [1] $end
$var wire 1 $% p [0] $end
$var wire 1 4$ superG $end
$var wire 1 8$ superP $end
$var wire 1 %% g0_n $end
$var wire 1 &% g1_n $end
$var wire 1 '% g2_n $end
$var wire 1 (% g3_n $end
$var wire 1 )% p0_n $end
$var wire 1 *% p1_n $end
$var wire 1 +% p2_n $end
$var wire 1 ,% p3_n $end
$var wire 1 -% p2p1g0_nand $end
$var wire 1 .% p2p1g0_and $end
$var wire 1 /% p3p2p1g0_nand $end
$var wire 1 0% p3p2p1g0_and $end
$var wire 1 1% p3p2g1_nand $end
$var wire 1 2% p3p2g1_and $end
$var wire 1 3% p3g2_nand $end
$var wire 1 4% p3g2_and $end
$var wire 1 5% G_LHS_nor $end
$var wire 1 6% G_LHS_or $end
$var wire 1 7% G_RHS_nor $end
$var wire 1 8% P_nand_RHS $end
$var wire 1 9% P_and_RHS $end
$var wire 1 :% P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 %% out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 &% out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 '% out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 (% out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 )% out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 *% out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 +% out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 ,% out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 %% in1 $end
$var wire 1 ~$ out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 &% in1 $end
$var wire 1 }$ out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 '% in1 $end
$var wire 1 |$ out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 (% in1 $end
$var wire 1 {$ out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 )% in1 $end
$var wire 1 $% out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 *% in1 $end
$var wire 1 #% out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 +% in1 $end
$var wire 1 "% out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 ,% in1 $end
$var wire 1 !% out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 #% in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 "% in3 $end
$var wire 1 -% out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 -% in1 $end
$var wire 1 .% out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 .% in1 $end
$var wire 1 !% in2 $end
$var wire 1 /% out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 /% in1 $end
$var wire 1 0% out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 !% in1 $end
$var wire 1 "% in2 $end
$var wire 1 }$ in3 $end
$var wire 1 1% out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 1% in1 $end
$var wire 1 2% out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 !% in1 $end
$var wire 1 |$ in2 $end
$var wire 1 3% out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 3% in1 $end
$var wire 1 4% out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 {$ in1 $end
$var wire 1 4% in2 $end
$var wire 1 2% in3 $end
$var wire 1 5% out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 5% in1 $end
$var wire 1 6% out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 0% in1 $end
$var wire 1 6% in2 $end
$var wire 1 7% out $end
$upscope $end

$scope module G_out $end
$var wire 1 7% in1 $end
$var wire 1 4$ out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 $% in1 $end
$var wire 1 #% in2 $end
$var wire 1 "% in3 $end
$var wire 1 8% out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 8% in1 $end
$var wire 1 9% out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 9% in1 $end
$var wire 1 !% in2 $end
$var wire 1 :% out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 :% in1 $end
$var wire 1 8$ out $end
$upscope $end
$upscope $end

$scope module GP3 $end
$var wire 1 M# A [3] $end
$var wire 1 N# A [2] $end
$var wire 1 O# A [1] $end
$var wire 1 P# A [0] $end
$var wire 1 !$ B [3] $end
$var wire 1 "$ B [2] $end
$var wire 1 #$ B [1] $end
$var wire 1 $$ B [0] $end
$var wire 1 ;% g [3] $end
$var wire 1 <% g [2] $end
$var wire 1 =% g [1] $end
$var wire 1 >% g [0] $end
$var wire 1 ?% p [3] $end
$var wire 1 @% p [2] $end
$var wire 1 A% p [1] $end
$var wire 1 B% p [0] $end
$var wire 1 3$ superG $end
$var wire 1 7$ superP $end
$var wire 1 C% g0_n $end
$var wire 1 D% g1_n $end
$var wire 1 E% g2_n $end
$var wire 1 F% g3_n $end
$var wire 1 G% p0_n $end
$var wire 1 H% p1_n $end
$var wire 1 I% p2_n $end
$var wire 1 J% p3_n $end
$var wire 1 K% p2p1g0_nand $end
$var wire 1 L% p2p1g0_and $end
$var wire 1 M% p3p2p1g0_nand $end
$var wire 1 N% p3p2p1g0_and $end
$var wire 1 O% p3p2g1_nand $end
$var wire 1 P% p3p2g1_and $end
$var wire 1 Q% p3g2_nand $end
$var wire 1 R% p3g2_and $end
$var wire 1 S% G_LHS_nor $end
$var wire 1 T% G_LHS_or $end
$var wire 1 U% G_RHS_nor $end
$var wire 1 V% P_nand_RHS $end
$var wire 1 W% P_and_RHS $end
$var wire 1 X% P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 C% out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 D% out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 E% out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 F% out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 G% out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 H% out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 I% out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 J% out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 C% in1 $end
$var wire 1 >% out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 D% in1 $end
$var wire 1 =% out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 E% in1 $end
$var wire 1 <% out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 F% in1 $end
$var wire 1 ;% out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 G% in1 $end
$var wire 1 B% out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 H% in1 $end
$var wire 1 A% out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 I% in1 $end
$var wire 1 @% out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 J% in1 $end
$var wire 1 ?% out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 A% in1 $end
$var wire 1 >% in2 $end
$var wire 1 @% in3 $end
$var wire 1 K% out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 K% in1 $end
$var wire 1 L% out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 L% in1 $end
$var wire 1 ?% in2 $end
$var wire 1 M% out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 M% in1 $end
$var wire 1 N% out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 ?% in1 $end
$var wire 1 @% in2 $end
$var wire 1 =% in3 $end
$var wire 1 O% out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 O% in1 $end
$var wire 1 P% out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 ?% in1 $end
$var wire 1 <% in2 $end
$var wire 1 Q% out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 Q% in1 $end
$var wire 1 R% out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 ;% in1 $end
$var wire 1 R% in2 $end
$var wire 1 P% in3 $end
$var wire 1 S% out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 S% in1 $end
$var wire 1 T% out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 N% in1 $end
$var wire 1 T% in2 $end
$var wire 1 U% out $end
$upscope $end

$scope module G_out $end
$var wire 1 U% in1 $end
$var wire 1 3$ out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 B% in1 $end
$var wire 1 A% in2 $end
$var wire 1 @% in3 $end
$var wire 1 V% out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 V% in1 $end
$var wire 1 W% out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 W% in1 $end
$var wire 1 ?% in2 $end
$var wire 1 X% out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 X% in1 $end
$var wire 1 7$ out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 3$ G [3] $end
$var wire 1 4$ G [2] $end
$var wire 1 5$ G [1] $end
$var wire 1 6$ G [0] $end
$var wire 1 7$ P [3] $end
$var wire 1 8$ P [2] $end
$var wire 1 9$ P [1] $end
$var wire 1 :$ P [0] $end
$var wire 1 1$ C_in $end
$var wire 1 ;$ C_out [3] $end
$var wire 1 <$ C_out [2] $end
$var wire 1 =$ C_out [1] $end
$var wire 1 >$ C_out [0] $end
$var wire 1 Y% pc0_nand $end
$var wire 1 Z% pc0_and $end
$var wire 1 [% g0_nor $end
$var wire 1 \% p1_nand $end
$var wire 1 ]% p1_and $end
$var wire 1 ^% p1g0_nand $end
$var wire 1 _% p1g0_and $end
$var wire 1 `% c2_nor $end
$var wire 1 a% p2_nand $end
$var wire 1 b% p2_and $end
$var wire 1 c% p2g0_nand $end
$var wire 1 d% p2g0_and $end
$var wire 1 e% p2g1_nand $end
$var wire 1 f% p2g1_and $end
$var wire 1 g% c3_nor3_RHS $end
$var wire 1 h% c3_or3_RHS $end
$var wire 1 i% c3_nor $end
$var wire 1 j% p3_nand $end
$var wire 1 k% p3_and $end
$var wire 1 l% p3g0_nand $end
$var wire 1 m% p3g0_and $end
$var wire 1 n% p3g1_nand $end
$var wire 1 o% p3g1_and $end
$var wire 1 p% p3g2_nand $end
$var wire 1 q% p3g2_and $end
$var wire 1 r% c4_LHS_nor $end
$var wire 1 s% c4_LHS_or $end
$var wire 1 t% c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 :$ in1 $end
$var wire 1 1$ in2 $end
$var wire 1 Y% out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 Y% in1 $end
$var wire 1 Z% out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 Z% in1 $end
$var wire 1 6$ in2 $end
$var wire 1 [% out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 [% in1 $end
$var wire 1 >$ out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 Z% in1 $end
$var wire 1 9$ in2 $end
$var wire 1 \% out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 \% in1 $end
$var wire 1 ]% out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 9$ in1 $end
$var wire 1 6$ in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 ^% in1 $end
$var wire 1 _% out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 5$ in1 $end
$var wire 1 _% in2 $end
$var wire 1 ]% in3 $end
$var wire 1 `% out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 `% in1 $end
$var wire 1 =$ out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 8$ in1 $end
$var wire 1 ]% in2 $end
$var wire 1 a% out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 a% in1 $end
$var wire 1 b% out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 8$ in1 $end
$var wire 1 _% in2 $end
$var wire 1 c% out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 c% in1 $end
$var wire 1 d% out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 8$ in1 $end
$var wire 1 5$ in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 e% in1 $end
$var wire 1 f% out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 4$ in1 $end
$var wire 1 f% in2 $end
$var wire 1 d% in3 $end
$var wire 1 g% out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 g% in1 $end
$var wire 1 h% out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 b% in1 $end
$var wire 1 h% in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 i% in1 $end
$var wire 1 <$ out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 7$ in1 $end
$var wire 1 b% in2 $end
$var wire 1 j% out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 j% in1 $end
$var wire 1 k% out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 7$ in1 $end
$var wire 1 d% in2 $end
$var wire 1 l% out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 l% in1 $end
$var wire 1 m% out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 7$ in1 $end
$var wire 1 f% in2 $end
$var wire 1 n% out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 n% in1 $end
$var wire 1 o% out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 7$ in1 $end
$var wire 1 4$ in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 p% in1 $end
$var wire 1 q% out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 3$ in1 $end
$var wire 1 q% in2 $end
$var wire 1 o% in3 $end
$var wire 1 r% out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 r% in1 $end
$var wire 1 s% out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 s% in1 $end
$var wire 1 m% in2 $end
$var wire 1 k% in3 $end
$var wire 1 t% out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 t% in1 $end
$var wire 1 ;$ out $end
$upscope $end
$upscope $end

$scope module cla_4b_0 $end
$var parameter 32 u% N $end
$var wire 1 Y# A [3] $end
$var wire 1 Z# A [2] $end
$var wire 1 [# A [1] $end
$var wire 1 \# A [0] $end
$var wire 1 -$ B [3] $end
$var wire 1 .$ B [2] $end
$var wire 1 /$ B [1] $end
$var wire 1 0$ B [0] $end
$var wire 1 1$ C_in $end
$var wire 1 /! S [3] $end
$var wire 1 0! S [2] $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 v% C_out $end
$var wire 1 w% g [3] $end
$var wire 1 x% g [2] $end
$var wire 1 y% g [1] $end
$var wire 1 z% g [0] $end
$var wire 1 {% p [3] $end
$var wire 1 |% p [2] $end
$var wire 1 }% p [1] $end
$var wire 1 ~% p [0] $end
$var wire 1 !& sub_carry [3] $end
$var wire 1 "& sub_carry [2] $end
$var wire 1 #& sub_carry [1] $end
$var wire 1 $& sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 Y# A [3] $end
$var wire 1 Z# A [2] $end
$var wire 1 [# A [1] $end
$var wire 1 \# A [0] $end
$var wire 1 -$ B [3] $end
$var wire 1 .$ B [2] $end
$var wire 1 /$ B [1] $end
$var wire 1 0$ B [0] $end
$var wire 1 w% g [3] $end
$var wire 1 x% g [2] $end
$var wire 1 y% g [1] $end
$var wire 1 z% g [0] $end
$var wire 1 {% p [3] $end
$var wire 1 |% p [2] $end
$var wire 1 }% p [1] $end
$var wire 1 ~% p [0] $end
$var wire 1 %& superG $end
$var wire 1 && superP $end
$var wire 1 '& g0_n $end
$var wire 1 (& g1_n $end
$var wire 1 )& g2_n $end
$var wire 1 *& g3_n $end
$var wire 1 +& p0_n $end
$var wire 1 ,& p1_n $end
$var wire 1 -& p2_n $end
$var wire 1 .& p3_n $end
$var wire 1 /& p2p1g0_nand $end
$var wire 1 0& p2p1g0_and $end
$var wire 1 1& p3p2p1g0_nand $end
$var wire 1 2& p3p2p1g0_and $end
$var wire 1 3& p3p2g1_nand $end
$var wire 1 4& p3p2g1_and $end
$var wire 1 5& p3g2_nand $end
$var wire 1 6& p3g2_and $end
$var wire 1 7& G_LHS_nor $end
$var wire 1 8& G_LHS_or $end
$var wire 1 9& G_RHS_nor $end
$var wire 1 :& P_nand_RHS $end
$var wire 1 ;& P_and_RHS $end
$var wire 1 <& P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 '& out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 (& out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 )& out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 *& out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 +& out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 -& out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 .& out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 '& in1 $end
$var wire 1 z% out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 (& in1 $end
$var wire 1 y% out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 )& in1 $end
$var wire 1 x% out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 *& in1 $end
$var wire 1 w% out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 +& in1 $end
$var wire 1 ~% out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 ,& in1 $end
$var wire 1 }% out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 -& in1 $end
$var wire 1 |% out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 .& in1 $end
$var wire 1 {% out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 }% in1 $end
$var wire 1 z% in2 $end
$var wire 1 |% in3 $end
$var wire 1 /& out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 /& in1 $end
$var wire 1 0& out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 0& in1 $end
$var wire 1 {% in2 $end
$var wire 1 1& out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 1& in1 $end
$var wire 1 2& out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 {% in1 $end
$var wire 1 |% in2 $end
$var wire 1 y% in3 $end
$var wire 1 3& out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 3& in1 $end
$var wire 1 4& out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 {% in1 $end
$var wire 1 x% in2 $end
$var wire 1 5& out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 5& in1 $end
$var wire 1 6& out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 w% in1 $end
$var wire 1 6& in2 $end
$var wire 1 4& in3 $end
$var wire 1 7& out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 7& in1 $end
$var wire 1 8& out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 2& in1 $end
$var wire 1 8& in2 $end
$var wire 1 9& out $end
$upscope $end

$scope module G_out $end
$var wire 1 9& in1 $end
$var wire 1 %& out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 ~% in1 $end
$var wire 1 }% in2 $end
$var wire 1 |% in3 $end
$var wire 1 :& out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 :& in1 $end
$var wire 1 ;& out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 ;& in1 $end
$var wire 1 {% in2 $end
$var wire 1 <& out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 <& in1 $end
$var wire 1 && out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 w% G [3] $end
$var wire 1 x% G [2] $end
$var wire 1 y% G [1] $end
$var wire 1 z% G [0] $end
$var wire 1 {% P [3] $end
$var wire 1 |% P [2] $end
$var wire 1 }% P [1] $end
$var wire 1 ~% P [0] $end
$var wire 1 1$ C_in $end
$var wire 1 !& C_out [3] $end
$var wire 1 "& C_out [2] $end
$var wire 1 #& C_out [1] $end
$var wire 1 $& C_out [0] $end
$var wire 1 =& pc0_nand $end
$var wire 1 >& pc0_and $end
$var wire 1 ?& g0_nor $end
$var wire 1 @& p1_nand $end
$var wire 1 A& p1_and $end
$var wire 1 B& p1g0_nand $end
$var wire 1 C& p1g0_and $end
$var wire 1 D& c2_nor $end
$var wire 1 E& p2_nand $end
$var wire 1 F& p2_and $end
$var wire 1 G& p2g0_nand $end
$var wire 1 H& p2g0_and $end
$var wire 1 I& p2g1_nand $end
$var wire 1 J& p2g1_and $end
$var wire 1 K& c3_nor3_RHS $end
$var wire 1 L& c3_or3_RHS $end
$var wire 1 M& c3_nor $end
$var wire 1 N& p3_nand $end
$var wire 1 O& p3_and $end
$var wire 1 P& p3g0_nand $end
$var wire 1 Q& p3g0_and $end
$var wire 1 R& p3g1_nand $end
$var wire 1 S& p3g1_and $end
$var wire 1 T& p3g2_nand $end
$var wire 1 U& p3g2_and $end
$var wire 1 V& c4_LHS_nor $end
$var wire 1 W& c4_LHS_or $end
$var wire 1 X& c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 ~% in1 $end
$var wire 1 1$ in2 $end
$var wire 1 =& out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 =& in1 $end
$var wire 1 >& out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 >& in1 $end
$var wire 1 z% in2 $end
$var wire 1 ?& out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 ?& in1 $end
$var wire 1 $& out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 >& in1 $end
$var wire 1 }% in2 $end
$var wire 1 @& out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 @& in1 $end
$var wire 1 A& out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 }% in1 $end
$var wire 1 z% in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 B& in1 $end
$var wire 1 C& out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 y% in1 $end
$var wire 1 C& in2 $end
$var wire 1 A& in3 $end
$var wire 1 D& out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 D& in1 $end
$var wire 1 #& out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 |% in1 $end
$var wire 1 A& in2 $end
$var wire 1 E& out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 E& in1 $end
$var wire 1 F& out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 |% in1 $end
$var wire 1 C& in2 $end
$var wire 1 G& out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 G& in1 $end
$var wire 1 H& out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 |% in1 $end
$var wire 1 y% in2 $end
$var wire 1 I& out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 I& in1 $end
$var wire 1 J& out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 x% in1 $end
$var wire 1 J& in2 $end
$var wire 1 H& in3 $end
$var wire 1 K& out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 K& in1 $end
$var wire 1 L& out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 F& in1 $end
$var wire 1 L& in2 $end
$var wire 1 M& out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 M& in1 $end
$var wire 1 "& out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 {% in1 $end
$var wire 1 F& in2 $end
$var wire 1 N& out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 N& in1 $end
$var wire 1 O& out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 {% in1 $end
$var wire 1 H& in2 $end
$var wire 1 P& out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 P& in1 $end
$var wire 1 Q& out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 {% in1 $end
$var wire 1 J& in2 $end
$var wire 1 R& out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 R& in1 $end
$var wire 1 S& out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 {% in1 $end
$var wire 1 x% in2 $end
$var wire 1 T& out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 T& in1 $end
$var wire 1 U& out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 w% in1 $end
$var wire 1 U& in2 $end
$var wire 1 S& in3 $end
$var wire 1 V& out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 V& in1 $end
$var wire 1 W& out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 W& in1 $end
$var wire 1 Q& in2 $end
$var wire 1 O& in3 $end
$var wire 1 X& out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 X& in1 $end
$var wire 1 !& out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 \# A $end
$var wire 1 0$ B $end
$var wire 1 1$ C_in $end
$var wire 1 2! S $end
$var wire 1 Y& C_out $end
$var wire 1 Z& nand_bc $end
$var wire 1 [& nand_ac $end
$var wire 1 \& nand_ab $end
$var wire 1 ]& and_bc $end
$var wire 1 ^& and_ac $end
$var wire 1 _& and_ab $end
$var wire 1 `& nor_res $end

$scope module xor_sum $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 1$ in3 $end
$var wire 1 2! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 0$ in1 $end
$var wire 1 1$ in2 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 \# in1 $end
$var wire 1 1$ in2 $end
$var wire 1 [& out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 \# in1 $end
$var wire 1 0$ in2 $end
$var wire 1 \& out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 Z& in1 $end
$var wire 1 ]& out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 [& in1 $end
$var wire 1 ^& out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 \& in1 $end
$var wire 1 _& out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 ]& in1 $end
$var wire 1 ^& in2 $end
$var wire 1 _& in3 $end
$var wire 1 `& out $end
$upscope $end

$scope module res $end
$var wire 1 `& in1 $end
$var wire 1 Y& out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 [# A $end
$var wire 1 /$ B $end
$var wire 1 $& C_in $end
$var wire 1 1! S $end
$var wire 1 a& C_out $end
$var wire 1 b& nand_bc $end
$var wire 1 c& nand_ac $end
$var wire 1 d& nand_ab $end
$var wire 1 e& and_bc $end
$var wire 1 f& and_ac $end
$var wire 1 g& and_ab $end
$var wire 1 h& nor_res $end

$scope module xor_sum $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 $& in3 $end
$var wire 1 1! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 /$ in1 $end
$var wire 1 $& in2 $end
$var wire 1 b& out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 [# in1 $end
$var wire 1 $& in2 $end
$var wire 1 c& out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 [# in1 $end
$var wire 1 /$ in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 b& in1 $end
$var wire 1 e& out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 c& in1 $end
$var wire 1 f& out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 d& in1 $end
$var wire 1 g& out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 e& in1 $end
$var wire 1 f& in2 $end
$var wire 1 g& in3 $end
$var wire 1 h& out $end
$upscope $end

$scope module res $end
$var wire 1 h& in1 $end
$var wire 1 a& out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 Z# A $end
$var wire 1 .$ B $end
$var wire 1 #& C_in $end
$var wire 1 0! S $end
$var wire 1 i& C_out $end
$var wire 1 j& nand_bc $end
$var wire 1 k& nand_ac $end
$var wire 1 l& nand_ab $end
$var wire 1 m& and_bc $end
$var wire 1 n& and_ac $end
$var wire 1 o& and_ab $end
$var wire 1 p& nor_res $end

$scope module xor_sum $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 #& in3 $end
$var wire 1 0! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 .$ in1 $end
$var wire 1 #& in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 Z# in1 $end
$var wire 1 #& in2 $end
$var wire 1 k& out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 Z# in1 $end
$var wire 1 .$ in2 $end
$var wire 1 l& out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 j& in1 $end
$var wire 1 m& out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 k& in1 $end
$var wire 1 n& out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 l& in1 $end
$var wire 1 o& out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 m& in1 $end
$var wire 1 n& in2 $end
$var wire 1 o& in3 $end
$var wire 1 p& out $end
$upscope $end

$scope module res $end
$var wire 1 p& in1 $end
$var wire 1 i& out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 Y# A $end
$var wire 1 -$ B $end
$var wire 1 "& C_in $end
$var wire 1 /! S $end
$var wire 1 q& C_out $end
$var wire 1 r& nand_bc $end
$var wire 1 s& nand_ac $end
$var wire 1 t& nand_ab $end
$var wire 1 u& and_bc $end
$var wire 1 v& and_ac $end
$var wire 1 w& and_ab $end
$var wire 1 x& nor_res $end

$scope module xor_sum $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 "& in3 $end
$var wire 1 /! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 -$ in1 $end
$var wire 1 "& in2 $end
$var wire 1 r& out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 Y# in1 $end
$var wire 1 "& in2 $end
$var wire 1 s& out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 Y# in1 $end
$var wire 1 -$ in2 $end
$var wire 1 t& out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 r& in1 $end
$var wire 1 u& out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 s& in1 $end
$var wire 1 v& out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 t& in1 $end
$var wire 1 w& out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 u& in1 $end
$var wire 1 v& in2 $end
$var wire 1 w& in3 $end
$var wire 1 x& out $end
$upscope $end

$scope module res $end
$var wire 1 x& in1 $end
$var wire 1 q& out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_1 $end
$var parameter 32 y& N $end
$var wire 1 U# A [3] $end
$var wire 1 V# A [2] $end
$var wire 1 W# A [1] $end
$var wire 1 X# A [0] $end
$var wire 1 )$ B [3] $end
$var wire 1 *$ B [2] $end
$var wire 1 +$ B [1] $end
$var wire 1 ,$ B [0] $end
$var wire 1 >$ C_in $end
$var wire 1 +! S [3] $end
$var wire 1 ,! S [2] $end
$var wire 1 -! S [1] $end
$var wire 1 .! S [0] $end
$var wire 1 z& C_out $end
$var wire 1 {& g [3] $end
$var wire 1 |& g [2] $end
$var wire 1 }& g [1] $end
$var wire 1 ~& g [0] $end
$var wire 1 !' p [3] $end
$var wire 1 "' p [2] $end
$var wire 1 #' p [1] $end
$var wire 1 $' p [0] $end
$var wire 1 %' sub_carry [3] $end
$var wire 1 &' sub_carry [2] $end
$var wire 1 '' sub_carry [1] $end
$var wire 1 (' sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 U# A [3] $end
$var wire 1 V# A [2] $end
$var wire 1 W# A [1] $end
$var wire 1 X# A [0] $end
$var wire 1 )$ B [3] $end
$var wire 1 *$ B [2] $end
$var wire 1 +$ B [1] $end
$var wire 1 ,$ B [0] $end
$var wire 1 {& g [3] $end
$var wire 1 |& g [2] $end
$var wire 1 }& g [1] $end
$var wire 1 ~& g [0] $end
$var wire 1 !' p [3] $end
$var wire 1 "' p [2] $end
$var wire 1 #' p [1] $end
$var wire 1 $' p [0] $end
$var wire 1 )' superG $end
$var wire 1 *' superP $end
$var wire 1 +' g0_n $end
$var wire 1 ,' g1_n $end
$var wire 1 -' g2_n $end
$var wire 1 .' g3_n $end
$var wire 1 /' p0_n $end
$var wire 1 0' p1_n $end
$var wire 1 1' p2_n $end
$var wire 1 2' p3_n $end
$var wire 1 3' p2p1g0_nand $end
$var wire 1 4' p2p1g0_and $end
$var wire 1 5' p3p2p1g0_nand $end
$var wire 1 6' p3p2p1g0_and $end
$var wire 1 7' p3p2g1_nand $end
$var wire 1 8' p3p2g1_and $end
$var wire 1 9' p3g2_nand $end
$var wire 1 :' p3g2_and $end
$var wire 1 ;' G_LHS_nor $end
$var wire 1 <' G_LHS_or $end
$var wire 1 =' G_RHS_nor $end
$var wire 1 >' P_nand_RHS $end
$var wire 1 ?' P_and_RHS $end
$var wire 1 @' P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 +' out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 /' out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 2' out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 +' in1 $end
$var wire 1 ~& out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 ,' in1 $end
$var wire 1 }& out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 -' in1 $end
$var wire 1 |& out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 .' in1 $end
$var wire 1 {& out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 /' in1 $end
$var wire 1 $' out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 0' in1 $end
$var wire 1 #' out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 1' in1 $end
$var wire 1 "' out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 2' in1 $end
$var wire 1 !' out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 #' in1 $end
$var wire 1 ~& in2 $end
$var wire 1 "' in3 $end
$var wire 1 3' out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 3' in1 $end
$var wire 1 4' out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 4' in1 $end
$var wire 1 !' in2 $end
$var wire 1 5' out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 5' in1 $end
$var wire 1 6' out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 !' in1 $end
$var wire 1 "' in2 $end
$var wire 1 }& in3 $end
$var wire 1 7' out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 7' in1 $end
$var wire 1 8' out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 !' in1 $end
$var wire 1 |& in2 $end
$var wire 1 9' out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 9' in1 $end
$var wire 1 :' out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 {& in1 $end
$var wire 1 :' in2 $end
$var wire 1 8' in3 $end
$var wire 1 ;' out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 ;' in1 $end
$var wire 1 <' out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 6' in1 $end
$var wire 1 <' in2 $end
$var wire 1 =' out $end
$upscope $end

$scope module G_out $end
$var wire 1 =' in1 $end
$var wire 1 )' out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 $' in1 $end
$var wire 1 #' in2 $end
$var wire 1 "' in3 $end
$var wire 1 >' out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 >' in1 $end
$var wire 1 ?' out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 ?' in1 $end
$var wire 1 !' in2 $end
$var wire 1 @' out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 @' in1 $end
$var wire 1 *' out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 {& G [3] $end
$var wire 1 |& G [2] $end
$var wire 1 }& G [1] $end
$var wire 1 ~& G [0] $end
$var wire 1 !' P [3] $end
$var wire 1 "' P [2] $end
$var wire 1 #' P [1] $end
$var wire 1 $' P [0] $end
$var wire 1 >$ C_in $end
$var wire 1 %' C_out [3] $end
$var wire 1 &' C_out [2] $end
$var wire 1 '' C_out [1] $end
$var wire 1 (' C_out [0] $end
$var wire 1 A' pc0_nand $end
$var wire 1 B' pc0_and $end
$var wire 1 C' g0_nor $end
$var wire 1 D' p1_nand $end
$var wire 1 E' p1_and $end
$var wire 1 F' p1g0_nand $end
$var wire 1 G' p1g0_and $end
$var wire 1 H' c2_nor $end
$var wire 1 I' p2_nand $end
$var wire 1 J' p2_and $end
$var wire 1 K' p2g0_nand $end
$var wire 1 L' p2g0_and $end
$var wire 1 M' p2g1_nand $end
$var wire 1 N' p2g1_and $end
$var wire 1 O' c3_nor3_RHS $end
$var wire 1 P' c3_or3_RHS $end
$var wire 1 Q' c3_nor $end
$var wire 1 R' p3_nand $end
$var wire 1 S' p3_and $end
$var wire 1 T' p3g0_nand $end
$var wire 1 U' p3g0_and $end
$var wire 1 V' p3g1_nand $end
$var wire 1 W' p3g1_and $end
$var wire 1 X' p3g2_nand $end
$var wire 1 Y' p3g2_and $end
$var wire 1 Z' c4_LHS_nor $end
$var wire 1 [' c4_LHS_or $end
$var wire 1 \' c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 $' in1 $end
$var wire 1 >$ in2 $end
$var wire 1 A' out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 A' in1 $end
$var wire 1 B' out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 B' in1 $end
$var wire 1 ~& in2 $end
$var wire 1 C' out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 C' in1 $end
$var wire 1 (' out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 B' in1 $end
$var wire 1 #' in2 $end
$var wire 1 D' out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 D' in1 $end
$var wire 1 E' out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 #' in1 $end
$var wire 1 ~& in2 $end
$var wire 1 F' out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 F' in1 $end
$var wire 1 G' out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 }& in1 $end
$var wire 1 G' in2 $end
$var wire 1 E' in3 $end
$var wire 1 H' out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 H' in1 $end
$var wire 1 '' out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 "' in1 $end
$var wire 1 E' in2 $end
$var wire 1 I' out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 I' in1 $end
$var wire 1 J' out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 "' in1 $end
$var wire 1 G' in2 $end
$var wire 1 K' out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 K' in1 $end
$var wire 1 L' out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 "' in1 $end
$var wire 1 }& in2 $end
$var wire 1 M' out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 M' in1 $end
$var wire 1 N' out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 |& in1 $end
$var wire 1 N' in2 $end
$var wire 1 L' in3 $end
$var wire 1 O' out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 O' in1 $end
$var wire 1 P' out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 J' in1 $end
$var wire 1 P' in2 $end
$var wire 1 Q' out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 Q' in1 $end
$var wire 1 &' out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 !' in1 $end
$var wire 1 J' in2 $end
$var wire 1 R' out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 R' in1 $end
$var wire 1 S' out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 !' in1 $end
$var wire 1 L' in2 $end
$var wire 1 T' out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 T' in1 $end
$var wire 1 U' out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 !' in1 $end
$var wire 1 N' in2 $end
$var wire 1 V' out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 V' in1 $end
$var wire 1 W' out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 !' in1 $end
$var wire 1 |& in2 $end
$var wire 1 X' out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 X' in1 $end
$var wire 1 Y' out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 {& in1 $end
$var wire 1 Y' in2 $end
$var wire 1 W' in3 $end
$var wire 1 Z' out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 Z' in1 $end
$var wire 1 [' out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 [' in1 $end
$var wire 1 U' in2 $end
$var wire 1 S' in3 $end
$var wire 1 \' out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 \' in1 $end
$var wire 1 %' out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 X# A $end
$var wire 1 ,$ B $end
$var wire 1 >$ C_in $end
$var wire 1 .! S $end
$var wire 1 ]' C_out $end
$var wire 1 ^' nand_bc $end
$var wire 1 _' nand_ac $end
$var wire 1 `' nand_ab $end
$var wire 1 a' and_bc $end
$var wire 1 b' and_ac $end
$var wire 1 c' and_ab $end
$var wire 1 d' nor_res $end

$scope module xor_sum $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 >$ in3 $end
$var wire 1 .! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 ,$ in1 $end
$var wire 1 >$ in2 $end
$var wire 1 ^' out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 X# in1 $end
$var wire 1 >$ in2 $end
$var wire 1 _' out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 X# in1 $end
$var wire 1 ,$ in2 $end
$var wire 1 `' out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 ^' in1 $end
$var wire 1 a' out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 _' in1 $end
$var wire 1 b' out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 `' in1 $end
$var wire 1 c' out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 a' in1 $end
$var wire 1 b' in2 $end
$var wire 1 c' in3 $end
$var wire 1 d' out $end
$upscope $end

$scope module res $end
$var wire 1 d' in1 $end
$var wire 1 ]' out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 W# A $end
$var wire 1 +$ B $end
$var wire 1 (' C_in $end
$var wire 1 -! S $end
$var wire 1 e' C_out $end
$var wire 1 f' nand_bc $end
$var wire 1 g' nand_ac $end
$var wire 1 h' nand_ab $end
$var wire 1 i' and_bc $end
$var wire 1 j' and_ac $end
$var wire 1 k' and_ab $end
$var wire 1 l' nor_res $end

$scope module xor_sum $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 (' in3 $end
$var wire 1 -! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 +$ in1 $end
$var wire 1 (' in2 $end
$var wire 1 f' out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 W# in1 $end
$var wire 1 (' in2 $end
$var wire 1 g' out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 W# in1 $end
$var wire 1 +$ in2 $end
$var wire 1 h' out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 f' in1 $end
$var wire 1 i' out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 g' in1 $end
$var wire 1 j' out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 h' in1 $end
$var wire 1 k' out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 i' in1 $end
$var wire 1 j' in2 $end
$var wire 1 k' in3 $end
$var wire 1 l' out $end
$upscope $end

$scope module res $end
$var wire 1 l' in1 $end
$var wire 1 e' out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 V# A $end
$var wire 1 *$ B $end
$var wire 1 '' C_in $end
$var wire 1 ,! S $end
$var wire 1 m' C_out $end
$var wire 1 n' nand_bc $end
$var wire 1 o' nand_ac $end
$var wire 1 p' nand_ab $end
$var wire 1 q' and_bc $end
$var wire 1 r' and_ac $end
$var wire 1 s' and_ab $end
$var wire 1 t' nor_res $end

$scope module xor_sum $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 '' in3 $end
$var wire 1 ,! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 *$ in1 $end
$var wire 1 '' in2 $end
$var wire 1 n' out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 V# in1 $end
$var wire 1 '' in2 $end
$var wire 1 o' out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 V# in1 $end
$var wire 1 *$ in2 $end
$var wire 1 p' out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 n' in1 $end
$var wire 1 q' out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 o' in1 $end
$var wire 1 r' out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 p' in1 $end
$var wire 1 s' out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 q' in1 $end
$var wire 1 r' in2 $end
$var wire 1 s' in3 $end
$var wire 1 t' out $end
$upscope $end

$scope module res $end
$var wire 1 t' in1 $end
$var wire 1 m' out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 U# A $end
$var wire 1 )$ B $end
$var wire 1 &' C_in $end
$var wire 1 +! S $end
$var wire 1 u' C_out $end
$var wire 1 v' nand_bc $end
$var wire 1 w' nand_ac $end
$var wire 1 x' nand_ab $end
$var wire 1 y' and_bc $end
$var wire 1 z' and_ac $end
$var wire 1 {' and_ab $end
$var wire 1 |' nor_res $end

$scope module xor_sum $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 &' in3 $end
$var wire 1 +! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 )$ in1 $end
$var wire 1 &' in2 $end
$var wire 1 v' out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 U# in1 $end
$var wire 1 &' in2 $end
$var wire 1 w' out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 U# in1 $end
$var wire 1 )$ in2 $end
$var wire 1 x' out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 v' in1 $end
$var wire 1 y' out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 w' in1 $end
$var wire 1 z' out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 x' in1 $end
$var wire 1 {' out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 y' in1 $end
$var wire 1 z' in2 $end
$var wire 1 {' in3 $end
$var wire 1 |' out $end
$upscope $end

$scope module res $end
$var wire 1 |' in1 $end
$var wire 1 u' out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_2 $end
$var parameter 32 }' N $end
$var wire 1 Q# A [3] $end
$var wire 1 R# A [2] $end
$var wire 1 S# A [1] $end
$var wire 1 T# A [0] $end
$var wire 1 %$ B [3] $end
$var wire 1 &$ B [2] $end
$var wire 1 '$ B [1] $end
$var wire 1 ($ B [0] $end
$var wire 1 =$ C_in $end
$var wire 1 '! S [3] $end
$var wire 1 (! S [2] $end
$var wire 1 )! S [1] $end
$var wire 1 *! S [0] $end
$var wire 1 ~' C_out $end
$var wire 1 !( g [3] $end
$var wire 1 "( g [2] $end
$var wire 1 #( g [1] $end
$var wire 1 $( g [0] $end
$var wire 1 %( p [3] $end
$var wire 1 &( p [2] $end
$var wire 1 '( p [1] $end
$var wire 1 (( p [0] $end
$var wire 1 )( sub_carry [3] $end
$var wire 1 *( sub_carry [2] $end
$var wire 1 +( sub_carry [1] $end
$var wire 1 ,( sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 Q# A [3] $end
$var wire 1 R# A [2] $end
$var wire 1 S# A [1] $end
$var wire 1 T# A [0] $end
$var wire 1 %$ B [3] $end
$var wire 1 &$ B [2] $end
$var wire 1 '$ B [1] $end
$var wire 1 ($ B [0] $end
$var wire 1 !( g [3] $end
$var wire 1 "( g [2] $end
$var wire 1 #( g [1] $end
$var wire 1 $( g [0] $end
$var wire 1 %( p [3] $end
$var wire 1 &( p [2] $end
$var wire 1 '( p [1] $end
$var wire 1 (( p [0] $end
$var wire 1 -( superG $end
$var wire 1 .( superP $end
$var wire 1 /( g0_n $end
$var wire 1 0( g1_n $end
$var wire 1 1( g2_n $end
$var wire 1 2( g3_n $end
$var wire 1 3( p0_n $end
$var wire 1 4( p1_n $end
$var wire 1 5( p2_n $end
$var wire 1 6( p3_n $end
$var wire 1 7( p2p1g0_nand $end
$var wire 1 8( p2p1g0_and $end
$var wire 1 9( p3p2p1g0_nand $end
$var wire 1 :( p3p2p1g0_and $end
$var wire 1 ;( p3p2g1_nand $end
$var wire 1 <( p3p2g1_and $end
$var wire 1 =( p3g2_nand $end
$var wire 1 >( p3g2_and $end
$var wire 1 ?( G_LHS_nor $end
$var wire 1 @( G_LHS_or $end
$var wire 1 A( G_RHS_nor $end
$var wire 1 B( P_nand_RHS $end
$var wire 1 C( P_and_RHS $end
$var wire 1 D( P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 /( out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 0( out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 1( out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 2( out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 3( out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 4( out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 5( out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 6( out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 /( in1 $end
$var wire 1 $( out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 0( in1 $end
$var wire 1 #( out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 1( in1 $end
$var wire 1 "( out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 2( in1 $end
$var wire 1 !( out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 3( in1 $end
$var wire 1 (( out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 4( in1 $end
$var wire 1 '( out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 5( in1 $end
$var wire 1 &( out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 6( in1 $end
$var wire 1 %( out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 '( in1 $end
$var wire 1 $( in2 $end
$var wire 1 &( in3 $end
$var wire 1 7( out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 7( in1 $end
$var wire 1 8( out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 8( in1 $end
$var wire 1 %( in2 $end
$var wire 1 9( out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 9( in1 $end
$var wire 1 :( out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 %( in1 $end
$var wire 1 &( in2 $end
$var wire 1 #( in3 $end
$var wire 1 ;( out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 ;( in1 $end
$var wire 1 <( out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 %( in1 $end
$var wire 1 "( in2 $end
$var wire 1 =( out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 =( in1 $end
$var wire 1 >( out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 !( in1 $end
$var wire 1 >( in2 $end
$var wire 1 <( in3 $end
$var wire 1 ?( out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 ?( in1 $end
$var wire 1 @( out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 :( in1 $end
$var wire 1 @( in2 $end
$var wire 1 A( out $end
$upscope $end

$scope module G_out $end
$var wire 1 A( in1 $end
$var wire 1 -( out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 (( in1 $end
$var wire 1 '( in2 $end
$var wire 1 &( in3 $end
$var wire 1 B( out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 B( in1 $end
$var wire 1 C( out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 C( in1 $end
$var wire 1 %( in2 $end
$var wire 1 D( out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 D( in1 $end
$var wire 1 .( out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 !( G [3] $end
$var wire 1 "( G [2] $end
$var wire 1 #( G [1] $end
$var wire 1 $( G [0] $end
$var wire 1 %( P [3] $end
$var wire 1 &( P [2] $end
$var wire 1 '( P [1] $end
$var wire 1 (( P [0] $end
$var wire 1 =$ C_in $end
$var wire 1 )( C_out [3] $end
$var wire 1 *( C_out [2] $end
$var wire 1 +( C_out [1] $end
$var wire 1 ,( C_out [0] $end
$var wire 1 E( pc0_nand $end
$var wire 1 F( pc0_and $end
$var wire 1 G( g0_nor $end
$var wire 1 H( p1_nand $end
$var wire 1 I( p1_and $end
$var wire 1 J( p1g0_nand $end
$var wire 1 K( p1g0_and $end
$var wire 1 L( c2_nor $end
$var wire 1 M( p2_nand $end
$var wire 1 N( p2_and $end
$var wire 1 O( p2g0_nand $end
$var wire 1 P( p2g0_and $end
$var wire 1 Q( p2g1_nand $end
$var wire 1 R( p2g1_and $end
$var wire 1 S( c3_nor3_RHS $end
$var wire 1 T( c3_or3_RHS $end
$var wire 1 U( c3_nor $end
$var wire 1 V( p3_nand $end
$var wire 1 W( p3_and $end
$var wire 1 X( p3g0_nand $end
$var wire 1 Y( p3g0_and $end
$var wire 1 Z( p3g1_nand $end
$var wire 1 [( p3g1_and $end
$var wire 1 \( p3g2_nand $end
$var wire 1 ]( p3g2_and $end
$var wire 1 ^( c4_LHS_nor $end
$var wire 1 _( c4_LHS_or $end
$var wire 1 `( c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 (( in1 $end
$var wire 1 =$ in2 $end
$var wire 1 E( out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 E( in1 $end
$var wire 1 F( out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 F( in1 $end
$var wire 1 $( in2 $end
$var wire 1 G( out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 G( in1 $end
$var wire 1 ,( out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 F( in1 $end
$var wire 1 '( in2 $end
$var wire 1 H( out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 H( in1 $end
$var wire 1 I( out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 '( in1 $end
$var wire 1 $( in2 $end
$var wire 1 J( out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 J( in1 $end
$var wire 1 K( out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 #( in1 $end
$var wire 1 K( in2 $end
$var wire 1 I( in3 $end
$var wire 1 L( out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 L( in1 $end
$var wire 1 +( out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 &( in1 $end
$var wire 1 I( in2 $end
$var wire 1 M( out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 M( in1 $end
$var wire 1 N( out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 &( in1 $end
$var wire 1 K( in2 $end
$var wire 1 O( out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 O( in1 $end
$var wire 1 P( out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 &( in1 $end
$var wire 1 #( in2 $end
$var wire 1 Q( out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 Q( in1 $end
$var wire 1 R( out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 "( in1 $end
$var wire 1 R( in2 $end
$var wire 1 P( in3 $end
$var wire 1 S( out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 S( in1 $end
$var wire 1 T( out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 N( in1 $end
$var wire 1 T( in2 $end
$var wire 1 U( out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 U( in1 $end
$var wire 1 *( out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 %( in1 $end
$var wire 1 N( in2 $end
$var wire 1 V( out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 V( in1 $end
$var wire 1 W( out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 %( in1 $end
$var wire 1 P( in2 $end
$var wire 1 X( out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 X( in1 $end
$var wire 1 Y( out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 %( in1 $end
$var wire 1 R( in2 $end
$var wire 1 Z( out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 Z( in1 $end
$var wire 1 [( out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 %( in1 $end
$var wire 1 "( in2 $end
$var wire 1 \( out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 \( in1 $end
$var wire 1 ]( out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 !( in1 $end
$var wire 1 ]( in2 $end
$var wire 1 [( in3 $end
$var wire 1 ^( out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 ^( in1 $end
$var wire 1 _( out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 _( in1 $end
$var wire 1 Y( in2 $end
$var wire 1 W( in3 $end
$var wire 1 `( out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 `( in1 $end
$var wire 1 )( out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 T# A $end
$var wire 1 ($ B $end
$var wire 1 =$ C_in $end
$var wire 1 *! S $end
$var wire 1 a( C_out $end
$var wire 1 b( nand_bc $end
$var wire 1 c( nand_ac $end
$var wire 1 d( nand_ab $end
$var wire 1 e( and_bc $end
$var wire 1 f( and_ac $end
$var wire 1 g( and_ab $end
$var wire 1 h( nor_res $end

$scope module xor_sum $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 =$ in3 $end
$var wire 1 *! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 ($ in1 $end
$var wire 1 =$ in2 $end
$var wire 1 b( out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 T# in1 $end
$var wire 1 =$ in2 $end
$var wire 1 c( out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 T# in1 $end
$var wire 1 ($ in2 $end
$var wire 1 d( out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 b( in1 $end
$var wire 1 e( out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 c( in1 $end
$var wire 1 f( out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 d( in1 $end
$var wire 1 g( out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 e( in1 $end
$var wire 1 f( in2 $end
$var wire 1 g( in3 $end
$var wire 1 h( out $end
$upscope $end

$scope module res $end
$var wire 1 h( in1 $end
$var wire 1 a( out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 S# A $end
$var wire 1 '$ B $end
$var wire 1 ,( C_in $end
$var wire 1 )! S $end
$var wire 1 i( C_out $end
$var wire 1 j( nand_bc $end
$var wire 1 k( nand_ac $end
$var wire 1 l( nand_ab $end
$var wire 1 m( and_bc $end
$var wire 1 n( and_ac $end
$var wire 1 o( and_ab $end
$var wire 1 p( nor_res $end

$scope module xor_sum $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 ,( in3 $end
$var wire 1 )! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 '$ in1 $end
$var wire 1 ,( in2 $end
$var wire 1 j( out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 S# in1 $end
$var wire 1 ,( in2 $end
$var wire 1 k( out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 S# in1 $end
$var wire 1 '$ in2 $end
$var wire 1 l( out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 j( in1 $end
$var wire 1 m( out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 k( in1 $end
$var wire 1 n( out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 l( in1 $end
$var wire 1 o( out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 m( in1 $end
$var wire 1 n( in2 $end
$var wire 1 o( in3 $end
$var wire 1 p( out $end
$upscope $end

$scope module res $end
$var wire 1 p( in1 $end
$var wire 1 i( out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 R# A $end
$var wire 1 &$ B $end
$var wire 1 +( C_in $end
$var wire 1 (! S $end
$var wire 1 q( C_out $end
$var wire 1 r( nand_bc $end
$var wire 1 s( nand_ac $end
$var wire 1 t( nand_ab $end
$var wire 1 u( and_bc $end
$var wire 1 v( and_ac $end
$var wire 1 w( and_ab $end
$var wire 1 x( nor_res $end

$scope module xor_sum $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 +( in3 $end
$var wire 1 (! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 &$ in1 $end
$var wire 1 +( in2 $end
$var wire 1 r( out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 R# in1 $end
$var wire 1 +( in2 $end
$var wire 1 s( out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 R# in1 $end
$var wire 1 &$ in2 $end
$var wire 1 t( out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 r( in1 $end
$var wire 1 u( out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 s( in1 $end
$var wire 1 v( out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 t( in1 $end
$var wire 1 w( out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 u( in1 $end
$var wire 1 v( in2 $end
$var wire 1 w( in3 $end
$var wire 1 x( out $end
$upscope $end

$scope module res $end
$var wire 1 x( in1 $end
$var wire 1 q( out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 Q# A $end
$var wire 1 %$ B $end
$var wire 1 *( C_in $end
$var wire 1 '! S $end
$var wire 1 y( C_out $end
$var wire 1 z( nand_bc $end
$var wire 1 {( nand_ac $end
$var wire 1 |( nand_ab $end
$var wire 1 }( and_bc $end
$var wire 1 ~( and_ac $end
$var wire 1 !) and_ab $end
$var wire 1 ") nor_res $end

$scope module xor_sum $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 *( in3 $end
$var wire 1 '! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 %$ in1 $end
$var wire 1 *( in2 $end
$var wire 1 z( out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 Q# in1 $end
$var wire 1 *( in2 $end
$var wire 1 {( out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 Q# in1 $end
$var wire 1 %$ in2 $end
$var wire 1 |( out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 z( in1 $end
$var wire 1 }( out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 {( in1 $end
$var wire 1 ~( out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 |( in1 $end
$var wire 1 !) out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 }( in1 $end
$var wire 1 ~( in2 $end
$var wire 1 !) in3 $end
$var wire 1 ") out $end
$upscope $end

$scope module res $end
$var wire 1 ") in1 $end
$var wire 1 y( out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_3 $end
$var parameter 32 #) N $end
$var wire 1 M# A [3] $end
$var wire 1 N# A [2] $end
$var wire 1 O# A [1] $end
$var wire 1 P# A [0] $end
$var wire 1 !$ B [3] $end
$var wire 1 "$ B [2] $end
$var wire 1 #$ B [1] $end
$var wire 1 $$ B [0] $end
$var wire 1 <$ C_in $end
$var wire 1 #! S [3] $end
$var wire 1 $! S [2] $end
$var wire 1 %! S [1] $end
$var wire 1 &! S [0] $end
$var wire 1 2$ C_out $end
$var wire 1 $) g [3] $end
$var wire 1 %) g [2] $end
$var wire 1 &) g [1] $end
$var wire 1 ') g [0] $end
$var wire 1 () p [3] $end
$var wire 1 )) p [2] $end
$var wire 1 *) p [1] $end
$var wire 1 +) p [0] $end
$var wire 1 ,) sub_carry [3] $end
$var wire 1 -) sub_carry [2] $end
$var wire 1 .) sub_carry [1] $end
$var wire 1 /) sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 M# A [3] $end
$var wire 1 N# A [2] $end
$var wire 1 O# A [1] $end
$var wire 1 P# A [0] $end
$var wire 1 !$ B [3] $end
$var wire 1 "$ B [2] $end
$var wire 1 #$ B [1] $end
$var wire 1 $$ B [0] $end
$var wire 1 $) g [3] $end
$var wire 1 %) g [2] $end
$var wire 1 &) g [1] $end
$var wire 1 ') g [0] $end
$var wire 1 () p [3] $end
$var wire 1 )) p [2] $end
$var wire 1 *) p [1] $end
$var wire 1 +) p [0] $end
$var wire 1 0) superG $end
$var wire 1 1) superP $end
$var wire 1 2) g0_n $end
$var wire 1 3) g1_n $end
$var wire 1 4) g2_n $end
$var wire 1 5) g3_n $end
$var wire 1 6) p0_n $end
$var wire 1 7) p1_n $end
$var wire 1 8) p2_n $end
$var wire 1 9) p3_n $end
$var wire 1 :) p2p1g0_nand $end
$var wire 1 ;) p2p1g0_and $end
$var wire 1 <) p3p2p1g0_nand $end
$var wire 1 =) p3p2p1g0_and $end
$var wire 1 >) p3p2g1_nand $end
$var wire 1 ?) p3p2g1_and $end
$var wire 1 @) p3g2_nand $end
$var wire 1 A) p3g2_and $end
$var wire 1 B) G_LHS_nor $end
$var wire 1 C) G_LHS_or $end
$var wire 1 D) G_RHS_nor $end
$var wire 1 E) P_nand_RHS $end
$var wire 1 F) P_and_RHS $end
$var wire 1 G) P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 2) out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 3) out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 4) out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 5) out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 6) out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 7) out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 8) out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 9) out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 2) in1 $end
$var wire 1 ') out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 3) in1 $end
$var wire 1 &) out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 4) in1 $end
$var wire 1 %) out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 5) in1 $end
$var wire 1 $) out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 6) in1 $end
$var wire 1 +) out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 7) in1 $end
$var wire 1 *) out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 8) in1 $end
$var wire 1 )) out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 9) in1 $end
$var wire 1 () out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 *) in1 $end
$var wire 1 ') in2 $end
$var wire 1 )) in3 $end
$var wire 1 :) out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 :) in1 $end
$var wire 1 ;) out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 ;) in1 $end
$var wire 1 () in2 $end
$var wire 1 <) out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 <) in1 $end
$var wire 1 =) out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 () in1 $end
$var wire 1 )) in2 $end
$var wire 1 &) in3 $end
$var wire 1 >) out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 >) in1 $end
$var wire 1 ?) out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 () in1 $end
$var wire 1 %) in2 $end
$var wire 1 @) out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 @) in1 $end
$var wire 1 A) out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 $) in1 $end
$var wire 1 A) in2 $end
$var wire 1 ?) in3 $end
$var wire 1 B) out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 B) in1 $end
$var wire 1 C) out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 =) in1 $end
$var wire 1 C) in2 $end
$var wire 1 D) out $end
$upscope $end

$scope module G_out $end
$var wire 1 D) in1 $end
$var wire 1 0) out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 +) in1 $end
$var wire 1 *) in2 $end
$var wire 1 )) in3 $end
$var wire 1 E) out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 E) in1 $end
$var wire 1 F) out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 F) in1 $end
$var wire 1 () in2 $end
$var wire 1 G) out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 G) in1 $end
$var wire 1 1) out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 $) G [3] $end
$var wire 1 %) G [2] $end
$var wire 1 &) G [1] $end
$var wire 1 ') G [0] $end
$var wire 1 () P [3] $end
$var wire 1 )) P [2] $end
$var wire 1 *) P [1] $end
$var wire 1 +) P [0] $end
$var wire 1 <$ C_in $end
$var wire 1 ,) C_out [3] $end
$var wire 1 -) C_out [2] $end
$var wire 1 .) C_out [1] $end
$var wire 1 /) C_out [0] $end
$var wire 1 H) pc0_nand $end
$var wire 1 I) pc0_and $end
$var wire 1 J) g0_nor $end
$var wire 1 K) p1_nand $end
$var wire 1 L) p1_and $end
$var wire 1 M) p1g0_nand $end
$var wire 1 N) p1g0_and $end
$var wire 1 O) c2_nor $end
$var wire 1 P) p2_nand $end
$var wire 1 Q) p2_and $end
$var wire 1 R) p2g0_nand $end
$var wire 1 S) p2g0_and $end
$var wire 1 T) p2g1_nand $end
$var wire 1 U) p2g1_and $end
$var wire 1 V) c3_nor3_RHS $end
$var wire 1 W) c3_or3_RHS $end
$var wire 1 X) c3_nor $end
$var wire 1 Y) p3_nand $end
$var wire 1 Z) p3_and $end
$var wire 1 [) p3g0_nand $end
$var wire 1 \) p3g0_and $end
$var wire 1 ]) p3g1_nand $end
$var wire 1 ^) p3g1_and $end
$var wire 1 _) p3g2_nand $end
$var wire 1 `) p3g2_and $end
$var wire 1 a) c4_LHS_nor $end
$var wire 1 b) c4_LHS_or $end
$var wire 1 c) c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 +) in1 $end
$var wire 1 <$ in2 $end
$var wire 1 H) out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 H) in1 $end
$var wire 1 I) out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 I) in1 $end
$var wire 1 ') in2 $end
$var wire 1 J) out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 J) in1 $end
$var wire 1 /) out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 I) in1 $end
$var wire 1 *) in2 $end
$var wire 1 K) out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 K) in1 $end
$var wire 1 L) out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 *) in1 $end
$var wire 1 ') in2 $end
$var wire 1 M) out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 M) in1 $end
$var wire 1 N) out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 &) in1 $end
$var wire 1 N) in2 $end
$var wire 1 L) in3 $end
$var wire 1 O) out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 O) in1 $end
$var wire 1 .) out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 )) in1 $end
$var wire 1 L) in2 $end
$var wire 1 P) out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 P) in1 $end
$var wire 1 Q) out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 )) in1 $end
$var wire 1 N) in2 $end
$var wire 1 R) out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 R) in1 $end
$var wire 1 S) out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 )) in1 $end
$var wire 1 &) in2 $end
$var wire 1 T) out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 T) in1 $end
$var wire 1 U) out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 %) in1 $end
$var wire 1 U) in2 $end
$var wire 1 S) in3 $end
$var wire 1 V) out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 V) in1 $end
$var wire 1 W) out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 Q) in1 $end
$var wire 1 W) in2 $end
$var wire 1 X) out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 X) in1 $end
$var wire 1 -) out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 () in1 $end
$var wire 1 Q) in2 $end
$var wire 1 Y) out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 Y) in1 $end
$var wire 1 Z) out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 () in1 $end
$var wire 1 S) in2 $end
$var wire 1 [) out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 [) in1 $end
$var wire 1 \) out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 () in1 $end
$var wire 1 U) in2 $end
$var wire 1 ]) out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 ]) in1 $end
$var wire 1 ^) out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 () in1 $end
$var wire 1 %) in2 $end
$var wire 1 _) out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 _) in1 $end
$var wire 1 `) out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 $) in1 $end
$var wire 1 `) in2 $end
$var wire 1 ^) in3 $end
$var wire 1 a) out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 a) in1 $end
$var wire 1 b) out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 b) in1 $end
$var wire 1 \) in2 $end
$var wire 1 Z) in3 $end
$var wire 1 c) out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 c) in1 $end
$var wire 1 ,) out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 P# A $end
$var wire 1 $$ B $end
$var wire 1 <$ C_in $end
$var wire 1 &! S $end
$var wire 1 d) C_out $end
$var wire 1 e) nand_bc $end
$var wire 1 f) nand_ac $end
$var wire 1 g) nand_ab $end
$var wire 1 h) and_bc $end
$var wire 1 i) and_ac $end
$var wire 1 j) and_ab $end
$var wire 1 k) nor_res $end

$scope module xor_sum $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 <$ in3 $end
$var wire 1 &! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 $$ in1 $end
$var wire 1 <$ in2 $end
$var wire 1 e) out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 P# in1 $end
$var wire 1 <$ in2 $end
$var wire 1 f) out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 P# in1 $end
$var wire 1 $$ in2 $end
$var wire 1 g) out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 e) in1 $end
$var wire 1 h) out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 f) in1 $end
$var wire 1 i) out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 g) in1 $end
$var wire 1 j) out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 h) in1 $end
$var wire 1 i) in2 $end
$var wire 1 j) in3 $end
$var wire 1 k) out $end
$upscope $end

$scope module res $end
$var wire 1 k) in1 $end
$var wire 1 d) out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 O# A $end
$var wire 1 #$ B $end
$var wire 1 /) C_in $end
$var wire 1 %! S $end
$var wire 1 l) C_out $end
$var wire 1 m) nand_bc $end
$var wire 1 n) nand_ac $end
$var wire 1 o) nand_ab $end
$var wire 1 p) and_bc $end
$var wire 1 q) and_ac $end
$var wire 1 r) and_ab $end
$var wire 1 s) nor_res $end

$scope module xor_sum $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 /) in3 $end
$var wire 1 %! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 #$ in1 $end
$var wire 1 /) in2 $end
$var wire 1 m) out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 O# in1 $end
$var wire 1 /) in2 $end
$var wire 1 n) out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 O# in1 $end
$var wire 1 #$ in2 $end
$var wire 1 o) out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 m) in1 $end
$var wire 1 p) out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 n) in1 $end
$var wire 1 q) out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 o) in1 $end
$var wire 1 r) out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 p) in1 $end
$var wire 1 q) in2 $end
$var wire 1 r) in3 $end
$var wire 1 s) out $end
$upscope $end

$scope module res $end
$var wire 1 s) in1 $end
$var wire 1 l) out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 N# A $end
$var wire 1 "$ B $end
$var wire 1 .) C_in $end
$var wire 1 $! S $end
$var wire 1 t) C_out $end
$var wire 1 u) nand_bc $end
$var wire 1 v) nand_ac $end
$var wire 1 w) nand_ab $end
$var wire 1 x) and_bc $end
$var wire 1 y) and_ac $end
$var wire 1 z) and_ab $end
$var wire 1 {) nor_res $end

$scope module xor_sum $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 .) in3 $end
$var wire 1 $! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 "$ in1 $end
$var wire 1 .) in2 $end
$var wire 1 u) out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 N# in1 $end
$var wire 1 .) in2 $end
$var wire 1 v) out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 N# in1 $end
$var wire 1 "$ in2 $end
$var wire 1 w) out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 u) in1 $end
$var wire 1 x) out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 v) in1 $end
$var wire 1 y) out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 w) in1 $end
$var wire 1 z) out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 x) in1 $end
$var wire 1 y) in2 $end
$var wire 1 z) in3 $end
$var wire 1 {) out $end
$upscope $end

$scope module res $end
$var wire 1 {) in1 $end
$var wire 1 t) out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 M# A $end
$var wire 1 !$ B $end
$var wire 1 -) C_in $end
$var wire 1 #! S $end
$var wire 1 |) C_out $end
$var wire 1 }) nand_bc $end
$var wire 1 ~) nand_ac $end
$var wire 1 !* nand_ab $end
$var wire 1 "* and_bc $end
$var wire 1 #* and_ac $end
$var wire 1 $* and_ab $end
$var wire 1 %* nor_res $end

$scope module xor_sum $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 -) in3 $end
$var wire 1 #! out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 !$ in1 $end
$var wire 1 -) in2 $end
$var wire 1 }) out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 M# in1 $end
$var wire 1 -) in2 $end
$var wire 1 ~) out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 M# in1 $end
$var wire 1 !$ in2 $end
$var wire 1 !* out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 }) in1 $end
$var wire 1 "* out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 ~) in1 $end
$var wire 1 #* out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 !* in1 $end
$var wire 1 $* out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 "* in1 $end
$var wire 1 #* in2 $end
$var wire 1 $* in3 $end
$var wire 1 %* out $end
$upscope $end

$scope module res $end
$var wire 1 %* in1 $end
$var wire 1 |) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module IM $end
$var wire 1 3! data_out [15] $end
$var wire 1 4! data_out [14] $end
$var wire 1 5! data_out [13] $end
$var wire 1 6! data_out [12] $end
$var wire 1 7! data_out [11] $end
$var wire 1 8! data_out [10] $end
$var wire 1 9! data_out [9] $end
$var wire 1 :! data_out [8] $end
$var wire 1 ;! data_out [7] $end
$var wire 1 <! data_out [6] $end
$var wire 1 =! data_out [5] $end
$var wire 1 >! data_out [4] $end
$var wire 1 ?! data_out [3] $end
$var wire 1 @! data_out [2] $end
$var wire 1 A! data_out [1] $end
$var wire 1 B! data_out [0] $end
$var wire 1 &* data_in [15] $end
$var wire 1 '* data_in [14] $end
$var wire 1 (* data_in [13] $end
$var wire 1 )* data_in [12] $end
$var wire 1 ** data_in [11] $end
$var wire 1 +* data_in [10] $end
$var wire 1 ,* data_in [9] $end
$var wire 1 -* data_in [8] $end
$var wire 1 .* data_in [7] $end
$var wire 1 /* data_in [6] $end
$var wire 1 0* data_in [5] $end
$var wire 1 1* data_in [4] $end
$var wire 1 2* data_in [3] $end
$var wire 1 3* data_in [2] $end
$var wire 1 4* data_in [1] $end
$var wire 1 5* data_in [0] $end
$var wire 1 M# addr [15] $end
$var wire 1 N# addr [14] $end
$var wire 1 O# addr [13] $end
$var wire 1 P# addr [12] $end
$var wire 1 Q# addr [11] $end
$var wire 1 R# addr [10] $end
$var wire 1 S# addr [9] $end
$var wire 1 T# addr [8] $end
$var wire 1 U# addr [7] $end
$var wire 1 V# addr [6] $end
$var wire 1 W# addr [5] $end
$var wire 1 X# addr [4] $end
$var wire 1 Y# addr [3] $end
$var wire 1 Z# addr [2] $end
$var wire 1 [# addr [1] $end
$var wire 1 \# addr [0] $end
$var wire 1 6* enable $end
$var wire 1 7* wr $end
$var wire 1 E! createdump $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 8* loaded $end
$var reg 17 9* largest [16:0] $end
$var integer 32 :* mcd $end
$var integer 32 ;* i $end
$upscope $end
$upscope $end

$scope module decode $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 | err $end
$var wire 1 (# writeRegEn $end
$var wire 1 ,# writeRegData [15] $end
$var wire 1 -# writeRegData [14] $end
$var wire 1 .# writeRegData [13] $end
$var wire 1 /# writeRegData [12] $end
$var wire 1 0# writeRegData [11] $end
$var wire 1 1# writeRegData [10] $end
$var wire 1 2# writeRegData [9] $end
$var wire 1 3# writeRegData [8] $end
$var wire 1 4# writeRegData [7] $end
$var wire 1 5# writeRegData [6] $end
$var wire 1 6# writeRegData [5] $end
$var wire 1 7# writeRegData [4] $end
$var wire 1 8# writeRegData [3] $end
$var wire 1 9# writeRegData [2] $end
$var wire 1 :# writeRegData [1] $end
$var wire 1 ;# writeRegData [0] $end
$var wire 1 3! instr [15] $end
$var wire 1 4! instr [14] $end
$var wire 1 5! instr [13] $end
$var wire 1 6! instr [12] $end
$var wire 1 7! instr [11] $end
$var wire 1 8! instr [10] $end
$var wire 1 9! instr [9] $end
$var wire 1 :! instr [8] $end
$var wire 1 ;! instr [7] $end
$var wire 1 <! instr [6] $end
$var wire 1 =! instr [5] $end
$var wire 1 >! instr [4] $end
$var wire 1 ?! instr [3] $end
$var wire 1 @! instr [2] $end
$var wire 1 A! instr [1] $end
$var wire 1 B! instr [0] $end
$var wire 1 #! PC_add_2 [15] $end
$var wire 1 $! PC_add_2 [14] $end
$var wire 1 %! PC_add_2 [13] $end
$var wire 1 &! PC_add_2 [12] $end
$var wire 1 '! PC_add_2 [11] $end
$var wire 1 (! PC_add_2 [10] $end
$var wire 1 )! PC_add_2 [9] $end
$var wire 1 *! PC_add_2 [8] $end
$var wire 1 +! PC_add_2 [7] $end
$var wire 1 ,! PC_add_2 [6] $end
$var wire 1 -! PC_add_2 [5] $end
$var wire 1 .! PC_add_2 [4] $end
$var wire 1 /! PC_add_2 [3] $end
$var wire 1 0! PC_add_2 [2] $end
$var wire 1 1! PC_add_2 [1] $end
$var wire 1 2! PC_add_2 [0] $end
$var wire 1 )# writeRegSel [2] $end
$var wire 1 *# writeRegSel [1] $end
$var wire 1 +# writeRegSel [0] $end
$var wire 1 C! BorJDecode_CNTRL $end
$var wire 1 D! BorJSel_CNTRL $end
$var wire 1 E! HaltSel_CNTRL $end
$var wire 1 H! ALUInA [15] $end
$var wire 1 I! ALUInA [14] $end
$var wire 1 J! ALUInA [13] $end
$var wire 1 K! ALUInA [12] $end
$var wire 1 L! ALUInA [11] $end
$var wire 1 M! ALUInA [10] $end
$var wire 1 N! ALUInA [9] $end
$var wire 1 O! ALUInA [8] $end
$var wire 1 P! ALUInA [7] $end
$var wire 1 Q! ALUInA [6] $end
$var wire 1 R! ALUInA [5] $end
$var wire 1 S! ALUInA [4] $end
$var wire 1 T! ALUInA [3] $end
$var wire 1 U! ALUInA [2] $end
$var wire 1 V! ALUInA [1] $end
$var wire 1 W! ALUInA [0] $end
$var wire 1 :" instr_op_ext [6] $end
$var wire 1 ;" instr_op_ext [5] $end
$var wire 1 <" instr_op_ext [4] $end
$var wire 1 =" instr_op_ext [3] $end
$var wire 1 >" instr_op_ext [2] $end
$var wire 1 ?" instr_op_ext [1] $end
$var wire 1 @" instr_op_ext [0] $end
$var reg 1 <* writeEnDecode $end
$var reg 1 =* writeSetInDecode $end
$var reg 16 >* writeRegDataDecode [15:0] $end
$var reg 16 ?* BorJaddrDecode [15:0] $end
$var reg 16 @* ALUInB [15:0] $end
$var reg 3 A* writeRegSelDecode [2:0] $end
$var wire 1 *" memData [15] $end
$var wire 1 +" memData [14] $end
$var wire 1 ," memData [13] $end
$var wire 1 -" memData [12] $end
$var wire 1 ." memData [11] $end
$var wire 1 /" memData [10] $end
$var wire 1 0" memData [9] $end
$var wire 1 1" memData [8] $end
$var wire 1 2" memData [7] $end
$var wire 1 3" memData [6] $end
$var wire 1 4" memData [5] $end
$var wire 1 5" memData [4] $end
$var wire 1 6" memData [3] $end
$var wire 1 7" memData [2] $end
$var wire 1 8" memData [1] $end
$var wire 1 9" memData [0] $end
$var wire 1 B* reg1Data [15] $end
$var wire 1 C* reg1Data [14] $end
$var wire 1 D* reg1Data [13] $end
$var wire 1 E* reg1Data [12] $end
$var wire 1 F* reg1Data [11] $end
$var wire 1 G* reg1Data [10] $end
$var wire 1 H* reg1Data [9] $end
$var wire 1 I* reg1Data [8] $end
$var wire 1 J* reg1Data [7] $end
$var wire 1 K* reg1Data [6] $end
$var wire 1 L* reg1Data [5] $end
$var wire 1 M* reg1Data [4] $end
$var wire 1 N* reg1Data [3] $end
$var wire 1 O* reg1Data [2] $end
$var wire 1 P* reg1Data [1] $end
$var wire 1 Q* reg1Data [0] $end
$var wire 1 R* reg2Data [15] $end
$var wire 1 S* reg2Data [14] $end
$var wire 1 T* reg2Data [13] $end
$var wire 1 U* reg2Data [12] $end
$var wire 1 V* reg2Data [11] $end
$var wire 1 W* reg2Data [10] $end
$var wire 1 X* reg2Data [9] $end
$var wire 1 Y* reg2Data [8] $end
$var wire 1 Z* reg2Data [7] $end
$var wire 1 [* reg2Data [6] $end
$var wire 1 \* reg2Data [5] $end
$var wire 1 ]* reg2Data [4] $end
$var wire 1 ^* reg2Data [3] $end
$var wire 1 _* reg2Data [2] $end
$var wire 1 `* reg2Data [1] $end
$var wire 1 a* reg2Data [0] $end
$var wire 1 b* immZeroExtIform1 [15] $end
$var wire 1 c* immZeroExtIform1 [14] $end
$var wire 1 d* immZeroExtIform1 [13] $end
$var wire 1 e* immZeroExtIform1 [12] $end
$var wire 1 f* immZeroExtIform1 [11] $end
$var wire 1 g* immZeroExtIform1 [10] $end
$var wire 1 h* immZeroExtIform1 [9] $end
$var wire 1 i* immZeroExtIform1 [8] $end
$var wire 1 j* immZeroExtIform1 [7] $end
$var wire 1 k* immZeroExtIform1 [6] $end
$var wire 1 l* immZeroExtIform1 [5] $end
$var wire 1 m* immZeroExtIform1 [4] $end
$var wire 1 n* immZeroExtIform1 [3] $end
$var wire 1 o* immZeroExtIform1 [2] $end
$var wire 1 p* immZeroExtIform1 [1] $end
$var wire 1 q* immZeroExtIform1 [0] $end
$var wire 1 r* immSignExtIform1 [15] $end
$var wire 1 s* immSignExtIform1 [14] $end
$var wire 1 t* immSignExtIform1 [13] $end
$var wire 1 u* immSignExtIform1 [12] $end
$var wire 1 v* immSignExtIform1 [11] $end
$var wire 1 w* immSignExtIform1 [10] $end
$var wire 1 x* immSignExtIform1 [9] $end
$var wire 1 y* immSignExtIform1 [8] $end
$var wire 1 z* immSignExtIform1 [7] $end
$var wire 1 {* immSignExtIform1 [6] $end
$var wire 1 |* immSignExtIform1 [5] $end
$var wire 1 }* immSignExtIform1 [4] $end
$var wire 1 ~* immSignExtIform1 [3] $end
$var wire 1 !+ immSignExtIform1 [2] $end
$var wire 1 "+ immSignExtIform1 [1] $end
$var wire 1 #+ immSignExtIform1 [0] $end
$var wire 1 $+ immSignExtIform2 [15] $end
$var wire 1 %+ immSignExtIform2 [14] $end
$var wire 1 &+ immSignExtIform2 [13] $end
$var wire 1 '+ immSignExtIform2 [12] $end
$var wire 1 (+ immSignExtIform2 [11] $end
$var wire 1 )+ immSignExtIform2 [10] $end
$var wire 1 *+ immSignExtIform2 [9] $end
$var wire 1 ++ immSignExtIform2 [8] $end
$var wire 1 ,+ immSignExtIform2 [7] $end
$var wire 1 -+ immSignExtIform2 [6] $end
$var wire 1 .+ immSignExtIform2 [5] $end
$var wire 1 /+ immSignExtIform2 [4] $end
$var wire 1 0+ immSignExtIform2 [3] $end
$var wire 1 1+ immSignExtIform2 [2] $end
$var wire 1 2+ immSignExtIform2 [1] $end
$var wire 1 3+ immSignExtIform2 [0] $end
$var wire 1 4+ immSignExtJump [15] $end
$var wire 1 5+ immSignExtJump [14] $end
$var wire 1 6+ immSignExtJump [13] $end
$var wire 1 7+ immSignExtJump [12] $end
$var wire 1 8+ immSignExtJump [11] $end
$var wire 1 9+ immSignExtJump [10] $end
$var wire 1 :+ immSignExtJump [9] $end
$var wire 1 ;+ immSignExtJump [8] $end
$var wire 1 <+ immSignExtJump [7] $end
$var wire 1 =+ immSignExtJump [6] $end
$var wire 1 >+ immSignExtJump [5] $end
$var wire 1 ?+ immSignExtJump [4] $end
$var wire 1 @+ immSignExtJump [3] $end
$var wire 1 A+ immSignExtJump [2] $end
$var wire 1 B+ immSignExtJump [1] $end
$var wire 1 C+ immSignExtJump [0] $end
$var wire 1 D+ beq_sig $end
$var wire 1 E+ blt_sig $end
$var reg 1 F+ take_branch $end
$var wire 1 G+ writeEn $end

$scope module registerFile $end
$var parameter 32 H+ regSize $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 8! read1RegSel [2] $end
$var wire 1 9! read1RegSel [1] $end
$var wire 1 :! read1RegSel [0] $end
$var wire 1 ;! read2RegSel [2] $end
$var wire 1 <! read2RegSel [1] $end
$var wire 1 =! read2RegSel [0] $end
$var wire 1 )# writeRegSel [2] $end
$var wire 1 *# writeRegSel [1] $end
$var wire 1 +# writeRegSel [0] $end
$var wire 1 ,# writeData [15] $end
$var wire 1 -# writeData [14] $end
$var wire 1 .# writeData [13] $end
$var wire 1 /# writeData [12] $end
$var wire 1 0# writeData [11] $end
$var wire 1 1# writeData [10] $end
$var wire 1 2# writeData [9] $end
$var wire 1 3# writeData [8] $end
$var wire 1 4# writeData [7] $end
$var wire 1 5# writeData [6] $end
$var wire 1 6# writeData [5] $end
$var wire 1 7# writeData [4] $end
$var wire 1 8# writeData [3] $end
$var wire 1 9# writeData [2] $end
$var wire 1 :# writeData [1] $end
$var wire 1 ;# writeData [0] $end
$var wire 1 G+ writeEn $end
$var reg 16 I+ read1Data [15:0] $end
$var reg 16 J+ read2Data [15:0] $end
$var wire 1 | err $end
$var reg 1 K+ err_rs $end
$var reg 1 L+ err_rt $end
$var wire 1 M+ err_wr $end
$var wire 1 N+ reg1_data [15] $end
$var wire 1 O+ reg1_data [14] $end
$var wire 1 P+ reg1_data [13] $end
$var wire 1 Q+ reg1_data [12] $end
$var wire 1 R+ reg1_data [11] $end
$var wire 1 S+ reg1_data [10] $end
$var wire 1 T+ reg1_data [9] $end
$var wire 1 U+ reg1_data [8] $end
$var wire 1 V+ reg1_data [7] $end
$var wire 1 W+ reg1_data [6] $end
$var wire 1 X+ reg1_data [5] $end
$var wire 1 Y+ reg1_data [4] $end
$var wire 1 Z+ reg1_data [3] $end
$var wire 1 [+ reg1_data [2] $end
$var wire 1 \+ reg1_data [1] $end
$var wire 1 ]+ reg1_data [0] $end
$var wire 1 ^+ reg2_data [15] $end
$var wire 1 _+ reg2_data [14] $end
$var wire 1 `+ reg2_data [13] $end
$var wire 1 a+ reg2_data [12] $end
$var wire 1 b+ reg2_data [11] $end
$var wire 1 c+ reg2_data [10] $end
$var wire 1 d+ reg2_data [9] $end
$var wire 1 e+ reg2_data [8] $end
$var wire 1 f+ reg2_data [7] $end
$var wire 1 g+ reg2_data [6] $end
$var wire 1 h+ reg2_data [5] $end
$var wire 1 i+ reg2_data [4] $end
$var wire 1 j+ reg2_data [3] $end
$var wire 1 k+ reg2_data [2] $end
$var wire 1 l+ reg2_data [1] $end
$var wire 1 m+ reg2_data [0] $end
$var wire 1 n+ reg3_data [15] $end
$var wire 1 o+ reg3_data [14] $end
$var wire 1 p+ reg3_data [13] $end
$var wire 1 q+ reg3_data [12] $end
$var wire 1 r+ reg3_data [11] $end
$var wire 1 s+ reg3_data [10] $end
$var wire 1 t+ reg3_data [9] $end
$var wire 1 u+ reg3_data [8] $end
$var wire 1 v+ reg3_data [7] $end
$var wire 1 w+ reg3_data [6] $end
$var wire 1 x+ reg3_data [5] $end
$var wire 1 y+ reg3_data [4] $end
$var wire 1 z+ reg3_data [3] $end
$var wire 1 {+ reg3_data [2] $end
$var wire 1 |+ reg3_data [1] $end
$var wire 1 }+ reg3_data [0] $end
$var wire 1 ~+ reg4_data [15] $end
$var wire 1 !, reg4_data [14] $end
$var wire 1 ", reg4_data [13] $end
$var wire 1 #, reg4_data [12] $end
$var wire 1 $, reg4_data [11] $end
$var wire 1 %, reg4_data [10] $end
$var wire 1 &, reg4_data [9] $end
$var wire 1 ', reg4_data [8] $end
$var wire 1 (, reg4_data [7] $end
$var wire 1 ), reg4_data [6] $end
$var wire 1 *, reg4_data [5] $end
$var wire 1 +, reg4_data [4] $end
$var wire 1 ,, reg4_data [3] $end
$var wire 1 -, reg4_data [2] $end
$var wire 1 ., reg4_data [1] $end
$var wire 1 /, reg4_data [0] $end
$var wire 1 0, reg5_data [15] $end
$var wire 1 1, reg5_data [14] $end
$var wire 1 2, reg5_data [13] $end
$var wire 1 3, reg5_data [12] $end
$var wire 1 4, reg5_data [11] $end
$var wire 1 5, reg5_data [10] $end
$var wire 1 6, reg5_data [9] $end
$var wire 1 7, reg5_data [8] $end
$var wire 1 8, reg5_data [7] $end
$var wire 1 9, reg5_data [6] $end
$var wire 1 :, reg5_data [5] $end
$var wire 1 ;, reg5_data [4] $end
$var wire 1 <, reg5_data [3] $end
$var wire 1 =, reg5_data [2] $end
$var wire 1 >, reg5_data [1] $end
$var wire 1 ?, reg5_data [0] $end
$var wire 1 @, reg6_data [15] $end
$var wire 1 A, reg6_data [14] $end
$var wire 1 B, reg6_data [13] $end
$var wire 1 C, reg6_data [12] $end
$var wire 1 D, reg6_data [11] $end
$var wire 1 E, reg6_data [10] $end
$var wire 1 F, reg6_data [9] $end
$var wire 1 G, reg6_data [8] $end
$var wire 1 H, reg6_data [7] $end
$var wire 1 I, reg6_data [6] $end
$var wire 1 J, reg6_data [5] $end
$var wire 1 K, reg6_data [4] $end
$var wire 1 L, reg6_data [3] $end
$var wire 1 M, reg6_data [2] $end
$var wire 1 N, reg6_data [1] $end
$var wire 1 O, reg6_data [0] $end
$var wire 1 P, reg7_data [15] $end
$var wire 1 Q, reg7_data [14] $end
$var wire 1 R, reg7_data [13] $end
$var wire 1 S, reg7_data [12] $end
$var wire 1 T, reg7_data [11] $end
$var wire 1 U, reg7_data [10] $end
$var wire 1 V, reg7_data [9] $end
$var wire 1 W, reg7_data [8] $end
$var wire 1 X, reg7_data [7] $end
$var wire 1 Y, reg7_data [6] $end
$var wire 1 Z, reg7_data [5] $end
$var wire 1 [, reg7_data [4] $end
$var wire 1 \, reg7_data [3] $end
$var wire 1 ], reg7_data [2] $end
$var wire 1 ^, reg7_data [1] $end
$var wire 1 _, reg7_data [0] $end
$var wire 1 `, reg8_data [15] $end
$var wire 1 a, reg8_data [14] $end
$var wire 1 b, reg8_data [13] $end
$var wire 1 c, reg8_data [12] $end
$var wire 1 d, reg8_data [11] $end
$var wire 1 e, reg8_data [10] $end
$var wire 1 f, reg8_data [9] $end
$var wire 1 g, reg8_data [8] $end
$var wire 1 h, reg8_data [7] $end
$var wire 1 i, reg8_data [6] $end
$var wire 1 j, reg8_data [5] $end
$var wire 1 k, reg8_data [4] $end
$var wire 1 l, reg8_data [3] $end
$var wire 1 m, reg8_data [2] $end
$var wire 1 n, reg8_data [1] $end
$var wire 1 o, reg8_data [0] $end
$var wire 1 p, reg1_write [15] $end
$var wire 1 q, reg1_write [14] $end
$var wire 1 r, reg1_write [13] $end
$var wire 1 s, reg1_write [12] $end
$var wire 1 t, reg1_write [11] $end
$var wire 1 u, reg1_write [10] $end
$var wire 1 v, reg1_write [9] $end
$var wire 1 w, reg1_write [8] $end
$var wire 1 x, reg1_write [7] $end
$var wire 1 y, reg1_write [6] $end
$var wire 1 z, reg1_write [5] $end
$var wire 1 {, reg1_write [4] $end
$var wire 1 |, reg1_write [3] $end
$var wire 1 }, reg1_write [2] $end
$var wire 1 ~, reg1_write [1] $end
$var wire 1 !- reg1_write [0] $end
$var wire 1 "- reg2_write [15] $end
$var wire 1 #- reg2_write [14] $end
$var wire 1 $- reg2_write [13] $end
$var wire 1 %- reg2_write [12] $end
$var wire 1 &- reg2_write [11] $end
$var wire 1 '- reg2_write [10] $end
$var wire 1 (- reg2_write [9] $end
$var wire 1 )- reg2_write [8] $end
$var wire 1 *- reg2_write [7] $end
$var wire 1 +- reg2_write [6] $end
$var wire 1 ,- reg2_write [5] $end
$var wire 1 -- reg2_write [4] $end
$var wire 1 .- reg2_write [3] $end
$var wire 1 /- reg2_write [2] $end
$var wire 1 0- reg2_write [1] $end
$var wire 1 1- reg2_write [0] $end
$var wire 1 2- reg3_write [15] $end
$var wire 1 3- reg3_write [14] $end
$var wire 1 4- reg3_write [13] $end
$var wire 1 5- reg3_write [12] $end
$var wire 1 6- reg3_write [11] $end
$var wire 1 7- reg3_write [10] $end
$var wire 1 8- reg3_write [9] $end
$var wire 1 9- reg3_write [8] $end
$var wire 1 :- reg3_write [7] $end
$var wire 1 ;- reg3_write [6] $end
$var wire 1 <- reg3_write [5] $end
$var wire 1 =- reg3_write [4] $end
$var wire 1 >- reg3_write [3] $end
$var wire 1 ?- reg3_write [2] $end
$var wire 1 @- reg3_write [1] $end
$var wire 1 A- reg3_write [0] $end
$var wire 1 B- reg4_write [15] $end
$var wire 1 C- reg4_write [14] $end
$var wire 1 D- reg4_write [13] $end
$var wire 1 E- reg4_write [12] $end
$var wire 1 F- reg4_write [11] $end
$var wire 1 G- reg4_write [10] $end
$var wire 1 H- reg4_write [9] $end
$var wire 1 I- reg4_write [8] $end
$var wire 1 J- reg4_write [7] $end
$var wire 1 K- reg4_write [6] $end
$var wire 1 L- reg4_write [5] $end
$var wire 1 M- reg4_write [4] $end
$var wire 1 N- reg4_write [3] $end
$var wire 1 O- reg4_write [2] $end
$var wire 1 P- reg4_write [1] $end
$var wire 1 Q- reg4_write [0] $end
$var wire 1 R- reg5_write [15] $end
$var wire 1 S- reg5_write [14] $end
$var wire 1 T- reg5_write [13] $end
$var wire 1 U- reg5_write [12] $end
$var wire 1 V- reg5_write [11] $end
$var wire 1 W- reg5_write [10] $end
$var wire 1 X- reg5_write [9] $end
$var wire 1 Y- reg5_write [8] $end
$var wire 1 Z- reg5_write [7] $end
$var wire 1 [- reg5_write [6] $end
$var wire 1 \- reg5_write [5] $end
$var wire 1 ]- reg5_write [4] $end
$var wire 1 ^- reg5_write [3] $end
$var wire 1 _- reg5_write [2] $end
$var wire 1 `- reg5_write [1] $end
$var wire 1 a- reg5_write [0] $end
$var wire 1 b- reg6_write [15] $end
$var wire 1 c- reg6_write [14] $end
$var wire 1 d- reg6_write [13] $end
$var wire 1 e- reg6_write [12] $end
$var wire 1 f- reg6_write [11] $end
$var wire 1 g- reg6_write [10] $end
$var wire 1 h- reg6_write [9] $end
$var wire 1 i- reg6_write [8] $end
$var wire 1 j- reg6_write [7] $end
$var wire 1 k- reg6_write [6] $end
$var wire 1 l- reg6_write [5] $end
$var wire 1 m- reg6_write [4] $end
$var wire 1 n- reg6_write [3] $end
$var wire 1 o- reg6_write [2] $end
$var wire 1 p- reg6_write [1] $end
$var wire 1 q- reg6_write [0] $end
$var wire 1 r- reg7_write [15] $end
$var wire 1 s- reg7_write [14] $end
$var wire 1 t- reg7_write [13] $end
$var wire 1 u- reg7_write [12] $end
$var wire 1 v- reg7_write [11] $end
$var wire 1 w- reg7_write [10] $end
$var wire 1 x- reg7_write [9] $end
$var wire 1 y- reg7_write [8] $end
$var wire 1 z- reg7_write [7] $end
$var wire 1 {- reg7_write [6] $end
$var wire 1 |- reg7_write [5] $end
$var wire 1 }- reg7_write [4] $end
$var wire 1 ~- reg7_write [3] $end
$var wire 1 !. reg7_write [2] $end
$var wire 1 ". reg7_write [1] $end
$var wire 1 #. reg7_write [0] $end
$var wire 1 $. reg8_write [15] $end
$var wire 1 %. reg8_write [14] $end
$var wire 1 &. reg8_write [13] $end
$var wire 1 '. reg8_write [12] $end
$var wire 1 (. reg8_write [11] $end
$var wire 1 ). reg8_write [10] $end
$var wire 1 *. reg8_write [9] $end
$var wire 1 +. reg8_write [8] $end
$var wire 1 ,. reg8_write [7] $end
$var wire 1 -. reg8_write [6] $end
$var wire 1 .. reg8_write [5] $end
$var wire 1 /. reg8_write [4] $end
$var wire 1 0. reg8_write [3] $end
$var wire 1 1. reg8_write [2] $end
$var wire 1 2. reg8_write [1] $end
$var wire 1 3. reg8_write [0] $end

$scope module reg1 $end
$var parameter 32 4. regSize $end
$var wire 1 p, In [15] $end
$var wire 1 q, In [14] $end
$var wire 1 r, In [13] $end
$var wire 1 s, In [12] $end
$var wire 1 t, In [11] $end
$var wire 1 u, In [10] $end
$var wire 1 v, In [9] $end
$var wire 1 w, In [8] $end
$var wire 1 x, In [7] $end
$var wire 1 y, In [6] $end
$var wire 1 z, In [5] $end
$var wire 1 {, In [4] $end
$var wire 1 |, In [3] $end
$var wire 1 }, In [2] $end
$var wire 1 ~, In [1] $end
$var wire 1 !- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 N+ Out [15] $end
$var wire 1 O+ Out [14] $end
$var wire 1 P+ Out [13] $end
$var wire 1 Q+ Out [12] $end
$var wire 1 R+ Out [11] $end
$var wire 1 S+ Out [10] $end
$var wire 1 T+ Out [9] $end
$var wire 1 U+ Out [8] $end
$var wire 1 V+ Out [7] $end
$var wire 1 W+ Out [6] $end
$var wire 1 X+ Out [5] $end
$var wire 1 Y+ Out [4] $end
$var wire 1 Z+ Out [3] $end
$var wire 1 [+ Out [2] $end
$var wire 1 \+ Out [1] $end
$var wire 1 ]+ Out [0] $end

$scope module regFF[15] $end
$var wire 1 N+ q $end
$var wire 1 p, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 5. state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 O+ q $end
$var wire 1 q, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 6. state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 P+ q $end
$var wire 1 r, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 7. state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 Q+ q $end
$var wire 1 s, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 8. state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 R+ q $end
$var wire 1 t, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 9. state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 S+ q $end
$var wire 1 u, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 :. state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 T+ q $end
$var wire 1 v, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ;. state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 U+ q $end
$var wire 1 w, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 <. state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 V+ q $end
$var wire 1 x, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 =. state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 W+ q $end
$var wire 1 y, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 >. state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 X+ q $end
$var wire 1 z, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ?. state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 Y+ q $end
$var wire 1 {, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 @. state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 Z+ q $end
$var wire 1 |, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 A. state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 [+ q $end
$var wire 1 }, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 B. state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 \+ q $end
$var wire 1 ~, d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C. state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 ]+ q $end
$var wire 1 !- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D. state $end
$upscope $end
$upscope $end

$scope module reg2 $end
$var parameter 32 E. regSize $end
$var wire 1 "- In [15] $end
$var wire 1 #- In [14] $end
$var wire 1 $- In [13] $end
$var wire 1 %- In [12] $end
$var wire 1 &- In [11] $end
$var wire 1 '- In [10] $end
$var wire 1 (- In [9] $end
$var wire 1 )- In [8] $end
$var wire 1 *- In [7] $end
$var wire 1 +- In [6] $end
$var wire 1 ,- In [5] $end
$var wire 1 -- In [4] $end
$var wire 1 .- In [3] $end
$var wire 1 /- In [2] $end
$var wire 1 0- In [1] $end
$var wire 1 1- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 ^+ Out [15] $end
$var wire 1 _+ Out [14] $end
$var wire 1 `+ Out [13] $end
$var wire 1 a+ Out [12] $end
$var wire 1 b+ Out [11] $end
$var wire 1 c+ Out [10] $end
$var wire 1 d+ Out [9] $end
$var wire 1 e+ Out [8] $end
$var wire 1 f+ Out [7] $end
$var wire 1 g+ Out [6] $end
$var wire 1 h+ Out [5] $end
$var wire 1 i+ Out [4] $end
$var wire 1 j+ Out [3] $end
$var wire 1 k+ Out [2] $end
$var wire 1 l+ Out [1] $end
$var wire 1 m+ Out [0] $end

$scope module regFF[15] $end
$var wire 1 ^+ q $end
$var wire 1 "- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F. state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 _+ q $end
$var wire 1 #- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G. state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 `+ q $end
$var wire 1 $- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H. state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 a+ q $end
$var wire 1 %- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 I. state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 b+ q $end
$var wire 1 &- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 J. state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 c+ q $end
$var wire 1 '- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 K. state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 d+ q $end
$var wire 1 (- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 L. state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 e+ q $end
$var wire 1 )- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 M. state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 f+ q $end
$var wire 1 *- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 N. state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 g+ q $end
$var wire 1 +- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 O. state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 h+ q $end
$var wire 1 ,- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 P. state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 i+ q $end
$var wire 1 -- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Q. state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 j+ q $end
$var wire 1 .- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 R. state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 k+ q $end
$var wire 1 /- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 S. state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 l+ q $end
$var wire 1 0- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 T. state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 m+ q $end
$var wire 1 1- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 U. state $end
$upscope $end
$upscope $end

$scope module reg3 $end
$var parameter 32 V. regSize $end
$var wire 1 2- In [15] $end
$var wire 1 3- In [14] $end
$var wire 1 4- In [13] $end
$var wire 1 5- In [12] $end
$var wire 1 6- In [11] $end
$var wire 1 7- In [10] $end
$var wire 1 8- In [9] $end
$var wire 1 9- In [8] $end
$var wire 1 :- In [7] $end
$var wire 1 ;- In [6] $end
$var wire 1 <- In [5] $end
$var wire 1 =- In [4] $end
$var wire 1 >- In [3] $end
$var wire 1 ?- In [2] $end
$var wire 1 @- In [1] $end
$var wire 1 A- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 n+ Out [15] $end
$var wire 1 o+ Out [14] $end
$var wire 1 p+ Out [13] $end
$var wire 1 q+ Out [12] $end
$var wire 1 r+ Out [11] $end
$var wire 1 s+ Out [10] $end
$var wire 1 t+ Out [9] $end
$var wire 1 u+ Out [8] $end
$var wire 1 v+ Out [7] $end
$var wire 1 w+ Out [6] $end
$var wire 1 x+ Out [5] $end
$var wire 1 y+ Out [4] $end
$var wire 1 z+ Out [3] $end
$var wire 1 {+ Out [2] $end
$var wire 1 |+ Out [1] $end
$var wire 1 }+ Out [0] $end

$scope module regFF[15] $end
$var wire 1 n+ q $end
$var wire 1 2- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 W. state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 o+ q $end
$var wire 1 3- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 X. state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 p+ q $end
$var wire 1 4- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Y. state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 q+ q $end
$var wire 1 5- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Z. state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 r+ q $end
$var wire 1 6- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 [. state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 s+ q $end
$var wire 1 7- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 \. state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 t+ q $end
$var wire 1 8- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ]. state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 u+ q $end
$var wire 1 9- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ^. state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 v+ q $end
$var wire 1 :- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 _. state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 w+ q $end
$var wire 1 ;- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 `. state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 x+ q $end
$var wire 1 <- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 a. state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 y+ q $end
$var wire 1 =- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 b. state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 z+ q $end
$var wire 1 >- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 c. state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 {+ q $end
$var wire 1 ?- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 d. state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 |+ q $end
$var wire 1 @- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 e. state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 }+ q $end
$var wire 1 A- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 f. state $end
$upscope $end
$upscope $end

$scope module reg4 $end
$var parameter 32 g. regSize $end
$var wire 1 B- In [15] $end
$var wire 1 C- In [14] $end
$var wire 1 D- In [13] $end
$var wire 1 E- In [12] $end
$var wire 1 F- In [11] $end
$var wire 1 G- In [10] $end
$var wire 1 H- In [9] $end
$var wire 1 I- In [8] $end
$var wire 1 J- In [7] $end
$var wire 1 K- In [6] $end
$var wire 1 L- In [5] $end
$var wire 1 M- In [4] $end
$var wire 1 N- In [3] $end
$var wire 1 O- In [2] $end
$var wire 1 P- In [1] $end
$var wire 1 Q- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 ~+ Out [15] $end
$var wire 1 !, Out [14] $end
$var wire 1 ", Out [13] $end
$var wire 1 #, Out [12] $end
$var wire 1 $, Out [11] $end
$var wire 1 %, Out [10] $end
$var wire 1 &, Out [9] $end
$var wire 1 ', Out [8] $end
$var wire 1 (, Out [7] $end
$var wire 1 ), Out [6] $end
$var wire 1 *, Out [5] $end
$var wire 1 +, Out [4] $end
$var wire 1 ,, Out [3] $end
$var wire 1 -, Out [2] $end
$var wire 1 ., Out [1] $end
$var wire 1 /, Out [0] $end

$scope module regFF[15] $end
$var wire 1 ~+ q $end
$var wire 1 B- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 h. state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 !, q $end
$var wire 1 C- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 i. state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 ", q $end
$var wire 1 D- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 j. state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 #, q $end
$var wire 1 E- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 k. state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 $, q $end
$var wire 1 F- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 l. state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 %, q $end
$var wire 1 G- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 m. state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 &, q $end
$var wire 1 H- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 n. state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 ', q $end
$var wire 1 I- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 o. state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 (, q $end
$var wire 1 J- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 p. state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 ), q $end
$var wire 1 K- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 q. state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 *, q $end
$var wire 1 L- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 r. state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 +, q $end
$var wire 1 M- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 s. state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 ,, q $end
$var wire 1 N- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 t. state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 -, q $end
$var wire 1 O- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 u. state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 ., q $end
$var wire 1 P- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 v. state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 /, q $end
$var wire 1 Q- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 w. state $end
$upscope $end
$upscope $end

$scope module reg5 $end
$var parameter 32 x. regSize $end
$var wire 1 R- In [15] $end
$var wire 1 S- In [14] $end
$var wire 1 T- In [13] $end
$var wire 1 U- In [12] $end
$var wire 1 V- In [11] $end
$var wire 1 W- In [10] $end
$var wire 1 X- In [9] $end
$var wire 1 Y- In [8] $end
$var wire 1 Z- In [7] $end
$var wire 1 [- In [6] $end
$var wire 1 \- In [5] $end
$var wire 1 ]- In [4] $end
$var wire 1 ^- In [3] $end
$var wire 1 _- In [2] $end
$var wire 1 `- In [1] $end
$var wire 1 a- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 0, Out [15] $end
$var wire 1 1, Out [14] $end
$var wire 1 2, Out [13] $end
$var wire 1 3, Out [12] $end
$var wire 1 4, Out [11] $end
$var wire 1 5, Out [10] $end
$var wire 1 6, Out [9] $end
$var wire 1 7, Out [8] $end
$var wire 1 8, Out [7] $end
$var wire 1 9, Out [6] $end
$var wire 1 :, Out [5] $end
$var wire 1 ;, Out [4] $end
$var wire 1 <, Out [3] $end
$var wire 1 =, Out [2] $end
$var wire 1 >, Out [1] $end
$var wire 1 ?, Out [0] $end

$scope module regFF[15] $end
$var wire 1 0, q $end
$var wire 1 R- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 y. state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 1, q $end
$var wire 1 S- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 z. state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 2, q $end
$var wire 1 T- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 {. state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 3, q $end
$var wire 1 U- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 |. state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 4, q $end
$var wire 1 V- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 }. state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 5, q $end
$var wire 1 W- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ~. state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 6, q $end
$var wire 1 X- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 !/ state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 7, q $end
$var wire 1 Y- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 "/ state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 8, q $end
$var wire 1 Z- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 #/ state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 9, q $end
$var wire 1 [- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 $/ state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 :, q $end
$var wire 1 \- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 %/ state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 ;, q $end
$var wire 1 ]- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 &/ state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 <, q $end
$var wire 1 ^- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 '/ state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 =, q $end
$var wire 1 _- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 (/ state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 >, q $end
$var wire 1 `- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 )/ state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 ?, q $end
$var wire 1 a- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 */ state $end
$upscope $end
$upscope $end

$scope module reg6 $end
$var parameter 32 +/ regSize $end
$var wire 1 b- In [15] $end
$var wire 1 c- In [14] $end
$var wire 1 d- In [13] $end
$var wire 1 e- In [12] $end
$var wire 1 f- In [11] $end
$var wire 1 g- In [10] $end
$var wire 1 h- In [9] $end
$var wire 1 i- In [8] $end
$var wire 1 j- In [7] $end
$var wire 1 k- In [6] $end
$var wire 1 l- In [5] $end
$var wire 1 m- In [4] $end
$var wire 1 n- In [3] $end
$var wire 1 o- In [2] $end
$var wire 1 p- In [1] $end
$var wire 1 q- In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 @, Out [15] $end
$var wire 1 A, Out [14] $end
$var wire 1 B, Out [13] $end
$var wire 1 C, Out [12] $end
$var wire 1 D, Out [11] $end
$var wire 1 E, Out [10] $end
$var wire 1 F, Out [9] $end
$var wire 1 G, Out [8] $end
$var wire 1 H, Out [7] $end
$var wire 1 I, Out [6] $end
$var wire 1 J, Out [5] $end
$var wire 1 K, Out [4] $end
$var wire 1 L, Out [3] $end
$var wire 1 M, Out [2] $end
$var wire 1 N, Out [1] $end
$var wire 1 O, Out [0] $end

$scope module regFF[15] $end
$var wire 1 @, q $end
$var wire 1 b- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ,/ state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 A, q $end
$var wire 1 c- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 -/ state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 B, q $end
$var wire 1 d- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ./ state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 C, q $end
$var wire 1 e- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 // state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 D, q $end
$var wire 1 f- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 0/ state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 E, q $end
$var wire 1 g- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 1/ state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 F, q $end
$var wire 1 h- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 2/ state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 G, q $end
$var wire 1 i- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 3/ state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 H, q $end
$var wire 1 j- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 4/ state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 I, q $end
$var wire 1 k- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 5/ state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 J, q $end
$var wire 1 l- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 6/ state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 K, q $end
$var wire 1 m- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 7/ state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 L, q $end
$var wire 1 n- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 8/ state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 M, q $end
$var wire 1 o- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 9/ state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 N, q $end
$var wire 1 p- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 :/ state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 O, q $end
$var wire 1 q- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ;/ state $end
$upscope $end
$upscope $end

$scope module reg7 $end
$var parameter 32 </ regSize $end
$var wire 1 r- In [15] $end
$var wire 1 s- In [14] $end
$var wire 1 t- In [13] $end
$var wire 1 u- In [12] $end
$var wire 1 v- In [11] $end
$var wire 1 w- In [10] $end
$var wire 1 x- In [9] $end
$var wire 1 y- In [8] $end
$var wire 1 z- In [7] $end
$var wire 1 {- In [6] $end
$var wire 1 |- In [5] $end
$var wire 1 }- In [4] $end
$var wire 1 ~- In [3] $end
$var wire 1 !. In [2] $end
$var wire 1 ". In [1] $end
$var wire 1 #. In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 P, Out [15] $end
$var wire 1 Q, Out [14] $end
$var wire 1 R, Out [13] $end
$var wire 1 S, Out [12] $end
$var wire 1 T, Out [11] $end
$var wire 1 U, Out [10] $end
$var wire 1 V, Out [9] $end
$var wire 1 W, Out [8] $end
$var wire 1 X, Out [7] $end
$var wire 1 Y, Out [6] $end
$var wire 1 Z, Out [5] $end
$var wire 1 [, Out [4] $end
$var wire 1 \, Out [3] $end
$var wire 1 ], Out [2] $end
$var wire 1 ^, Out [1] $end
$var wire 1 _, Out [0] $end

$scope module regFF[15] $end
$var wire 1 P, q $end
$var wire 1 r- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 =/ state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 Q, q $end
$var wire 1 s- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 >/ state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 R, q $end
$var wire 1 t- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ?/ state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 S, q $end
$var wire 1 u- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 @/ state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 T, q $end
$var wire 1 v- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 A/ state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 U, q $end
$var wire 1 w- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 B/ state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 V, q $end
$var wire 1 x- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C/ state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 W, q $end
$var wire 1 y- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D/ state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 X, q $end
$var wire 1 z- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 E/ state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 Y, q $end
$var wire 1 {- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F/ state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 Z, q $end
$var wire 1 |- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G/ state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 [, q $end
$var wire 1 }- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H/ state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 \, q $end
$var wire 1 ~- d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 I/ state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 ], q $end
$var wire 1 !. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 J/ state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 ^, q $end
$var wire 1 ". d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 K/ state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 _, q $end
$var wire 1 #. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 L/ state $end
$upscope $end
$upscope $end

$scope module reg8 $end
$var parameter 32 M/ regSize $end
$var wire 1 $. In [15] $end
$var wire 1 %. In [14] $end
$var wire 1 &. In [13] $end
$var wire 1 '. In [12] $end
$var wire 1 (. In [11] $end
$var wire 1 ). In [10] $end
$var wire 1 *. In [9] $end
$var wire 1 +. In [8] $end
$var wire 1 ,. In [7] $end
$var wire 1 -. In [6] $end
$var wire 1 .. In [5] $end
$var wire 1 /. In [4] $end
$var wire 1 0. In [3] $end
$var wire 1 1. In [2] $end
$var wire 1 2. In [1] $end
$var wire 1 3. In [0] $end
$var wire 1 { Clk $end
$var wire 1 } Rst $end
$var wire 1 `, Out [15] $end
$var wire 1 a, Out [14] $end
$var wire 1 b, Out [13] $end
$var wire 1 c, Out [12] $end
$var wire 1 d, Out [11] $end
$var wire 1 e, Out [10] $end
$var wire 1 f, Out [9] $end
$var wire 1 g, Out [8] $end
$var wire 1 h, Out [7] $end
$var wire 1 i, Out [6] $end
$var wire 1 j, Out [5] $end
$var wire 1 k, Out [4] $end
$var wire 1 l, Out [3] $end
$var wire 1 m, Out [2] $end
$var wire 1 n, Out [1] $end
$var wire 1 o, Out [0] $end

$scope module regFF[15] $end
$var wire 1 `, q $end
$var wire 1 $. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 N/ state $end
$upscope $end

$scope module regFF[14] $end
$var wire 1 a, q $end
$var wire 1 %. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 O/ state $end
$upscope $end

$scope module regFF[13] $end
$var wire 1 b, q $end
$var wire 1 &. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 P/ state $end
$upscope $end

$scope module regFF[12] $end
$var wire 1 c, q $end
$var wire 1 '. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Q/ state $end
$upscope $end

$scope module regFF[11] $end
$var wire 1 d, q $end
$var wire 1 (. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 R/ state $end
$upscope $end

$scope module regFF[10] $end
$var wire 1 e, q $end
$var wire 1 ). d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 S/ state $end
$upscope $end

$scope module regFF[9] $end
$var wire 1 f, q $end
$var wire 1 *. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 T/ state $end
$upscope $end

$scope module regFF[8] $end
$var wire 1 g, q $end
$var wire 1 +. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 U/ state $end
$upscope $end

$scope module regFF[7] $end
$var wire 1 h, q $end
$var wire 1 ,. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 V/ state $end
$upscope $end

$scope module regFF[6] $end
$var wire 1 i, q $end
$var wire 1 -. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 W/ state $end
$upscope $end

$scope module regFF[5] $end
$var wire 1 j, q $end
$var wire 1 .. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 X/ state $end
$upscope $end

$scope module regFF[4] $end
$var wire 1 k, q $end
$var wire 1 /. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Y/ state $end
$upscope $end

$scope module regFF[3] $end
$var wire 1 l, q $end
$var wire 1 0. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Z/ state $end
$upscope $end

$scope module regFF[2] $end
$var wire 1 m, q $end
$var wire 1 1. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 [/ state $end
$upscope $end

$scope module regFF[1] $end
$var wire 1 n, q $end
$var wire 1 2. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 \/ state $end
$upscope $end

$scope module regFF[0] $end
$var wire 1 o, q $end
$var wire 1 3. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ]/ state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module execute $end
$var wire 1 G! writeSetInDecode $end
$var wire 1 :" instr_op_ext [6] $end
$var wire 1 ;" instr_op_ext [5] $end
$var wire 1 <" instr_op_ext [4] $end
$var wire 1 =" instr_op_ext [3] $end
$var wire 1 >" instr_op_ext [2] $end
$var wire 1 ?" instr_op_ext [1] $end
$var wire 1 @" instr_op_ext [0] $end
$var wire 1 h! writeRegDataDecode [15] $end
$var wire 1 i! writeRegDataDecode [14] $end
$var wire 1 j! writeRegDataDecode [13] $end
$var wire 1 k! writeRegDataDecode [12] $end
$var wire 1 l! writeRegDataDecode [11] $end
$var wire 1 m! writeRegDataDecode [10] $end
$var wire 1 n! writeRegDataDecode [9] $end
$var wire 1 o! writeRegDataDecode [8] $end
$var wire 1 p! writeRegDataDecode [7] $end
$var wire 1 q! writeRegDataDecode [6] $end
$var wire 1 r! writeRegDataDecode [5] $end
$var wire 1 s! writeRegDataDecode [4] $end
$var wire 1 t! writeRegDataDecode [3] $end
$var wire 1 u! writeRegDataDecode [2] $end
$var wire 1 v! writeRegDataDecode [1] $end
$var wire 1 w! writeRegDataDecode [0] $end
$var wire 1 *" memData [15] $end
$var wire 1 +" memData [14] $end
$var wire 1 ," memData [13] $end
$var wire 1 -" memData [12] $end
$var wire 1 ." memData [11] $end
$var wire 1 /" memData [10] $end
$var wire 1 0" memData [9] $end
$var wire 1 1" memData [8] $end
$var wire 1 2" memData [7] $end
$var wire 1 3" memData [6] $end
$var wire 1 4" memData [5] $end
$var wire 1 5" memData [4] $end
$var wire 1 6" memData [3] $end
$var wire 1 7" memData [2] $end
$var wire 1 8" memData [1] $end
$var wire 1 9" memData [0] $end
$var wire 1 H! ALUInA [15] $end
$var wire 1 I! ALUInA [14] $end
$var wire 1 J! ALUInA [13] $end
$var wire 1 K! ALUInA [12] $end
$var wire 1 L! ALUInA [11] $end
$var wire 1 M! ALUInA [10] $end
$var wire 1 N! ALUInA [9] $end
$var wire 1 O! ALUInA [8] $end
$var wire 1 P! ALUInA [7] $end
$var wire 1 Q! ALUInA [6] $end
$var wire 1 R! ALUInA [5] $end
$var wire 1 S! ALUInA [4] $end
$var wire 1 T! ALUInA [3] $end
$var wire 1 U! ALUInA [2] $end
$var wire 1 V! ALUInA [1] $end
$var wire 1 W! ALUInA [0] $end
$var wire 1 X! ALUInB [15] $end
$var wire 1 Y! ALUInB [14] $end
$var wire 1 Z! ALUInB [13] $end
$var wire 1 [! ALUInB [12] $end
$var wire 1 \! ALUInB [11] $end
$var wire 1 ]! ALUInB [10] $end
$var wire 1 ^! ALUInB [9] $end
$var wire 1 _! ALUInB [8] $end
$var wire 1 `! ALUInB [7] $end
$var wire 1 a! ALUInB [6] $end
$var wire 1 b! ALUInB [5] $end
$var wire 1 c! ALUInB [4] $end
$var wire 1 d! ALUInB [3] $end
$var wire 1 e! ALUInB [2] $end
$var wire 1 f! ALUInB [1] $end
$var wire 1 g! ALUInB [0] $end
$var wire 1 D" ALU_output [15] $end
$var wire 1 E" ALU_output [14] $end
$var wire 1 F" ALU_output [13] $end
$var wire 1 G" ALU_output [12] $end
$var wire 1 H" ALU_output [11] $end
$var wire 1 I" ALU_output [10] $end
$var wire 1 J" ALU_output [9] $end
$var wire 1 K" ALU_output [8] $end
$var wire 1 L" ALU_output [7] $end
$var wire 1 M" ALU_output [6] $end
$var wire 1 N" ALU_output [5] $end
$var wire 1 O" ALU_output [4] $end
$var wire 1 P" ALU_output [3] $end
$var wire 1 Q" ALU_output [2] $end
$var wire 1 R" ALU_output [1] $end
$var wire 1 S" ALU_output [0] $end
$var wire 1 T" JaddrExecute [15] $end
$var wire 1 U" JaddrExecute [14] $end
$var wire 1 V" JaddrExecute [13] $end
$var wire 1 W" JaddrExecute [12] $end
$var wire 1 X" JaddrExecute [11] $end
$var wire 1 Y" JaddrExecute [10] $end
$var wire 1 Z" JaddrExecute [9] $end
$var wire 1 [" JaddrExecute [8] $end
$var wire 1 \" JaddrExecute [7] $end
$var wire 1 ]" JaddrExecute [6] $end
$var wire 1 ^" JaddrExecute [5] $end
$var wire 1 _" JaddrExecute [4] $end
$var wire 1 `" JaddrExecute [3] $end
$var wire 1 a" JaddrExecute [2] $end
$var wire 1 b" JaddrExecute [1] $end
$var wire 1 c" JaddrExecute [0] $end
$var wire 1 d" writeRegDataExecute [15] $end
$var wire 1 e" writeRegDataExecute [14] $end
$var wire 1 f" writeRegDataExecute [13] $end
$var wire 1 g" writeRegDataExecute [12] $end
$var wire 1 h" writeRegDataExecute [11] $end
$var wire 1 i" writeRegDataExecute [10] $end
$var wire 1 j" writeRegDataExecute [9] $end
$var wire 1 k" writeRegDataExecute [8] $end
$var wire 1 l" writeRegDataExecute [7] $end
$var wire 1 m" writeRegDataExecute [6] $end
$var wire 1 n" writeRegDataExecute [5] $end
$var wire 1 o" writeRegDataExecute [4] $end
$var wire 1 p" writeRegDataExecute [3] $end
$var wire 1 q" writeRegDataExecute [2] $end
$var wire 1 r" writeRegDataExecute [1] $end
$var wire 1 s" writeRegDataExecute [0] $end
$var reg 1 ^/ memWriteEn_CNTRL $end
$var reg 1 _/ memRead_CNTRL $end
$var wire 1 `/ SEQ_CNTRL $end
$var wire 1 a/ SNE_CNTRL $end
$var wire 1 b/ SLE_CNTRL $end
$var wire 1 c/ SCO_CNTRL $end
$var wire 1 d/ SetInstr_out_eq $end
$var wire 1 e/ SetInstr_out_neg $end
$var wire 1 f/ SetInstr_out_le $end
$var wire 1 g/ SetInstr_out_sco $end
$var wire 1 h/ SetInstr_out $end
$var wire 1 i/ BTR_out [15] $end
$var wire 1 j/ BTR_out [14] $end
$var wire 1 k/ BTR_out [13] $end
$var wire 1 l/ BTR_out [12] $end
$var wire 1 m/ BTR_out [11] $end
$var wire 1 n/ BTR_out [10] $end
$var wire 1 o/ BTR_out [9] $end
$var wire 1 p/ BTR_out [8] $end
$var wire 1 q/ BTR_out [7] $end
$var wire 1 r/ BTR_out [6] $end
$var wire 1 s/ BTR_out [5] $end
$var wire 1 t/ BTR_out [4] $end
$var wire 1 u/ BTR_out [3] $end
$var wire 1 v/ BTR_out [2] $end
$var wire 1 w/ BTR_out [1] $end
$var wire 1 x/ BTR_out [0] $end
$var reg 16 y/ writeRegDataX_intr [15:0] $end
$var wire 1 z/ ALU_Cin_CNTRL $end
$var wire 1 {/ ALU_invA_CNTRL $end
$var wire 1 |/ ALU_invB_CNTRL $end
$var wire 1 }/ ALU_sign_CNTRL $end
$var wire 1 ~/ ALU_Op_CNTRL [2] $end
$var wire 1 !0 ALU_Op_CNTRL [1] $end
$var wire 1 "0 ALU_Op_CNTRL [0] $end
$var wire 1 #0 ZeroFlg $end
$var wire 1 $0 OflFlg $end
$var wire 1 %0 NegFlg $end
$var wire 1 &0 SCOFlg $end

$scope module ALU_Inst $end
$var parameter 32 '0 N $end
$var parameter 32 (0 O $end
$var wire 1 H! InA [15] $end
$var wire 1 I! InA [14] $end
$var wire 1 J! InA [13] $end
$var wire 1 K! InA [12] $end
$var wire 1 L! InA [11] $end
$var wire 1 M! InA [10] $end
$var wire 1 N! InA [9] $end
$var wire 1 O! InA [8] $end
$var wire 1 P! InA [7] $end
$var wire 1 Q! InA [6] $end
$var wire 1 R! InA [5] $end
$var wire 1 S! InA [4] $end
$var wire 1 T! InA [3] $end
$var wire 1 U! InA [2] $end
$var wire 1 V! InA [1] $end
$var wire 1 W! InA [0] $end
$var wire 1 X! InB [15] $end
$var wire 1 Y! InB [14] $end
$var wire 1 Z! InB [13] $end
$var wire 1 [! InB [12] $end
$var wire 1 \! InB [11] $end
$var wire 1 ]! InB [10] $end
$var wire 1 ^! InB [9] $end
$var wire 1 _! InB [8] $end
$var wire 1 `! InB [7] $end
$var wire 1 a! InB [6] $end
$var wire 1 b! InB [5] $end
$var wire 1 c! InB [4] $end
$var wire 1 d! InB [3] $end
$var wire 1 e! InB [2] $end
$var wire 1 f! InB [1] $end
$var wire 1 g! InB [0] $end
$var wire 1 z/ Cin $end
$var wire 1 ~/ Op [2] $end
$var wire 1 !0 Op [1] $end
$var wire 1 "0 Op [0] $end
$var wire 1 {/ invA $end
$var wire 1 |/ invB $end
$var wire 1 }/ sign $end
$var wire 1 D" Out [15] $end
$var wire 1 E" Out [14] $end
$var wire 1 F" Out [13] $end
$var wire 1 G" Out [12] $end
$var wire 1 H" Out [11] $end
$var wire 1 I" Out [10] $end
$var wire 1 J" Out [9] $end
$var wire 1 K" Out [8] $end
$var wire 1 L" Out [7] $end
$var wire 1 M" Out [6] $end
$var wire 1 N" Out [5] $end
$var wire 1 O" Out [4] $end
$var wire 1 P" Out [3] $end
$var wire 1 Q" Out [2] $end
$var wire 1 R" Out [1] $end
$var wire 1 S" Out [0] $end
$var wire 1 $0 Ofl $end
$var wire 1 #0 Zero $end
$var wire 1 %0 Neg $end
$var wire 1 &0 GenCOut $end
$var wire 1 )0 inter1A [15] $end
$var wire 1 *0 inter1A [14] $end
$var wire 1 +0 inter1A [13] $end
$var wire 1 ,0 inter1A [12] $end
$var wire 1 -0 inter1A [11] $end
$var wire 1 .0 inter1A [10] $end
$var wire 1 /0 inter1A [9] $end
$var wire 1 00 inter1A [8] $end
$var wire 1 10 inter1A [7] $end
$var wire 1 20 inter1A [6] $end
$var wire 1 30 inter1A [5] $end
$var wire 1 40 inter1A [4] $end
$var wire 1 50 inter1A [3] $end
$var wire 1 60 inter1A [2] $end
$var wire 1 70 inter1A [1] $end
$var wire 1 80 inter1A [0] $end
$var wire 1 90 inter1B [15] $end
$var wire 1 :0 inter1B [14] $end
$var wire 1 ;0 inter1B [13] $end
$var wire 1 <0 inter1B [12] $end
$var wire 1 =0 inter1B [11] $end
$var wire 1 >0 inter1B [10] $end
$var wire 1 ?0 inter1B [9] $end
$var wire 1 @0 inter1B [8] $end
$var wire 1 A0 inter1B [7] $end
$var wire 1 B0 inter1B [6] $end
$var wire 1 C0 inter1B [5] $end
$var wire 1 D0 inter1B [4] $end
$var wire 1 E0 inter1B [3] $end
$var wire 1 F0 inter1B [2] $end
$var wire 1 G0 inter1B [1] $end
$var wire 1 H0 inter1B [0] $end
$var wire 1 I0 barrelOut [15] $end
$var wire 1 J0 barrelOut [14] $end
$var wire 1 K0 barrelOut [13] $end
$var wire 1 L0 barrelOut [12] $end
$var wire 1 M0 barrelOut [11] $end
$var wire 1 N0 barrelOut [10] $end
$var wire 1 O0 barrelOut [9] $end
$var wire 1 P0 barrelOut [8] $end
$var wire 1 Q0 barrelOut [7] $end
$var wire 1 R0 barrelOut [6] $end
$var wire 1 S0 barrelOut [5] $end
$var wire 1 T0 barrelOut [4] $end
$var wire 1 U0 barrelOut [3] $end
$var wire 1 V0 barrelOut [2] $end
$var wire 1 W0 barrelOut [1] $end
$var wire 1 X0 barrelOut [0] $end
$var wire 1 Y0 adderSum [15] $end
$var wire 1 Z0 adderSum [14] $end
$var wire 1 [0 adderSum [13] $end
$var wire 1 \0 adderSum [12] $end
$var wire 1 ]0 adderSum [11] $end
$var wire 1 ^0 adderSum [10] $end
$var wire 1 _0 adderSum [9] $end
$var wire 1 `0 adderSum [8] $end
$var wire 1 a0 adderSum [7] $end
$var wire 1 b0 adderSum [6] $end
$var wire 1 c0 adderSum [5] $end
$var wire 1 d0 adderSum [4] $end
$var wire 1 e0 adderSum [3] $end
$var wire 1 f0 adderSum [2] $end
$var wire 1 g0 adderSum [1] $end
$var wire 1 h0 adderSum [0] $end
$var wire 1 i0 C_out $end
$var wire 1 j0 signPosOfl $end
$var wire 1 k0 signNegOfl $end
$var wire 1 l0 GenCout $end

$scope module barrelShft $end
$var parameter 32 m0 N $end
$var parameter 32 n0 C $end
$var parameter 32 o0 O $end
$var wire 1 )0 In [15] $end
$var wire 1 *0 In [14] $end
$var wire 1 +0 In [13] $end
$var wire 1 ,0 In [12] $end
$var wire 1 -0 In [11] $end
$var wire 1 .0 In [10] $end
$var wire 1 /0 In [9] $end
$var wire 1 00 In [8] $end
$var wire 1 10 In [7] $end
$var wire 1 20 In [6] $end
$var wire 1 30 In [5] $end
$var wire 1 40 In [4] $end
$var wire 1 50 In [3] $end
$var wire 1 60 In [2] $end
$var wire 1 70 In [1] $end
$var wire 1 80 In [0] $end
$var wire 1 E0 Cnt [3] $end
$var wire 1 F0 Cnt [2] $end
$var wire 1 G0 Cnt [1] $end
$var wire 1 H0 Cnt [0] $end
$var wire 1 !0 Op [1] $end
$var wire 1 "0 Op [0] $end
$var wire 1 I0 Out [15] $end
$var wire 1 J0 Out [14] $end
$var wire 1 K0 Out [13] $end
$var wire 1 L0 Out [12] $end
$var wire 1 M0 Out [11] $end
$var wire 1 N0 Out [10] $end
$var wire 1 O0 Out [9] $end
$var wire 1 P0 Out [8] $end
$var wire 1 Q0 Out [7] $end
$var wire 1 R0 Out [6] $end
$var wire 1 S0 Out [5] $end
$var wire 1 T0 Out [4] $end
$var wire 1 U0 Out [3] $end
$var wire 1 V0 Out [2] $end
$var wire 1 W0 Out [1] $end
$var wire 1 X0 Out [0] $end
$var wire 1 p0 interOut1 [15] $end
$var wire 1 q0 interOut1 [14] $end
$var wire 1 r0 interOut1 [13] $end
$var wire 1 s0 interOut1 [12] $end
$var wire 1 t0 interOut1 [11] $end
$var wire 1 u0 interOut1 [10] $end
$var wire 1 v0 interOut1 [9] $end
$var wire 1 w0 interOut1 [8] $end
$var wire 1 x0 interOut1 [7] $end
$var wire 1 y0 interOut1 [6] $end
$var wire 1 z0 interOut1 [5] $end
$var wire 1 {0 interOut1 [4] $end
$var wire 1 |0 interOut1 [3] $end
$var wire 1 }0 interOut1 [2] $end
$var wire 1 ~0 interOut1 [1] $end
$var wire 1 !1 interOut1 [0] $end
$var wire 1 "1 interOut2 [15] $end
$var wire 1 #1 interOut2 [14] $end
$var wire 1 $1 interOut2 [13] $end
$var wire 1 %1 interOut2 [12] $end
$var wire 1 &1 interOut2 [11] $end
$var wire 1 '1 interOut2 [10] $end
$var wire 1 (1 interOut2 [9] $end
$var wire 1 )1 interOut2 [8] $end
$var wire 1 *1 interOut2 [7] $end
$var wire 1 +1 interOut2 [6] $end
$var wire 1 ,1 interOut2 [5] $end
$var wire 1 -1 interOut2 [4] $end
$var wire 1 .1 interOut2 [3] $end
$var wire 1 /1 interOut2 [2] $end
$var wire 1 01 interOut2 [1] $end
$var wire 1 11 interOut2 [0] $end
$var wire 1 21 interOut3 [15] $end
$var wire 1 31 interOut3 [14] $end
$var wire 1 41 interOut3 [13] $end
$var wire 1 51 interOut3 [12] $end
$var wire 1 61 interOut3 [11] $end
$var wire 1 71 interOut3 [10] $end
$var wire 1 81 interOut3 [9] $end
$var wire 1 91 interOut3 [8] $end
$var wire 1 :1 interOut3 [7] $end
$var wire 1 ;1 interOut3 [6] $end
$var wire 1 <1 interOut3 [5] $end
$var wire 1 =1 interOut3 [4] $end
$var wire 1 >1 interOut3 [3] $end
$var wire 1 ?1 interOut3 [2] $end
$var wire 1 @1 interOut3 [1] $end
$var wire 1 A1 interOut3 [0] $end
$var wire 1 B1 interOut4 [15] $end
$var wire 1 C1 interOut4 [14] $end
$var wire 1 D1 interOut4 [13] $end
$var wire 1 E1 interOut4 [12] $end
$var wire 1 F1 interOut4 [11] $end
$var wire 1 G1 interOut4 [10] $end
$var wire 1 H1 interOut4 [9] $end
$var wire 1 I1 interOut4 [8] $end
$var wire 1 J1 interOut4 [7] $end
$var wire 1 K1 interOut4 [6] $end
$var wire 1 L1 interOut4 [5] $end
$var wire 1 M1 interOut4 [4] $end
$var wire 1 N1 interOut4 [3] $end
$var wire 1 O1 interOut4 [2] $end
$var wire 1 P1 interOut4 [1] $end
$var wire 1 Q1 interOut4 [0] $end

$scope module barrel00 $end
$var wire 1 )0 In [15] $end
$var wire 1 *0 In [14] $end
$var wire 1 +0 In [13] $end
$var wire 1 ,0 In [12] $end
$var wire 1 -0 In [11] $end
$var wire 1 .0 In [10] $end
$var wire 1 /0 In [9] $end
$var wire 1 00 In [8] $end
$var wire 1 10 In [7] $end
$var wire 1 20 In [6] $end
$var wire 1 30 In [5] $end
$var wire 1 40 In [4] $end
$var wire 1 50 In [3] $end
$var wire 1 60 In [2] $end
$var wire 1 70 In [1] $end
$var wire 1 80 In [0] $end
$var wire 1 E0 Cnt [3] $end
$var wire 1 F0 Cnt [2] $end
$var wire 1 G0 Cnt [1] $end
$var wire 1 H0 Cnt [0] $end
$var wire 1 p0 Out [15] $end
$var wire 1 q0 Out [14] $end
$var wire 1 r0 Out [13] $end
$var wire 1 s0 Out [12] $end
$var wire 1 t0 Out [11] $end
$var wire 1 u0 Out [10] $end
$var wire 1 v0 Out [9] $end
$var wire 1 w0 Out [8] $end
$var wire 1 x0 Out [7] $end
$var wire 1 y0 Out [6] $end
$var wire 1 z0 Out [5] $end
$var wire 1 {0 Out [4] $end
$var wire 1 |0 Out [3] $end
$var wire 1 }0 Out [2] $end
$var wire 1 ~0 Out [1] $end
$var wire 1 !1 Out [0] $end
$var wire 1 R1 inter1 [15] $end
$var wire 1 S1 inter1 [14] $end
$var wire 1 T1 inter1 [13] $end
$var wire 1 U1 inter1 [12] $end
$var wire 1 V1 inter1 [11] $end
$var wire 1 W1 inter1 [10] $end
$var wire 1 X1 inter1 [9] $end
$var wire 1 Y1 inter1 [8] $end
$var wire 1 Z1 inter1 [7] $end
$var wire 1 [1 inter1 [6] $end
$var wire 1 \1 inter1 [5] $end
$var wire 1 ]1 inter1 [4] $end
$var wire 1 ^1 inter1 [3] $end
$var wire 1 _1 inter1 [2] $end
$var wire 1 `1 inter1 [1] $end
$var wire 1 a1 inter1 [0] $end
$var wire 1 b1 inter2 [15] $end
$var wire 1 c1 inter2 [14] $end
$var wire 1 d1 inter2 [13] $end
$var wire 1 e1 inter2 [12] $end
$var wire 1 f1 inter2 [11] $end
$var wire 1 g1 inter2 [10] $end
$var wire 1 h1 inter2 [9] $end
$var wire 1 i1 inter2 [8] $end
$var wire 1 j1 inter2 [7] $end
$var wire 1 k1 inter2 [6] $end
$var wire 1 l1 inter2 [5] $end
$var wire 1 m1 inter2 [4] $end
$var wire 1 n1 inter2 [3] $end
$var wire 1 o1 inter2 [2] $end
$var wire 1 p1 inter2 [1] $end
$var wire 1 q1 inter2 [0] $end
$var wire 1 r1 inter3 [15] $end
$var wire 1 s1 inter3 [14] $end
$var wire 1 t1 inter3 [13] $end
$var wire 1 u1 inter3 [12] $end
$var wire 1 v1 inter3 [11] $end
$var wire 1 w1 inter3 [10] $end
$var wire 1 x1 inter3 [9] $end
$var wire 1 y1 inter3 [8] $end
$var wire 1 z1 inter3 [7] $end
$var wire 1 {1 inter3 [6] $end
$var wire 1 |1 inter3 [5] $end
$var wire 1 }1 inter3 [4] $end
$var wire 1 ~1 inter3 [3] $end
$var wire 1 !2 inter3 [2] $end
$var wire 1 "2 inter3 [1] $end
$var wire 1 #2 inter3 [0] $end
$upscope $end

$scope module barrel01 $end
$var wire 1 )0 In [15] $end
$var wire 1 *0 In [14] $end
$var wire 1 +0 In [13] $end
$var wire 1 ,0 In [12] $end
$var wire 1 -0 In [11] $end
$var wire 1 .0 In [10] $end
$var wire 1 /0 In [9] $end
$var wire 1 00 In [8] $end
$var wire 1 10 In [7] $end
$var wire 1 20 In [6] $end
$var wire 1 30 In [5] $end
$var wire 1 40 In [4] $end
$var wire 1 50 In [3] $end
$var wire 1 60 In [2] $end
$var wire 1 70 In [1] $end
$var wire 1 80 In [0] $end
$var wire 1 E0 Cnt [3] $end
$var wire 1 F0 Cnt [2] $end
$var wire 1 G0 Cnt [1] $end
$var wire 1 H0 Cnt [0] $end
$var wire 1 "1 Out [15] $end
$var wire 1 #1 Out [14] $end
$var wire 1 $1 Out [13] $end
$var wire 1 %1 Out [12] $end
$var wire 1 &1 Out [11] $end
$var wire 1 '1 Out [10] $end
$var wire 1 (1 Out [9] $end
$var wire 1 )1 Out [8] $end
$var wire 1 *1 Out [7] $end
$var wire 1 +1 Out [6] $end
$var wire 1 ,1 Out [5] $end
$var wire 1 -1 Out [4] $end
$var wire 1 .1 Out [3] $end
$var wire 1 /1 Out [2] $end
$var wire 1 01 Out [1] $end
$var wire 1 11 Out [0] $end
$var wire 1 $2 inter1 [15] $end
$var wire 1 %2 inter1 [14] $end
$var wire 1 &2 inter1 [13] $end
$var wire 1 '2 inter1 [12] $end
$var wire 1 (2 inter1 [11] $end
$var wire 1 )2 inter1 [10] $end
$var wire 1 *2 inter1 [9] $end
$var wire 1 +2 inter1 [8] $end
$var wire 1 ,2 inter1 [7] $end
$var wire 1 -2 inter1 [6] $end
$var wire 1 .2 inter1 [5] $end
$var wire 1 /2 inter1 [4] $end
$var wire 1 02 inter1 [3] $end
$var wire 1 12 inter1 [2] $end
$var wire 1 22 inter1 [1] $end
$var wire 1 32 inter1 [0] $end
$var wire 1 42 inter2 [15] $end
$var wire 1 52 inter2 [14] $end
$var wire 1 62 inter2 [13] $end
$var wire 1 72 inter2 [12] $end
$var wire 1 82 inter2 [11] $end
$var wire 1 92 inter2 [10] $end
$var wire 1 :2 inter2 [9] $end
$var wire 1 ;2 inter2 [8] $end
$var wire 1 <2 inter2 [7] $end
$var wire 1 =2 inter2 [6] $end
$var wire 1 >2 inter2 [5] $end
$var wire 1 ?2 inter2 [4] $end
$var wire 1 @2 inter2 [3] $end
$var wire 1 A2 inter2 [2] $end
$var wire 1 B2 inter2 [1] $end
$var wire 1 C2 inter2 [0] $end
$var wire 1 D2 inter3 [15] $end
$var wire 1 E2 inter3 [14] $end
$var wire 1 F2 inter3 [13] $end
$var wire 1 G2 inter3 [12] $end
$var wire 1 H2 inter3 [11] $end
$var wire 1 I2 inter3 [10] $end
$var wire 1 J2 inter3 [9] $end
$var wire 1 K2 inter3 [8] $end
$var wire 1 L2 inter3 [7] $end
$var wire 1 M2 inter3 [6] $end
$var wire 1 N2 inter3 [5] $end
$var wire 1 O2 inter3 [4] $end
$var wire 1 P2 inter3 [3] $end
$var wire 1 Q2 inter3 [2] $end
$var wire 1 R2 inter3 [1] $end
$var wire 1 S2 inter3 [0] $end
$upscope $end

$scope module barrel10 $end
$var wire 1 )0 In [15] $end
$var wire 1 *0 In [14] $end
$var wire 1 +0 In [13] $end
$var wire 1 ,0 In [12] $end
$var wire 1 -0 In [11] $end
$var wire 1 .0 In [10] $end
$var wire 1 /0 In [9] $end
$var wire 1 00 In [8] $end
$var wire 1 10 In [7] $end
$var wire 1 20 In [6] $end
$var wire 1 30 In [5] $end
$var wire 1 40 In [4] $end
$var wire 1 50 In [3] $end
$var wire 1 60 In [2] $end
$var wire 1 70 In [1] $end
$var wire 1 80 In [0] $end
$var wire 1 E0 Cnt [3] $end
$var wire 1 F0 Cnt [2] $end
$var wire 1 G0 Cnt [1] $end
$var wire 1 H0 Cnt [0] $end
$var wire 1 21 Out [15] $end
$var wire 1 31 Out [14] $end
$var wire 1 41 Out [13] $end
$var wire 1 51 Out [12] $end
$var wire 1 61 Out [11] $end
$var wire 1 71 Out [10] $end
$var wire 1 81 Out [9] $end
$var wire 1 91 Out [8] $end
$var wire 1 :1 Out [7] $end
$var wire 1 ;1 Out [6] $end
$var wire 1 <1 Out [5] $end
$var wire 1 =1 Out [4] $end
$var wire 1 >1 Out [3] $end
$var wire 1 ?1 Out [2] $end
$var wire 1 @1 Out [1] $end
$var wire 1 A1 Out [0] $end
$var wire 1 T2 inter1 [15] $end
$var wire 1 U2 inter1 [14] $end
$var wire 1 V2 inter1 [13] $end
$var wire 1 W2 inter1 [12] $end
$var wire 1 X2 inter1 [11] $end
$var wire 1 Y2 inter1 [10] $end
$var wire 1 Z2 inter1 [9] $end
$var wire 1 [2 inter1 [8] $end
$var wire 1 \2 inter1 [7] $end
$var wire 1 ]2 inter1 [6] $end
$var wire 1 ^2 inter1 [5] $end
$var wire 1 _2 inter1 [4] $end
$var wire 1 `2 inter1 [3] $end
$var wire 1 a2 inter1 [2] $end
$var wire 1 b2 inter1 [1] $end
$var wire 1 c2 inter1 [0] $end
$var wire 1 d2 inter2 [15] $end
$var wire 1 e2 inter2 [14] $end
$var wire 1 f2 inter2 [13] $end
$var wire 1 g2 inter2 [12] $end
$var wire 1 h2 inter2 [11] $end
$var wire 1 i2 inter2 [10] $end
$var wire 1 j2 inter2 [9] $end
$var wire 1 k2 inter2 [8] $end
$var wire 1 l2 inter2 [7] $end
$var wire 1 m2 inter2 [6] $end
$var wire 1 n2 inter2 [5] $end
$var wire 1 o2 inter2 [4] $end
$var wire 1 p2 inter2 [3] $end
$var wire 1 q2 inter2 [2] $end
$var wire 1 r2 inter2 [1] $end
$var wire 1 s2 inter2 [0] $end
$var wire 1 t2 inter3 [15] $end
$var wire 1 u2 inter3 [14] $end
$var wire 1 v2 inter3 [13] $end
$var wire 1 w2 inter3 [12] $end
$var wire 1 x2 inter3 [11] $end
$var wire 1 y2 inter3 [10] $end
$var wire 1 z2 inter3 [9] $end
$var wire 1 {2 inter3 [8] $end
$var wire 1 |2 inter3 [7] $end
$var wire 1 }2 inter3 [6] $end
$var wire 1 ~2 inter3 [5] $end
$var wire 1 !3 inter3 [4] $end
$var wire 1 "3 inter3 [3] $end
$var wire 1 #3 inter3 [2] $end
$var wire 1 $3 inter3 [1] $end
$var wire 1 %3 inter3 [0] $end
$upscope $end

$scope module barrel11 $end
$var wire 1 )0 In [15] $end
$var wire 1 *0 In [14] $end
$var wire 1 +0 In [13] $end
$var wire 1 ,0 In [12] $end
$var wire 1 -0 In [11] $end
$var wire 1 .0 In [10] $end
$var wire 1 /0 In [9] $end
$var wire 1 00 In [8] $end
$var wire 1 10 In [7] $end
$var wire 1 20 In [6] $end
$var wire 1 30 In [5] $end
$var wire 1 40 In [4] $end
$var wire 1 50 In [3] $end
$var wire 1 60 In [2] $end
$var wire 1 70 In [1] $end
$var wire 1 80 In [0] $end
$var wire 1 E0 Cnt [3] $end
$var wire 1 F0 Cnt [2] $end
$var wire 1 G0 Cnt [1] $end
$var wire 1 H0 Cnt [0] $end
$var wire 1 B1 Out [15] $end
$var wire 1 C1 Out [14] $end
$var wire 1 D1 Out [13] $end
$var wire 1 E1 Out [12] $end
$var wire 1 F1 Out [11] $end
$var wire 1 G1 Out [10] $end
$var wire 1 H1 Out [9] $end
$var wire 1 I1 Out [8] $end
$var wire 1 J1 Out [7] $end
$var wire 1 K1 Out [6] $end
$var wire 1 L1 Out [5] $end
$var wire 1 M1 Out [4] $end
$var wire 1 N1 Out [3] $end
$var wire 1 O1 Out [2] $end
$var wire 1 P1 Out [1] $end
$var wire 1 Q1 Out [0] $end
$var wire 1 &3 inter1 [15] $end
$var wire 1 '3 inter1 [14] $end
$var wire 1 (3 inter1 [13] $end
$var wire 1 )3 inter1 [12] $end
$var wire 1 *3 inter1 [11] $end
$var wire 1 +3 inter1 [10] $end
$var wire 1 ,3 inter1 [9] $end
$var wire 1 -3 inter1 [8] $end
$var wire 1 .3 inter1 [7] $end
$var wire 1 /3 inter1 [6] $end
$var wire 1 03 inter1 [5] $end
$var wire 1 13 inter1 [4] $end
$var wire 1 23 inter1 [3] $end
$var wire 1 33 inter1 [2] $end
$var wire 1 43 inter1 [1] $end
$var wire 1 53 inter1 [0] $end
$var wire 1 63 inter2 [15] $end
$var wire 1 73 inter2 [14] $end
$var wire 1 83 inter2 [13] $end
$var wire 1 93 inter2 [12] $end
$var wire 1 :3 inter2 [11] $end
$var wire 1 ;3 inter2 [10] $end
$var wire 1 <3 inter2 [9] $end
$var wire 1 =3 inter2 [8] $end
$var wire 1 >3 inter2 [7] $end
$var wire 1 ?3 inter2 [6] $end
$var wire 1 @3 inter2 [5] $end
$var wire 1 A3 inter2 [4] $end
$var wire 1 B3 inter2 [3] $end
$var wire 1 C3 inter2 [2] $end
$var wire 1 D3 inter2 [1] $end
$var wire 1 E3 inter2 [0] $end
$var wire 1 F3 inter3 [15] $end
$var wire 1 G3 inter3 [14] $end
$var wire 1 H3 inter3 [13] $end
$var wire 1 I3 inter3 [12] $end
$var wire 1 J3 inter3 [11] $end
$var wire 1 K3 inter3 [10] $end
$var wire 1 L3 inter3 [9] $end
$var wire 1 M3 inter3 [8] $end
$var wire 1 N3 inter3 [7] $end
$var wire 1 O3 inter3 [6] $end
$var wire 1 P3 inter3 [5] $end
$var wire 1 Q3 inter3 [4] $end
$var wire 1 R3 inter3 [3] $end
$var wire 1 S3 inter3 [2] $end
$var wire 1 T3 inter3 [1] $end
$var wire 1 U3 inter3 [0] $end
$upscope $end
$upscope $end

$scope module adder $end
$var parameter 32 V3 N $end
$var wire 1 )0 A [15] $end
$var wire 1 *0 A [14] $end
$var wire 1 +0 A [13] $end
$var wire 1 ,0 A [12] $end
$var wire 1 -0 A [11] $end
$var wire 1 .0 A [10] $end
$var wire 1 /0 A [9] $end
$var wire 1 00 A [8] $end
$var wire 1 10 A [7] $end
$var wire 1 20 A [6] $end
$var wire 1 30 A [5] $end
$var wire 1 40 A [4] $end
$var wire 1 50 A [3] $end
$var wire 1 60 A [2] $end
$var wire 1 70 A [1] $end
$var wire 1 80 A [0] $end
$var wire 1 90 B [15] $end
$var wire 1 :0 B [14] $end
$var wire 1 ;0 B [13] $end
$var wire 1 <0 B [12] $end
$var wire 1 =0 B [11] $end
$var wire 1 >0 B [10] $end
$var wire 1 ?0 B [9] $end
$var wire 1 @0 B [8] $end
$var wire 1 A0 B [7] $end
$var wire 1 B0 B [6] $end
$var wire 1 C0 B [5] $end
$var wire 1 D0 B [4] $end
$var wire 1 E0 B [3] $end
$var wire 1 F0 B [2] $end
$var wire 1 G0 B [1] $end
$var wire 1 H0 B [0] $end
$var wire 1 z/ C_in $end
$var wire 1 Y0 S [15] $end
$var wire 1 Z0 S [14] $end
$var wire 1 [0 S [13] $end
$var wire 1 \0 S [12] $end
$var wire 1 ]0 S [11] $end
$var wire 1 ^0 S [10] $end
$var wire 1 _0 S [9] $end
$var wire 1 `0 S [8] $end
$var wire 1 a0 S [7] $end
$var wire 1 b0 S [6] $end
$var wire 1 c0 S [5] $end
$var wire 1 d0 S [4] $end
$var wire 1 e0 S [3] $end
$var wire 1 f0 S [2] $end
$var wire 1 g0 S [1] $end
$var wire 1 h0 S [0] $end
$var wire 1 i0 C_out $end
$var wire 1 W3 G [3] $end
$var wire 1 X3 G [2] $end
$var wire 1 Y3 G [1] $end
$var wire 1 Z3 G [0] $end
$var wire 1 [3 P [3] $end
$var wire 1 \3 P [2] $end
$var wire 1 ]3 P [1] $end
$var wire 1 ^3 P [0] $end
$var wire 1 _3 sub_carry [3] $end
$var wire 1 `3 sub_carry [2] $end
$var wire 1 a3 sub_carry [1] $end
$var wire 1 b3 sub_carry [0] $end

$scope module GP0 $end
$var wire 1 50 A [3] $end
$var wire 1 60 A [2] $end
$var wire 1 70 A [1] $end
$var wire 1 80 A [0] $end
$var wire 1 E0 B [3] $end
$var wire 1 F0 B [2] $end
$var wire 1 G0 B [1] $end
$var wire 1 H0 B [0] $end
$var wire 1 c3 g [3] $end
$var wire 1 d3 g [2] $end
$var wire 1 e3 g [1] $end
$var wire 1 f3 g [0] $end
$var wire 1 g3 p [3] $end
$var wire 1 h3 p [2] $end
$var wire 1 i3 p [1] $end
$var wire 1 j3 p [0] $end
$var wire 1 Z3 superG $end
$var wire 1 ^3 superP $end
$var wire 1 k3 g0_n $end
$var wire 1 l3 g1_n $end
$var wire 1 m3 g2_n $end
$var wire 1 n3 g3_n $end
$var wire 1 o3 p0_n $end
$var wire 1 p3 p1_n $end
$var wire 1 q3 p2_n $end
$var wire 1 r3 p3_n $end
$var wire 1 s3 p2p1g0_nand $end
$var wire 1 t3 p2p1g0_and $end
$var wire 1 u3 p3p2p1g0_nand $end
$var wire 1 v3 p3p2p1g0_and $end
$var wire 1 w3 p3p2g1_nand $end
$var wire 1 x3 p3p2g1_and $end
$var wire 1 y3 p3g2_nand $end
$var wire 1 z3 p3g2_and $end
$var wire 1 {3 G_LHS_nor $end
$var wire 1 |3 G_LHS_or $end
$var wire 1 }3 G_RHS_nor $end
$var wire 1 ~3 P_nand_RHS $end
$var wire 1 !4 P_and_RHS $end
$var wire 1 "4 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 k3 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 l3 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 m3 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 n3 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 o3 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 p3 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 q3 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 r3 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 k3 in1 $end
$var wire 1 f3 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 l3 in1 $end
$var wire 1 e3 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 m3 in1 $end
$var wire 1 d3 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 n3 in1 $end
$var wire 1 c3 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 o3 in1 $end
$var wire 1 j3 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 p3 in1 $end
$var wire 1 i3 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 q3 in1 $end
$var wire 1 h3 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 r3 in1 $end
$var wire 1 g3 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 i3 in1 $end
$var wire 1 f3 in2 $end
$var wire 1 h3 in3 $end
$var wire 1 s3 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 s3 in1 $end
$var wire 1 t3 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 t3 in1 $end
$var wire 1 g3 in2 $end
$var wire 1 u3 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 u3 in1 $end
$var wire 1 v3 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 g3 in1 $end
$var wire 1 h3 in2 $end
$var wire 1 e3 in3 $end
$var wire 1 w3 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 w3 in1 $end
$var wire 1 x3 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 g3 in1 $end
$var wire 1 d3 in2 $end
$var wire 1 y3 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 y3 in1 $end
$var wire 1 z3 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 c3 in1 $end
$var wire 1 z3 in2 $end
$var wire 1 x3 in3 $end
$var wire 1 {3 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 {3 in1 $end
$var wire 1 |3 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 v3 in1 $end
$var wire 1 |3 in2 $end
$var wire 1 }3 out $end
$upscope $end

$scope module G_out $end
$var wire 1 }3 in1 $end
$var wire 1 Z3 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 j3 in1 $end
$var wire 1 i3 in2 $end
$var wire 1 h3 in3 $end
$var wire 1 ~3 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 ~3 in1 $end
$var wire 1 !4 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 !4 in1 $end
$var wire 1 g3 in2 $end
$var wire 1 "4 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 "4 in1 $end
$var wire 1 ^3 out $end
$upscope $end
$upscope $end

$scope module GP1 $end
$var wire 1 10 A [3] $end
$var wire 1 20 A [2] $end
$var wire 1 30 A [1] $end
$var wire 1 40 A [0] $end
$var wire 1 A0 B [3] $end
$var wire 1 B0 B [2] $end
$var wire 1 C0 B [1] $end
$var wire 1 D0 B [0] $end
$var wire 1 #4 g [3] $end
$var wire 1 $4 g [2] $end
$var wire 1 %4 g [1] $end
$var wire 1 &4 g [0] $end
$var wire 1 '4 p [3] $end
$var wire 1 (4 p [2] $end
$var wire 1 )4 p [1] $end
$var wire 1 *4 p [0] $end
$var wire 1 Y3 superG $end
$var wire 1 ]3 superP $end
$var wire 1 +4 g0_n $end
$var wire 1 ,4 g1_n $end
$var wire 1 -4 g2_n $end
$var wire 1 .4 g3_n $end
$var wire 1 /4 p0_n $end
$var wire 1 04 p1_n $end
$var wire 1 14 p2_n $end
$var wire 1 24 p3_n $end
$var wire 1 34 p2p1g0_nand $end
$var wire 1 44 p2p1g0_and $end
$var wire 1 54 p3p2p1g0_nand $end
$var wire 1 64 p3p2p1g0_and $end
$var wire 1 74 p3p2g1_nand $end
$var wire 1 84 p3p2g1_and $end
$var wire 1 94 p3g2_nand $end
$var wire 1 :4 p3g2_and $end
$var wire 1 ;4 G_LHS_nor $end
$var wire 1 <4 G_LHS_or $end
$var wire 1 =4 G_RHS_nor $end
$var wire 1 >4 P_nand_RHS $end
$var wire 1 ?4 P_and_RHS $end
$var wire 1 @4 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 +4 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 ,4 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 -4 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 .4 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 /4 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 04 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 14 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 24 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 +4 in1 $end
$var wire 1 &4 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 ,4 in1 $end
$var wire 1 %4 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 -4 in1 $end
$var wire 1 $4 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 .4 in1 $end
$var wire 1 #4 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 /4 in1 $end
$var wire 1 *4 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 04 in1 $end
$var wire 1 )4 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 14 in1 $end
$var wire 1 (4 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 24 in1 $end
$var wire 1 '4 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 )4 in1 $end
$var wire 1 &4 in2 $end
$var wire 1 (4 in3 $end
$var wire 1 34 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 34 in1 $end
$var wire 1 44 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 44 in1 $end
$var wire 1 '4 in2 $end
$var wire 1 54 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 54 in1 $end
$var wire 1 64 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 '4 in1 $end
$var wire 1 (4 in2 $end
$var wire 1 %4 in3 $end
$var wire 1 74 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 74 in1 $end
$var wire 1 84 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 '4 in1 $end
$var wire 1 $4 in2 $end
$var wire 1 94 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 94 in1 $end
$var wire 1 :4 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 #4 in1 $end
$var wire 1 :4 in2 $end
$var wire 1 84 in3 $end
$var wire 1 ;4 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 ;4 in1 $end
$var wire 1 <4 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 64 in1 $end
$var wire 1 <4 in2 $end
$var wire 1 =4 out $end
$upscope $end

$scope module G_out $end
$var wire 1 =4 in1 $end
$var wire 1 Y3 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 *4 in1 $end
$var wire 1 )4 in2 $end
$var wire 1 (4 in3 $end
$var wire 1 >4 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 >4 in1 $end
$var wire 1 ?4 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 ?4 in1 $end
$var wire 1 '4 in2 $end
$var wire 1 @4 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 @4 in1 $end
$var wire 1 ]3 out $end
$upscope $end
$upscope $end

$scope module GP2 $end
$var wire 1 -0 A [3] $end
$var wire 1 .0 A [2] $end
$var wire 1 /0 A [1] $end
$var wire 1 00 A [0] $end
$var wire 1 =0 B [3] $end
$var wire 1 >0 B [2] $end
$var wire 1 ?0 B [1] $end
$var wire 1 @0 B [0] $end
$var wire 1 A4 g [3] $end
$var wire 1 B4 g [2] $end
$var wire 1 C4 g [1] $end
$var wire 1 D4 g [0] $end
$var wire 1 E4 p [3] $end
$var wire 1 F4 p [2] $end
$var wire 1 G4 p [1] $end
$var wire 1 H4 p [0] $end
$var wire 1 X3 superG $end
$var wire 1 \3 superP $end
$var wire 1 I4 g0_n $end
$var wire 1 J4 g1_n $end
$var wire 1 K4 g2_n $end
$var wire 1 L4 g3_n $end
$var wire 1 M4 p0_n $end
$var wire 1 N4 p1_n $end
$var wire 1 O4 p2_n $end
$var wire 1 P4 p3_n $end
$var wire 1 Q4 p2p1g0_nand $end
$var wire 1 R4 p2p1g0_and $end
$var wire 1 S4 p3p2p1g0_nand $end
$var wire 1 T4 p3p2p1g0_and $end
$var wire 1 U4 p3p2g1_nand $end
$var wire 1 V4 p3p2g1_and $end
$var wire 1 W4 p3g2_nand $end
$var wire 1 X4 p3g2_and $end
$var wire 1 Y4 G_LHS_nor $end
$var wire 1 Z4 G_LHS_or $end
$var wire 1 [4 G_RHS_nor $end
$var wire 1 \4 P_nand_RHS $end
$var wire 1 ]4 P_and_RHS $end
$var wire 1 ^4 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 I4 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 J4 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 K4 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 L4 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 M4 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 N4 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 O4 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 P4 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 I4 in1 $end
$var wire 1 D4 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 J4 in1 $end
$var wire 1 C4 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 K4 in1 $end
$var wire 1 B4 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 L4 in1 $end
$var wire 1 A4 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 M4 in1 $end
$var wire 1 H4 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 N4 in1 $end
$var wire 1 G4 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 O4 in1 $end
$var wire 1 F4 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 P4 in1 $end
$var wire 1 E4 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 G4 in1 $end
$var wire 1 D4 in2 $end
$var wire 1 F4 in3 $end
$var wire 1 Q4 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 Q4 in1 $end
$var wire 1 R4 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 R4 in1 $end
$var wire 1 E4 in2 $end
$var wire 1 S4 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 S4 in1 $end
$var wire 1 T4 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 E4 in1 $end
$var wire 1 F4 in2 $end
$var wire 1 C4 in3 $end
$var wire 1 U4 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 U4 in1 $end
$var wire 1 V4 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 E4 in1 $end
$var wire 1 B4 in2 $end
$var wire 1 W4 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 W4 in1 $end
$var wire 1 X4 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 A4 in1 $end
$var wire 1 X4 in2 $end
$var wire 1 V4 in3 $end
$var wire 1 Y4 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 Y4 in1 $end
$var wire 1 Z4 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 T4 in1 $end
$var wire 1 Z4 in2 $end
$var wire 1 [4 out $end
$upscope $end

$scope module G_out $end
$var wire 1 [4 in1 $end
$var wire 1 X3 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 H4 in1 $end
$var wire 1 G4 in2 $end
$var wire 1 F4 in3 $end
$var wire 1 \4 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 \4 in1 $end
$var wire 1 ]4 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 ]4 in1 $end
$var wire 1 E4 in2 $end
$var wire 1 ^4 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 ^4 in1 $end
$var wire 1 \3 out $end
$upscope $end
$upscope $end

$scope module GP3 $end
$var wire 1 )0 A [3] $end
$var wire 1 *0 A [2] $end
$var wire 1 +0 A [1] $end
$var wire 1 ,0 A [0] $end
$var wire 1 90 B [3] $end
$var wire 1 :0 B [2] $end
$var wire 1 ;0 B [1] $end
$var wire 1 <0 B [0] $end
$var wire 1 _4 g [3] $end
$var wire 1 `4 g [2] $end
$var wire 1 a4 g [1] $end
$var wire 1 b4 g [0] $end
$var wire 1 c4 p [3] $end
$var wire 1 d4 p [2] $end
$var wire 1 e4 p [1] $end
$var wire 1 f4 p [0] $end
$var wire 1 W3 superG $end
$var wire 1 [3 superP $end
$var wire 1 g4 g0_n $end
$var wire 1 h4 g1_n $end
$var wire 1 i4 g2_n $end
$var wire 1 j4 g3_n $end
$var wire 1 k4 p0_n $end
$var wire 1 l4 p1_n $end
$var wire 1 m4 p2_n $end
$var wire 1 n4 p3_n $end
$var wire 1 o4 p2p1g0_nand $end
$var wire 1 p4 p2p1g0_and $end
$var wire 1 q4 p3p2p1g0_nand $end
$var wire 1 r4 p3p2p1g0_and $end
$var wire 1 s4 p3p2g1_nand $end
$var wire 1 t4 p3p2g1_and $end
$var wire 1 u4 p3g2_nand $end
$var wire 1 v4 p3g2_and $end
$var wire 1 w4 G_LHS_nor $end
$var wire 1 x4 G_LHS_or $end
$var wire 1 y4 G_RHS_nor $end
$var wire 1 z4 P_nand_RHS $end
$var wire 1 {4 P_and_RHS $end
$var wire 1 |4 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 g4 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 h4 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 i4 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 j4 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 k4 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 l4 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 m4 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 n4 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 g4 in1 $end
$var wire 1 b4 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 h4 in1 $end
$var wire 1 a4 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 i4 in1 $end
$var wire 1 `4 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 j4 in1 $end
$var wire 1 _4 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 k4 in1 $end
$var wire 1 f4 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 l4 in1 $end
$var wire 1 e4 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 m4 in1 $end
$var wire 1 d4 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 n4 in1 $end
$var wire 1 c4 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 e4 in1 $end
$var wire 1 b4 in2 $end
$var wire 1 d4 in3 $end
$var wire 1 o4 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 o4 in1 $end
$var wire 1 p4 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 p4 in1 $end
$var wire 1 c4 in2 $end
$var wire 1 q4 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 q4 in1 $end
$var wire 1 r4 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 c4 in1 $end
$var wire 1 d4 in2 $end
$var wire 1 a4 in3 $end
$var wire 1 s4 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 s4 in1 $end
$var wire 1 t4 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 c4 in1 $end
$var wire 1 `4 in2 $end
$var wire 1 u4 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 u4 in1 $end
$var wire 1 v4 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 _4 in1 $end
$var wire 1 v4 in2 $end
$var wire 1 t4 in3 $end
$var wire 1 w4 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 w4 in1 $end
$var wire 1 x4 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 r4 in1 $end
$var wire 1 x4 in2 $end
$var wire 1 y4 out $end
$upscope $end

$scope module G_out $end
$var wire 1 y4 in1 $end
$var wire 1 W3 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 f4 in1 $end
$var wire 1 e4 in2 $end
$var wire 1 d4 in3 $end
$var wire 1 z4 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 z4 in1 $end
$var wire 1 {4 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 {4 in1 $end
$var wire 1 c4 in2 $end
$var wire 1 |4 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 |4 in1 $end
$var wire 1 [3 out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 W3 G [3] $end
$var wire 1 X3 G [2] $end
$var wire 1 Y3 G [1] $end
$var wire 1 Z3 G [0] $end
$var wire 1 [3 P [3] $end
$var wire 1 \3 P [2] $end
$var wire 1 ]3 P [1] $end
$var wire 1 ^3 P [0] $end
$var wire 1 z/ C_in $end
$var wire 1 _3 C_out [3] $end
$var wire 1 `3 C_out [2] $end
$var wire 1 a3 C_out [1] $end
$var wire 1 b3 C_out [0] $end
$var wire 1 }4 pc0_nand $end
$var wire 1 ~4 pc0_and $end
$var wire 1 !5 g0_nor $end
$var wire 1 "5 p1_nand $end
$var wire 1 #5 p1_and $end
$var wire 1 $5 p1g0_nand $end
$var wire 1 %5 p1g0_and $end
$var wire 1 &5 c2_nor $end
$var wire 1 '5 p2_nand $end
$var wire 1 (5 p2_and $end
$var wire 1 )5 p2g0_nand $end
$var wire 1 *5 p2g0_and $end
$var wire 1 +5 p2g1_nand $end
$var wire 1 ,5 p2g1_and $end
$var wire 1 -5 c3_nor3_RHS $end
$var wire 1 .5 c3_or3_RHS $end
$var wire 1 /5 c3_nor $end
$var wire 1 05 p3_nand $end
$var wire 1 15 p3_and $end
$var wire 1 25 p3g0_nand $end
$var wire 1 35 p3g0_and $end
$var wire 1 45 p3g1_nand $end
$var wire 1 55 p3g1_and $end
$var wire 1 65 p3g2_nand $end
$var wire 1 75 p3g2_and $end
$var wire 1 85 c4_LHS_nor $end
$var wire 1 95 c4_LHS_or $end
$var wire 1 :5 c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 ^3 in1 $end
$var wire 1 z/ in2 $end
$var wire 1 }4 out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 }4 in1 $end
$var wire 1 ~4 out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 ~4 in1 $end
$var wire 1 Z3 in2 $end
$var wire 1 !5 out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 !5 in1 $end
$var wire 1 b3 out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 ~4 in1 $end
$var wire 1 ]3 in2 $end
$var wire 1 "5 out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 "5 in1 $end
$var wire 1 #5 out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 ]3 in1 $end
$var wire 1 Z3 in2 $end
$var wire 1 $5 out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 $5 in1 $end
$var wire 1 %5 out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 Y3 in1 $end
$var wire 1 %5 in2 $end
$var wire 1 #5 in3 $end
$var wire 1 &5 out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 &5 in1 $end
$var wire 1 a3 out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 \3 in1 $end
$var wire 1 #5 in2 $end
$var wire 1 '5 out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 '5 in1 $end
$var wire 1 (5 out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 \3 in1 $end
$var wire 1 %5 in2 $end
$var wire 1 )5 out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 )5 in1 $end
$var wire 1 *5 out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 \3 in1 $end
$var wire 1 Y3 in2 $end
$var wire 1 +5 out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 +5 in1 $end
$var wire 1 ,5 out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 X3 in1 $end
$var wire 1 ,5 in2 $end
$var wire 1 *5 in3 $end
$var wire 1 -5 out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 -5 in1 $end
$var wire 1 .5 out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 (5 in1 $end
$var wire 1 .5 in2 $end
$var wire 1 /5 out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 /5 in1 $end
$var wire 1 `3 out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 [3 in1 $end
$var wire 1 (5 in2 $end
$var wire 1 05 out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 05 in1 $end
$var wire 1 15 out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 [3 in1 $end
$var wire 1 *5 in2 $end
$var wire 1 25 out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 25 in1 $end
$var wire 1 35 out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 [3 in1 $end
$var wire 1 ,5 in2 $end
$var wire 1 45 out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 45 in1 $end
$var wire 1 55 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 [3 in1 $end
$var wire 1 X3 in2 $end
$var wire 1 65 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 65 in1 $end
$var wire 1 75 out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 W3 in1 $end
$var wire 1 75 in2 $end
$var wire 1 55 in3 $end
$var wire 1 85 out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 85 in1 $end
$var wire 1 95 out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 95 in1 $end
$var wire 1 35 in2 $end
$var wire 1 15 in3 $end
$var wire 1 :5 out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 :5 in1 $end
$var wire 1 _3 out $end
$upscope $end
$upscope $end

$scope module cla_4b_0 $end
$var parameter 32 ;5 N $end
$var wire 1 50 A [3] $end
$var wire 1 60 A [2] $end
$var wire 1 70 A [1] $end
$var wire 1 80 A [0] $end
$var wire 1 E0 B [3] $end
$var wire 1 F0 B [2] $end
$var wire 1 G0 B [1] $end
$var wire 1 H0 B [0] $end
$var wire 1 z/ C_in $end
$var wire 1 e0 S [3] $end
$var wire 1 f0 S [2] $end
$var wire 1 g0 S [1] $end
$var wire 1 h0 S [0] $end
$var wire 1 <5 C_out $end
$var wire 1 =5 g [3] $end
$var wire 1 >5 g [2] $end
$var wire 1 ?5 g [1] $end
$var wire 1 @5 g [0] $end
$var wire 1 A5 p [3] $end
$var wire 1 B5 p [2] $end
$var wire 1 C5 p [1] $end
$var wire 1 D5 p [0] $end
$var wire 1 E5 sub_carry [3] $end
$var wire 1 F5 sub_carry [2] $end
$var wire 1 G5 sub_carry [1] $end
$var wire 1 H5 sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 50 A [3] $end
$var wire 1 60 A [2] $end
$var wire 1 70 A [1] $end
$var wire 1 80 A [0] $end
$var wire 1 E0 B [3] $end
$var wire 1 F0 B [2] $end
$var wire 1 G0 B [1] $end
$var wire 1 H0 B [0] $end
$var wire 1 =5 g [3] $end
$var wire 1 >5 g [2] $end
$var wire 1 ?5 g [1] $end
$var wire 1 @5 g [0] $end
$var wire 1 A5 p [3] $end
$var wire 1 B5 p [2] $end
$var wire 1 C5 p [1] $end
$var wire 1 D5 p [0] $end
$var wire 1 I5 superG $end
$var wire 1 J5 superP $end
$var wire 1 K5 g0_n $end
$var wire 1 L5 g1_n $end
$var wire 1 M5 g2_n $end
$var wire 1 N5 g3_n $end
$var wire 1 O5 p0_n $end
$var wire 1 P5 p1_n $end
$var wire 1 Q5 p2_n $end
$var wire 1 R5 p3_n $end
$var wire 1 S5 p2p1g0_nand $end
$var wire 1 T5 p2p1g0_and $end
$var wire 1 U5 p3p2p1g0_nand $end
$var wire 1 V5 p3p2p1g0_and $end
$var wire 1 W5 p3p2g1_nand $end
$var wire 1 X5 p3p2g1_and $end
$var wire 1 Y5 p3g2_nand $end
$var wire 1 Z5 p3g2_and $end
$var wire 1 [5 G_LHS_nor $end
$var wire 1 \5 G_LHS_or $end
$var wire 1 ]5 G_RHS_nor $end
$var wire 1 ^5 P_nand_RHS $end
$var wire 1 _5 P_and_RHS $end
$var wire 1 `5 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 K5 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 L5 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 M5 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 N5 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 O5 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 P5 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 Q5 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 R5 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 K5 in1 $end
$var wire 1 @5 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 L5 in1 $end
$var wire 1 ?5 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 M5 in1 $end
$var wire 1 >5 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 N5 in1 $end
$var wire 1 =5 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 O5 in1 $end
$var wire 1 D5 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 P5 in1 $end
$var wire 1 C5 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 Q5 in1 $end
$var wire 1 B5 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 R5 in1 $end
$var wire 1 A5 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 C5 in1 $end
$var wire 1 @5 in2 $end
$var wire 1 B5 in3 $end
$var wire 1 S5 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 S5 in1 $end
$var wire 1 T5 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 T5 in1 $end
$var wire 1 A5 in2 $end
$var wire 1 U5 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 U5 in1 $end
$var wire 1 V5 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 A5 in1 $end
$var wire 1 B5 in2 $end
$var wire 1 ?5 in3 $end
$var wire 1 W5 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 W5 in1 $end
$var wire 1 X5 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 A5 in1 $end
$var wire 1 >5 in2 $end
$var wire 1 Y5 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 Y5 in1 $end
$var wire 1 Z5 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 =5 in1 $end
$var wire 1 Z5 in2 $end
$var wire 1 X5 in3 $end
$var wire 1 [5 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 [5 in1 $end
$var wire 1 \5 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 V5 in1 $end
$var wire 1 \5 in2 $end
$var wire 1 ]5 out $end
$upscope $end

$scope module G_out $end
$var wire 1 ]5 in1 $end
$var wire 1 I5 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 D5 in1 $end
$var wire 1 C5 in2 $end
$var wire 1 B5 in3 $end
$var wire 1 ^5 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 ^5 in1 $end
$var wire 1 _5 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 _5 in1 $end
$var wire 1 A5 in2 $end
$var wire 1 `5 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 `5 in1 $end
$var wire 1 J5 out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 =5 G [3] $end
$var wire 1 >5 G [2] $end
$var wire 1 ?5 G [1] $end
$var wire 1 @5 G [0] $end
$var wire 1 A5 P [3] $end
$var wire 1 B5 P [2] $end
$var wire 1 C5 P [1] $end
$var wire 1 D5 P [0] $end
$var wire 1 z/ C_in $end
$var wire 1 E5 C_out [3] $end
$var wire 1 F5 C_out [2] $end
$var wire 1 G5 C_out [1] $end
$var wire 1 H5 C_out [0] $end
$var wire 1 a5 pc0_nand $end
$var wire 1 b5 pc0_and $end
$var wire 1 c5 g0_nor $end
$var wire 1 d5 p1_nand $end
$var wire 1 e5 p1_and $end
$var wire 1 f5 p1g0_nand $end
$var wire 1 g5 p1g0_and $end
$var wire 1 h5 c2_nor $end
$var wire 1 i5 p2_nand $end
$var wire 1 j5 p2_and $end
$var wire 1 k5 p2g0_nand $end
$var wire 1 l5 p2g0_and $end
$var wire 1 m5 p2g1_nand $end
$var wire 1 n5 p2g1_and $end
$var wire 1 o5 c3_nor3_RHS $end
$var wire 1 p5 c3_or3_RHS $end
$var wire 1 q5 c3_nor $end
$var wire 1 r5 p3_nand $end
$var wire 1 s5 p3_and $end
$var wire 1 t5 p3g0_nand $end
$var wire 1 u5 p3g0_and $end
$var wire 1 v5 p3g1_nand $end
$var wire 1 w5 p3g1_and $end
$var wire 1 x5 p3g2_nand $end
$var wire 1 y5 p3g2_and $end
$var wire 1 z5 c4_LHS_nor $end
$var wire 1 {5 c4_LHS_or $end
$var wire 1 |5 c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 D5 in1 $end
$var wire 1 z/ in2 $end
$var wire 1 a5 out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 a5 in1 $end
$var wire 1 b5 out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 b5 in1 $end
$var wire 1 @5 in2 $end
$var wire 1 c5 out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 c5 in1 $end
$var wire 1 H5 out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 b5 in1 $end
$var wire 1 C5 in2 $end
$var wire 1 d5 out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 d5 in1 $end
$var wire 1 e5 out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 C5 in1 $end
$var wire 1 @5 in2 $end
$var wire 1 f5 out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 f5 in1 $end
$var wire 1 g5 out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 ?5 in1 $end
$var wire 1 g5 in2 $end
$var wire 1 e5 in3 $end
$var wire 1 h5 out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 h5 in1 $end
$var wire 1 G5 out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 B5 in1 $end
$var wire 1 e5 in2 $end
$var wire 1 i5 out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 i5 in1 $end
$var wire 1 j5 out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 B5 in1 $end
$var wire 1 g5 in2 $end
$var wire 1 k5 out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 k5 in1 $end
$var wire 1 l5 out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 B5 in1 $end
$var wire 1 ?5 in2 $end
$var wire 1 m5 out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 m5 in1 $end
$var wire 1 n5 out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 >5 in1 $end
$var wire 1 n5 in2 $end
$var wire 1 l5 in3 $end
$var wire 1 o5 out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 o5 in1 $end
$var wire 1 p5 out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 j5 in1 $end
$var wire 1 p5 in2 $end
$var wire 1 q5 out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 q5 in1 $end
$var wire 1 F5 out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 A5 in1 $end
$var wire 1 j5 in2 $end
$var wire 1 r5 out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 r5 in1 $end
$var wire 1 s5 out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 A5 in1 $end
$var wire 1 l5 in2 $end
$var wire 1 t5 out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 t5 in1 $end
$var wire 1 u5 out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 A5 in1 $end
$var wire 1 n5 in2 $end
$var wire 1 v5 out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 v5 in1 $end
$var wire 1 w5 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 A5 in1 $end
$var wire 1 >5 in2 $end
$var wire 1 x5 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 x5 in1 $end
$var wire 1 y5 out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 =5 in1 $end
$var wire 1 y5 in2 $end
$var wire 1 w5 in3 $end
$var wire 1 z5 out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 z5 in1 $end
$var wire 1 {5 out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 {5 in1 $end
$var wire 1 u5 in2 $end
$var wire 1 s5 in3 $end
$var wire 1 |5 out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 |5 in1 $end
$var wire 1 E5 out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 80 A $end
$var wire 1 H0 B $end
$var wire 1 z/ C_in $end
$var wire 1 h0 S $end
$var wire 1 }5 C_out $end
$var wire 1 ~5 nand_bc $end
$var wire 1 !6 nand_ac $end
$var wire 1 "6 nand_ab $end
$var wire 1 #6 and_bc $end
$var wire 1 $6 and_ac $end
$var wire 1 %6 and_ab $end
$var wire 1 &6 nor_res $end

$scope module xor_sum $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 z/ in3 $end
$var wire 1 h0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 H0 in1 $end
$var wire 1 z/ in2 $end
$var wire 1 ~5 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 80 in1 $end
$var wire 1 z/ in2 $end
$var wire 1 !6 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 "6 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 ~5 in1 $end
$var wire 1 #6 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 !6 in1 $end
$var wire 1 $6 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 "6 in1 $end
$var wire 1 %6 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 #6 in1 $end
$var wire 1 $6 in2 $end
$var wire 1 %6 in3 $end
$var wire 1 &6 out $end
$upscope $end

$scope module res $end
$var wire 1 &6 in1 $end
$var wire 1 }5 out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 70 A $end
$var wire 1 G0 B $end
$var wire 1 H5 C_in $end
$var wire 1 g0 S $end
$var wire 1 '6 C_out $end
$var wire 1 (6 nand_bc $end
$var wire 1 )6 nand_ac $end
$var wire 1 *6 nand_ab $end
$var wire 1 +6 and_bc $end
$var wire 1 ,6 and_ac $end
$var wire 1 -6 and_ab $end
$var wire 1 .6 nor_res $end

$scope module xor_sum $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 H5 in3 $end
$var wire 1 g0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 G0 in1 $end
$var wire 1 H5 in2 $end
$var wire 1 (6 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 70 in1 $end
$var wire 1 H5 in2 $end
$var wire 1 )6 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 *6 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 (6 in1 $end
$var wire 1 +6 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 )6 in1 $end
$var wire 1 ,6 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 *6 in1 $end
$var wire 1 -6 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 +6 in1 $end
$var wire 1 ,6 in2 $end
$var wire 1 -6 in3 $end
$var wire 1 .6 out $end
$upscope $end

$scope module res $end
$var wire 1 .6 in1 $end
$var wire 1 '6 out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 60 A $end
$var wire 1 F0 B $end
$var wire 1 G5 C_in $end
$var wire 1 f0 S $end
$var wire 1 /6 C_out $end
$var wire 1 06 nand_bc $end
$var wire 1 16 nand_ac $end
$var wire 1 26 nand_ab $end
$var wire 1 36 and_bc $end
$var wire 1 46 and_ac $end
$var wire 1 56 and_ab $end
$var wire 1 66 nor_res $end

$scope module xor_sum $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 G5 in3 $end
$var wire 1 f0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 F0 in1 $end
$var wire 1 G5 in2 $end
$var wire 1 06 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 60 in1 $end
$var wire 1 G5 in2 $end
$var wire 1 16 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 26 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 06 in1 $end
$var wire 1 36 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 16 in1 $end
$var wire 1 46 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 26 in1 $end
$var wire 1 56 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 36 in1 $end
$var wire 1 46 in2 $end
$var wire 1 56 in3 $end
$var wire 1 66 out $end
$upscope $end

$scope module res $end
$var wire 1 66 in1 $end
$var wire 1 /6 out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 50 A $end
$var wire 1 E0 B $end
$var wire 1 F5 C_in $end
$var wire 1 e0 S $end
$var wire 1 76 C_out $end
$var wire 1 86 nand_bc $end
$var wire 1 96 nand_ac $end
$var wire 1 :6 nand_ab $end
$var wire 1 ;6 and_bc $end
$var wire 1 <6 and_ac $end
$var wire 1 =6 and_ab $end
$var wire 1 >6 nor_res $end

$scope module xor_sum $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 F5 in3 $end
$var wire 1 e0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 E0 in1 $end
$var wire 1 F5 in2 $end
$var wire 1 86 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 50 in1 $end
$var wire 1 F5 in2 $end
$var wire 1 96 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 :6 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 86 in1 $end
$var wire 1 ;6 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 96 in1 $end
$var wire 1 <6 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 :6 in1 $end
$var wire 1 =6 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 ;6 in1 $end
$var wire 1 <6 in2 $end
$var wire 1 =6 in3 $end
$var wire 1 >6 out $end
$upscope $end

$scope module res $end
$var wire 1 >6 in1 $end
$var wire 1 76 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_1 $end
$var parameter 32 ?6 N $end
$var wire 1 10 A [3] $end
$var wire 1 20 A [2] $end
$var wire 1 30 A [1] $end
$var wire 1 40 A [0] $end
$var wire 1 A0 B [3] $end
$var wire 1 B0 B [2] $end
$var wire 1 C0 B [1] $end
$var wire 1 D0 B [0] $end
$var wire 1 b3 C_in $end
$var wire 1 a0 S [3] $end
$var wire 1 b0 S [2] $end
$var wire 1 c0 S [1] $end
$var wire 1 d0 S [0] $end
$var wire 1 @6 C_out $end
$var wire 1 A6 g [3] $end
$var wire 1 B6 g [2] $end
$var wire 1 C6 g [1] $end
$var wire 1 D6 g [0] $end
$var wire 1 E6 p [3] $end
$var wire 1 F6 p [2] $end
$var wire 1 G6 p [1] $end
$var wire 1 H6 p [0] $end
$var wire 1 I6 sub_carry [3] $end
$var wire 1 J6 sub_carry [2] $end
$var wire 1 K6 sub_carry [1] $end
$var wire 1 L6 sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 10 A [3] $end
$var wire 1 20 A [2] $end
$var wire 1 30 A [1] $end
$var wire 1 40 A [0] $end
$var wire 1 A0 B [3] $end
$var wire 1 B0 B [2] $end
$var wire 1 C0 B [1] $end
$var wire 1 D0 B [0] $end
$var wire 1 A6 g [3] $end
$var wire 1 B6 g [2] $end
$var wire 1 C6 g [1] $end
$var wire 1 D6 g [0] $end
$var wire 1 E6 p [3] $end
$var wire 1 F6 p [2] $end
$var wire 1 G6 p [1] $end
$var wire 1 H6 p [0] $end
$var wire 1 M6 superG $end
$var wire 1 N6 superP $end
$var wire 1 O6 g0_n $end
$var wire 1 P6 g1_n $end
$var wire 1 Q6 g2_n $end
$var wire 1 R6 g3_n $end
$var wire 1 S6 p0_n $end
$var wire 1 T6 p1_n $end
$var wire 1 U6 p2_n $end
$var wire 1 V6 p3_n $end
$var wire 1 W6 p2p1g0_nand $end
$var wire 1 X6 p2p1g0_and $end
$var wire 1 Y6 p3p2p1g0_nand $end
$var wire 1 Z6 p3p2p1g0_and $end
$var wire 1 [6 p3p2g1_nand $end
$var wire 1 \6 p3p2g1_and $end
$var wire 1 ]6 p3g2_nand $end
$var wire 1 ^6 p3g2_and $end
$var wire 1 _6 G_LHS_nor $end
$var wire 1 `6 G_LHS_or $end
$var wire 1 a6 G_RHS_nor $end
$var wire 1 b6 P_nand_RHS $end
$var wire 1 c6 P_and_RHS $end
$var wire 1 d6 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 O6 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 P6 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 Q6 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 R6 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 S6 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 T6 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 U6 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 V6 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 O6 in1 $end
$var wire 1 D6 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 P6 in1 $end
$var wire 1 C6 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 Q6 in1 $end
$var wire 1 B6 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 R6 in1 $end
$var wire 1 A6 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 S6 in1 $end
$var wire 1 H6 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 T6 in1 $end
$var wire 1 G6 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 U6 in1 $end
$var wire 1 F6 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 V6 in1 $end
$var wire 1 E6 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 G6 in1 $end
$var wire 1 D6 in2 $end
$var wire 1 F6 in3 $end
$var wire 1 W6 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 W6 in1 $end
$var wire 1 X6 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 X6 in1 $end
$var wire 1 E6 in2 $end
$var wire 1 Y6 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 Y6 in1 $end
$var wire 1 Z6 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 E6 in1 $end
$var wire 1 F6 in2 $end
$var wire 1 C6 in3 $end
$var wire 1 [6 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 [6 in1 $end
$var wire 1 \6 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 E6 in1 $end
$var wire 1 B6 in2 $end
$var wire 1 ]6 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 ]6 in1 $end
$var wire 1 ^6 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 A6 in1 $end
$var wire 1 ^6 in2 $end
$var wire 1 \6 in3 $end
$var wire 1 _6 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 _6 in1 $end
$var wire 1 `6 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 Z6 in1 $end
$var wire 1 `6 in2 $end
$var wire 1 a6 out $end
$upscope $end

$scope module G_out $end
$var wire 1 a6 in1 $end
$var wire 1 M6 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 H6 in1 $end
$var wire 1 G6 in2 $end
$var wire 1 F6 in3 $end
$var wire 1 b6 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 b6 in1 $end
$var wire 1 c6 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 c6 in1 $end
$var wire 1 E6 in2 $end
$var wire 1 d6 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 d6 in1 $end
$var wire 1 N6 out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 A6 G [3] $end
$var wire 1 B6 G [2] $end
$var wire 1 C6 G [1] $end
$var wire 1 D6 G [0] $end
$var wire 1 E6 P [3] $end
$var wire 1 F6 P [2] $end
$var wire 1 G6 P [1] $end
$var wire 1 H6 P [0] $end
$var wire 1 b3 C_in $end
$var wire 1 I6 C_out [3] $end
$var wire 1 J6 C_out [2] $end
$var wire 1 K6 C_out [1] $end
$var wire 1 L6 C_out [0] $end
$var wire 1 e6 pc0_nand $end
$var wire 1 f6 pc0_and $end
$var wire 1 g6 g0_nor $end
$var wire 1 h6 p1_nand $end
$var wire 1 i6 p1_and $end
$var wire 1 j6 p1g0_nand $end
$var wire 1 k6 p1g0_and $end
$var wire 1 l6 c2_nor $end
$var wire 1 m6 p2_nand $end
$var wire 1 n6 p2_and $end
$var wire 1 o6 p2g0_nand $end
$var wire 1 p6 p2g0_and $end
$var wire 1 q6 p2g1_nand $end
$var wire 1 r6 p2g1_and $end
$var wire 1 s6 c3_nor3_RHS $end
$var wire 1 t6 c3_or3_RHS $end
$var wire 1 u6 c3_nor $end
$var wire 1 v6 p3_nand $end
$var wire 1 w6 p3_and $end
$var wire 1 x6 p3g0_nand $end
$var wire 1 y6 p3g0_and $end
$var wire 1 z6 p3g1_nand $end
$var wire 1 {6 p3g1_and $end
$var wire 1 |6 p3g2_nand $end
$var wire 1 }6 p3g2_and $end
$var wire 1 ~6 c4_LHS_nor $end
$var wire 1 !7 c4_LHS_or $end
$var wire 1 "7 c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 H6 in1 $end
$var wire 1 b3 in2 $end
$var wire 1 e6 out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 e6 in1 $end
$var wire 1 f6 out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 f6 in1 $end
$var wire 1 D6 in2 $end
$var wire 1 g6 out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 g6 in1 $end
$var wire 1 L6 out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 f6 in1 $end
$var wire 1 G6 in2 $end
$var wire 1 h6 out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 h6 in1 $end
$var wire 1 i6 out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 G6 in1 $end
$var wire 1 D6 in2 $end
$var wire 1 j6 out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 j6 in1 $end
$var wire 1 k6 out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 C6 in1 $end
$var wire 1 k6 in2 $end
$var wire 1 i6 in3 $end
$var wire 1 l6 out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 l6 in1 $end
$var wire 1 K6 out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 F6 in1 $end
$var wire 1 i6 in2 $end
$var wire 1 m6 out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 m6 in1 $end
$var wire 1 n6 out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 F6 in1 $end
$var wire 1 k6 in2 $end
$var wire 1 o6 out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 o6 in1 $end
$var wire 1 p6 out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 F6 in1 $end
$var wire 1 C6 in2 $end
$var wire 1 q6 out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 q6 in1 $end
$var wire 1 r6 out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 B6 in1 $end
$var wire 1 r6 in2 $end
$var wire 1 p6 in3 $end
$var wire 1 s6 out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 s6 in1 $end
$var wire 1 t6 out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 n6 in1 $end
$var wire 1 t6 in2 $end
$var wire 1 u6 out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 u6 in1 $end
$var wire 1 J6 out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 E6 in1 $end
$var wire 1 n6 in2 $end
$var wire 1 v6 out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 v6 in1 $end
$var wire 1 w6 out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 E6 in1 $end
$var wire 1 p6 in2 $end
$var wire 1 x6 out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 x6 in1 $end
$var wire 1 y6 out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 E6 in1 $end
$var wire 1 r6 in2 $end
$var wire 1 z6 out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 z6 in1 $end
$var wire 1 {6 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 E6 in1 $end
$var wire 1 B6 in2 $end
$var wire 1 |6 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 |6 in1 $end
$var wire 1 }6 out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 A6 in1 $end
$var wire 1 }6 in2 $end
$var wire 1 {6 in3 $end
$var wire 1 ~6 out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 ~6 in1 $end
$var wire 1 !7 out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 !7 in1 $end
$var wire 1 y6 in2 $end
$var wire 1 w6 in3 $end
$var wire 1 "7 out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 "7 in1 $end
$var wire 1 I6 out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 40 A $end
$var wire 1 D0 B $end
$var wire 1 b3 C_in $end
$var wire 1 d0 S $end
$var wire 1 #7 C_out $end
$var wire 1 $7 nand_bc $end
$var wire 1 %7 nand_ac $end
$var wire 1 &7 nand_ab $end
$var wire 1 '7 and_bc $end
$var wire 1 (7 and_ac $end
$var wire 1 )7 and_ab $end
$var wire 1 *7 nor_res $end

$scope module xor_sum $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 b3 in3 $end
$var wire 1 d0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 D0 in1 $end
$var wire 1 b3 in2 $end
$var wire 1 $7 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 40 in1 $end
$var wire 1 b3 in2 $end
$var wire 1 %7 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 40 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 &7 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 $7 in1 $end
$var wire 1 '7 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 %7 in1 $end
$var wire 1 (7 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 &7 in1 $end
$var wire 1 )7 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 '7 in1 $end
$var wire 1 (7 in2 $end
$var wire 1 )7 in3 $end
$var wire 1 *7 out $end
$upscope $end

$scope module res $end
$var wire 1 *7 in1 $end
$var wire 1 #7 out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 30 A $end
$var wire 1 C0 B $end
$var wire 1 L6 C_in $end
$var wire 1 c0 S $end
$var wire 1 +7 C_out $end
$var wire 1 ,7 nand_bc $end
$var wire 1 -7 nand_ac $end
$var wire 1 .7 nand_ab $end
$var wire 1 /7 and_bc $end
$var wire 1 07 and_ac $end
$var wire 1 17 and_ab $end
$var wire 1 27 nor_res $end

$scope module xor_sum $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 L6 in3 $end
$var wire 1 c0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 C0 in1 $end
$var wire 1 L6 in2 $end
$var wire 1 ,7 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 30 in1 $end
$var wire 1 L6 in2 $end
$var wire 1 -7 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 30 in1 $end
$var wire 1 C0 in2 $end
$var wire 1 .7 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 ,7 in1 $end
$var wire 1 /7 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 -7 in1 $end
$var wire 1 07 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 .7 in1 $end
$var wire 1 17 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 /7 in1 $end
$var wire 1 07 in2 $end
$var wire 1 17 in3 $end
$var wire 1 27 out $end
$upscope $end

$scope module res $end
$var wire 1 27 in1 $end
$var wire 1 +7 out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 20 A $end
$var wire 1 B0 B $end
$var wire 1 K6 C_in $end
$var wire 1 b0 S $end
$var wire 1 37 C_out $end
$var wire 1 47 nand_bc $end
$var wire 1 57 nand_ac $end
$var wire 1 67 nand_ab $end
$var wire 1 77 and_bc $end
$var wire 1 87 and_ac $end
$var wire 1 97 and_ab $end
$var wire 1 :7 nor_res $end

$scope module xor_sum $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 K6 in3 $end
$var wire 1 b0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 B0 in1 $end
$var wire 1 K6 in2 $end
$var wire 1 47 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 20 in1 $end
$var wire 1 K6 in2 $end
$var wire 1 57 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 20 in1 $end
$var wire 1 B0 in2 $end
$var wire 1 67 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 47 in1 $end
$var wire 1 77 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 57 in1 $end
$var wire 1 87 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 67 in1 $end
$var wire 1 97 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 77 in1 $end
$var wire 1 87 in2 $end
$var wire 1 97 in3 $end
$var wire 1 :7 out $end
$upscope $end

$scope module res $end
$var wire 1 :7 in1 $end
$var wire 1 37 out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 10 A $end
$var wire 1 A0 B $end
$var wire 1 J6 C_in $end
$var wire 1 a0 S $end
$var wire 1 ;7 C_out $end
$var wire 1 <7 nand_bc $end
$var wire 1 =7 nand_ac $end
$var wire 1 >7 nand_ab $end
$var wire 1 ?7 and_bc $end
$var wire 1 @7 and_ac $end
$var wire 1 A7 and_ab $end
$var wire 1 B7 nor_res $end

$scope module xor_sum $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 J6 in3 $end
$var wire 1 a0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 A0 in1 $end
$var wire 1 J6 in2 $end
$var wire 1 <7 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 10 in1 $end
$var wire 1 J6 in2 $end
$var wire 1 =7 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 10 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 >7 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 <7 in1 $end
$var wire 1 ?7 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 =7 in1 $end
$var wire 1 @7 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 >7 in1 $end
$var wire 1 A7 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 ?7 in1 $end
$var wire 1 @7 in2 $end
$var wire 1 A7 in3 $end
$var wire 1 B7 out $end
$upscope $end

$scope module res $end
$var wire 1 B7 in1 $end
$var wire 1 ;7 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_2 $end
$var parameter 32 C7 N $end
$var wire 1 -0 A [3] $end
$var wire 1 .0 A [2] $end
$var wire 1 /0 A [1] $end
$var wire 1 00 A [0] $end
$var wire 1 =0 B [3] $end
$var wire 1 >0 B [2] $end
$var wire 1 ?0 B [1] $end
$var wire 1 @0 B [0] $end
$var wire 1 a3 C_in $end
$var wire 1 ]0 S [3] $end
$var wire 1 ^0 S [2] $end
$var wire 1 _0 S [1] $end
$var wire 1 `0 S [0] $end
$var wire 1 D7 C_out $end
$var wire 1 E7 g [3] $end
$var wire 1 F7 g [2] $end
$var wire 1 G7 g [1] $end
$var wire 1 H7 g [0] $end
$var wire 1 I7 p [3] $end
$var wire 1 J7 p [2] $end
$var wire 1 K7 p [1] $end
$var wire 1 L7 p [0] $end
$var wire 1 M7 sub_carry [3] $end
$var wire 1 N7 sub_carry [2] $end
$var wire 1 O7 sub_carry [1] $end
$var wire 1 P7 sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 -0 A [3] $end
$var wire 1 .0 A [2] $end
$var wire 1 /0 A [1] $end
$var wire 1 00 A [0] $end
$var wire 1 =0 B [3] $end
$var wire 1 >0 B [2] $end
$var wire 1 ?0 B [1] $end
$var wire 1 @0 B [0] $end
$var wire 1 E7 g [3] $end
$var wire 1 F7 g [2] $end
$var wire 1 G7 g [1] $end
$var wire 1 H7 g [0] $end
$var wire 1 I7 p [3] $end
$var wire 1 J7 p [2] $end
$var wire 1 K7 p [1] $end
$var wire 1 L7 p [0] $end
$var wire 1 Q7 superG $end
$var wire 1 R7 superP $end
$var wire 1 S7 g0_n $end
$var wire 1 T7 g1_n $end
$var wire 1 U7 g2_n $end
$var wire 1 V7 g3_n $end
$var wire 1 W7 p0_n $end
$var wire 1 X7 p1_n $end
$var wire 1 Y7 p2_n $end
$var wire 1 Z7 p3_n $end
$var wire 1 [7 p2p1g0_nand $end
$var wire 1 \7 p2p1g0_and $end
$var wire 1 ]7 p3p2p1g0_nand $end
$var wire 1 ^7 p3p2p1g0_and $end
$var wire 1 _7 p3p2g1_nand $end
$var wire 1 `7 p3p2g1_and $end
$var wire 1 a7 p3g2_nand $end
$var wire 1 b7 p3g2_and $end
$var wire 1 c7 G_LHS_nor $end
$var wire 1 d7 G_LHS_or $end
$var wire 1 e7 G_RHS_nor $end
$var wire 1 f7 P_nand_RHS $end
$var wire 1 g7 P_and_RHS $end
$var wire 1 h7 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 S7 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 T7 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 U7 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 V7 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 W7 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 X7 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 Y7 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 Z7 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 S7 in1 $end
$var wire 1 H7 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 T7 in1 $end
$var wire 1 G7 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 U7 in1 $end
$var wire 1 F7 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 V7 in1 $end
$var wire 1 E7 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 W7 in1 $end
$var wire 1 L7 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 X7 in1 $end
$var wire 1 K7 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 Y7 in1 $end
$var wire 1 J7 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 Z7 in1 $end
$var wire 1 I7 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 K7 in1 $end
$var wire 1 H7 in2 $end
$var wire 1 J7 in3 $end
$var wire 1 [7 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 [7 in1 $end
$var wire 1 \7 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 \7 in1 $end
$var wire 1 I7 in2 $end
$var wire 1 ]7 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 ]7 in1 $end
$var wire 1 ^7 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 I7 in1 $end
$var wire 1 J7 in2 $end
$var wire 1 G7 in3 $end
$var wire 1 _7 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 _7 in1 $end
$var wire 1 `7 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 I7 in1 $end
$var wire 1 F7 in2 $end
$var wire 1 a7 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 a7 in1 $end
$var wire 1 b7 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 E7 in1 $end
$var wire 1 b7 in2 $end
$var wire 1 `7 in3 $end
$var wire 1 c7 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 c7 in1 $end
$var wire 1 d7 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 ^7 in1 $end
$var wire 1 d7 in2 $end
$var wire 1 e7 out $end
$upscope $end

$scope module G_out $end
$var wire 1 e7 in1 $end
$var wire 1 Q7 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 L7 in1 $end
$var wire 1 K7 in2 $end
$var wire 1 J7 in3 $end
$var wire 1 f7 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 f7 in1 $end
$var wire 1 g7 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 g7 in1 $end
$var wire 1 I7 in2 $end
$var wire 1 h7 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 h7 in1 $end
$var wire 1 R7 out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 E7 G [3] $end
$var wire 1 F7 G [2] $end
$var wire 1 G7 G [1] $end
$var wire 1 H7 G [0] $end
$var wire 1 I7 P [3] $end
$var wire 1 J7 P [2] $end
$var wire 1 K7 P [1] $end
$var wire 1 L7 P [0] $end
$var wire 1 a3 C_in $end
$var wire 1 M7 C_out [3] $end
$var wire 1 N7 C_out [2] $end
$var wire 1 O7 C_out [1] $end
$var wire 1 P7 C_out [0] $end
$var wire 1 i7 pc0_nand $end
$var wire 1 j7 pc0_and $end
$var wire 1 k7 g0_nor $end
$var wire 1 l7 p1_nand $end
$var wire 1 m7 p1_and $end
$var wire 1 n7 p1g0_nand $end
$var wire 1 o7 p1g0_and $end
$var wire 1 p7 c2_nor $end
$var wire 1 q7 p2_nand $end
$var wire 1 r7 p2_and $end
$var wire 1 s7 p2g0_nand $end
$var wire 1 t7 p2g0_and $end
$var wire 1 u7 p2g1_nand $end
$var wire 1 v7 p2g1_and $end
$var wire 1 w7 c3_nor3_RHS $end
$var wire 1 x7 c3_or3_RHS $end
$var wire 1 y7 c3_nor $end
$var wire 1 z7 p3_nand $end
$var wire 1 {7 p3_and $end
$var wire 1 |7 p3g0_nand $end
$var wire 1 }7 p3g0_and $end
$var wire 1 ~7 p3g1_nand $end
$var wire 1 !8 p3g1_and $end
$var wire 1 "8 p3g2_nand $end
$var wire 1 #8 p3g2_and $end
$var wire 1 $8 c4_LHS_nor $end
$var wire 1 %8 c4_LHS_or $end
$var wire 1 &8 c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 L7 in1 $end
$var wire 1 a3 in2 $end
$var wire 1 i7 out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 i7 in1 $end
$var wire 1 j7 out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 j7 in1 $end
$var wire 1 H7 in2 $end
$var wire 1 k7 out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 k7 in1 $end
$var wire 1 P7 out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 j7 in1 $end
$var wire 1 K7 in2 $end
$var wire 1 l7 out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 l7 in1 $end
$var wire 1 m7 out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 K7 in1 $end
$var wire 1 H7 in2 $end
$var wire 1 n7 out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 n7 in1 $end
$var wire 1 o7 out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 G7 in1 $end
$var wire 1 o7 in2 $end
$var wire 1 m7 in3 $end
$var wire 1 p7 out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 p7 in1 $end
$var wire 1 O7 out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 J7 in1 $end
$var wire 1 m7 in2 $end
$var wire 1 q7 out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 q7 in1 $end
$var wire 1 r7 out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 J7 in1 $end
$var wire 1 o7 in2 $end
$var wire 1 s7 out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 s7 in1 $end
$var wire 1 t7 out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 J7 in1 $end
$var wire 1 G7 in2 $end
$var wire 1 u7 out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 u7 in1 $end
$var wire 1 v7 out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 F7 in1 $end
$var wire 1 v7 in2 $end
$var wire 1 t7 in3 $end
$var wire 1 w7 out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 w7 in1 $end
$var wire 1 x7 out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 r7 in1 $end
$var wire 1 x7 in2 $end
$var wire 1 y7 out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 y7 in1 $end
$var wire 1 N7 out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 I7 in1 $end
$var wire 1 r7 in2 $end
$var wire 1 z7 out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 z7 in1 $end
$var wire 1 {7 out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 I7 in1 $end
$var wire 1 t7 in2 $end
$var wire 1 |7 out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 |7 in1 $end
$var wire 1 }7 out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 I7 in1 $end
$var wire 1 v7 in2 $end
$var wire 1 ~7 out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 ~7 in1 $end
$var wire 1 !8 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 I7 in1 $end
$var wire 1 F7 in2 $end
$var wire 1 "8 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 "8 in1 $end
$var wire 1 #8 out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 E7 in1 $end
$var wire 1 #8 in2 $end
$var wire 1 !8 in3 $end
$var wire 1 $8 out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 $8 in1 $end
$var wire 1 %8 out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 %8 in1 $end
$var wire 1 }7 in2 $end
$var wire 1 {7 in3 $end
$var wire 1 &8 out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 &8 in1 $end
$var wire 1 M7 out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 00 A $end
$var wire 1 @0 B $end
$var wire 1 a3 C_in $end
$var wire 1 `0 S $end
$var wire 1 '8 C_out $end
$var wire 1 (8 nand_bc $end
$var wire 1 )8 nand_ac $end
$var wire 1 *8 nand_ab $end
$var wire 1 +8 and_bc $end
$var wire 1 ,8 and_ac $end
$var wire 1 -8 and_ab $end
$var wire 1 .8 nor_res $end

$scope module xor_sum $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 a3 in3 $end
$var wire 1 `0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 @0 in1 $end
$var wire 1 a3 in2 $end
$var wire 1 (8 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 00 in1 $end
$var wire 1 a3 in2 $end
$var wire 1 )8 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 00 in1 $end
$var wire 1 @0 in2 $end
$var wire 1 *8 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 (8 in1 $end
$var wire 1 +8 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 )8 in1 $end
$var wire 1 ,8 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 *8 in1 $end
$var wire 1 -8 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 +8 in1 $end
$var wire 1 ,8 in2 $end
$var wire 1 -8 in3 $end
$var wire 1 .8 out $end
$upscope $end

$scope module res $end
$var wire 1 .8 in1 $end
$var wire 1 '8 out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 /0 A $end
$var wire 1 ?0 B $end
$var wire 1 P7 C_in $end
$var wire 1 _0 S $end
$var wire 1 /8 C_out $end
$var wire 1 08 nand_bc $end
$var wire 1 18 nand_ac $end
$var wire 1 28 nand_ab $end
$var wire 1 38 and_bc $end
$var wire 1 48 and_ac $end
$var wire 1 58 and_ab $end
$var wire 1 68 nor_res $end

$scope module xor_sum $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 P7 in3 $end
$var wire 1 _0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 ?0 in1 $end
$var wire 1 P7 in2 $end
$var wire 1 08 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 /0 in1 $end
$var wire 1 P7 in2 $end
$var wire 1 18 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 /0 in1 $end
$var wire 1 ?0 in2 $end
$var wire 1 28 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 08 in1 $end
$var wire 1 38 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 18 in1 $end
$var wire 1 48 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 28 in1 $end
$var wire 1 58 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 38 in1 $end
$var wire 1 48 in2 $end
$var wire 1 58 in3 $end
$var wire 1 68 out $end
$upscope $end

$scope module res $end
$var wire 1 68 in1 $end
$var wire 1 /8 out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 .0 A $end
$var wire 1 >0 B $end
$var wire 1 O7 C_in $end
$var wire 1 ^0 S $end
$var wire 1 78 C_out $end
$var wire 1 88 nand_bc $end
$var wire 1 98 nand_ac $end
$var wire 1 :8 nand_ab $end
$var wire 1 ;8 and_bc $end
$var wire 1 <8 and_ac $end
$var wire 1 =8 and_ab $end
$var wire 1 >8 nor_res $end

$scope module xor_sum $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 O7 in3 $end
$var wire 1 ^0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 >0 in1 $end
$var wire 1 O7 in2 $end
$var wire 1 88 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 .0 in1 $end
$var wire 1 O7 in2 $end
$var wire 1 98 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 .0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 :8 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 88 in1 $end
$var wire 1 ;8 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 98 in1 $end
$var wire 1 <8 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 :8 in1 $end
$var wire 1 =8 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 ;8 in1 $end
$var wire 1 <8 in2 $end
$var wire 1 =8 in3 $end
$var wire 1 >8 out $end
$upscope $end

$scope module res $end
$var wire 1 >8 in1 $end
$var wire 1 78 out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 -0 A $end
$var wire 1 =0 B $end
$var wire 1 N7 C_in $end
$var wire 1 ]0 S $end
$var wire 1 ?8 C_out $end
$var wire 1 @8 nand_bc $end
$var wire 1 A8 nand_ac $end
$var wire 1 B8 nand_ab $end
$var wire 1 C8 and_bc $end
$var wire 1 D8 and_ac $end
$var wire 1 E8 and_ab $end
$var wire 1 F8 nor_res $end

$scope module xor_sum $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 N7 in3 $end
$var wire 1 ]0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 =0 in1 $end
$var wire 1 N7 in2 $end
$var wire 1 @8 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 -0 in1 $end
$var wire 1 N7 in2 $end
$var wire 1 A8 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 -0 in1 $end
$var wire 1 =0 in2 $end
$var wire 1 B8 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 @8 in1 $end
$var wire 1 C8 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 A8 in1 $end
$var wire 1 D8 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 B8 in1 $end
$var wire 1 E8 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 C8 in1 $end
$var wire 1 D8 in2 $end
$var wire 1 E8 in3 $end
$var wire 1 F8 out $end
$upscope $end

$scope module res $end
$var wire 1 F8 in1 $end
$var wire 1 ?8 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla_4b_3 $end
$var parameter 32 G8 N $end
$var wire 1 )0 A [3] $end
$var wire 1 *0 A [2] $end
$var wire 1 +0 A [1] $end
$var wire 1 ,0 A [0] $end
$var wire 1 90 B [3] $end
$var wire 1 :0 B [2] $end
$var wire 1 ;0 B [1] $end
$var wire 1 <0 B [0] $end
$var wire 1 `3 C_in $end
$var wire 1 Y0 S [3] $end
$var wire 1 Z0 S [2] $end
$var wire 1 [0 S [1] $end
$var wire 1 \0 S [0] $end
$var wire 1 i0 C_out $end
$var wire 1 H8 g [3] $end
$var wire 1 I8 g [2] $end
$var wire 1 J8 g [1] $end
$var wire 1 K8 g [0] $end
$var wire 1 L8 p [3] $end
$var wire 1 M8 p [2] $end
$var wire 1 N8 p [1] $end
$var wire 1 O8 p [0] $end
$var wire 1 P8 sub_carry [3] $end
$var wire 1 Q8 sub_carry [2] $end
$var wire 1 R8 sub_carry [1] $end
$var wire 1 S8 sub_carry [0] $end

$scope module gpblock0 $end
$var wire 1 )0 A [3] $end
$var wire 1 *0 A [2] $end
$var wire 1 +0 A [1] $end
$var wire 1 ,0 A [0] $end
$var wire 1 90 B [3] $end
$var wire 1 :0 B [2] $end
$var wire 1 ;0 B [1] $end
$var wire 1 <0 B [0] $end
$var wire 1 H8 g [3] $end
$var wire 1 I8 g [2] $end
$var wire 1 J8 g [1] $end
$var wire 1 K8 g [0] $end
$var wire 1 L8 p [3] $end
$var wire 1 M8 p [2] $end
$var wire 1 N8 p [1] $end
$var wire 1 O8 p [0] $end
$var wire 1 T8 superG $end
$var wire 1 U8 superP $end
$var wire 1 V8 g0_n $end
$var wire 1 W8 g1_n $end
$var wire 1 X8 g2_n $end
$var wire 1 Y8 g3_n $end
$var wire 1 Z8 p0_n $end
$var wire 1 [8 p1_n $end
$var wire 1 \8 p2_n $end
$var wire 1 ]8 p3_n $end
$var wire 1 ^8 p2p1g0_nand $end
$var wire 1 _8 p2p1g0_and $end
$var wire 1 `8 p3p2p1g0_nand $end
$var wire 1 a8 p3p2p1g0_and $end
$var wire 1 b8 p3p2g1_nand $end
$var wire 1 c8 p3p2g1_and $end
$var wire 1 d8 p3g2_nand $end
$var wire 1 e8 p3g2_and $end
$var wire 1 f8 G_LHS_nor $end
$var wire 1 g8 G_LHS_or $end
$var wire 1 h8 G_RHS_nor $end
$var wire 1 i8 P_nand_RHS $end
$var wire 1 j8 P_and_RHS $end
$var wire 1 k8 P_nand_LHS $end

$scope module nand_g0 $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 V8 out $end
$upscope $end

$scope module nand_g1 $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 W8 out $end
$upscope $end

$scope module nand_g2 $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 X8 out $end
$upscope $end

$scope module nand_g3 $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 Y8 out $end
$upscope $end

$scope module nor_p0 $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 Z8 out $end
$upscope $end

$scope module nor_p1 $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 [8 out $end
$upscope $end

$scope module nor_p2 $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 \8 out $end
$upscope $end

$scope module nor_p3 $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 ]8 out $end
$upscope $end

$scope module not_g0 $end
$var wire 1 V8 in1 $end
$var wire 1 K8 out $end
$upscope $end

$scope module not_g1 $end
$var wire 1 W8 in1 $end
$var wire 1 J8 out $end
$upscope $end

$scope module not_g2 $end
$var wire 1 X8 in1 $end
$var wire 1 I8 out $end
$upscope $end

$scope module not_g3 $end
$var wire 1 Y8 in1 $end
$var wire 1 H8 out $end
$upscope $end

$scope module not_p0 $end
$var wire 1 Z8 in1 $end
$var wire 1 O8 out $end
$upscope $end

$scope module not_p1 $end
$var wire 1 [8 in1 $end
$var wire 1 N8 out $end
$upscope $end

$scope module not_p2 $end
$var wire 1 \8 in1 $end
$var wire 1 M8 out $end
$upscope $end

$scope module not_p3 $end
$var wire 1 ]8 in1 $end
$var wire 1 L8 out $end
$upscope $end

$scope module nand_p2p1g0 $end
$var wire 1 N8 in1 $end
$var wire 1 K8 in2 $end
$var wire 1 M8 in3 $end
$var wire 1 ^8 out $end
$upscope $end

$scope module and_p2p1g0 $end
$var wire 1 ^8 in1 $end
$var wire 1 _8 out $end
$upscope $end

$scope module nand_p3p2p1g0 $end
$var wire 1 _8 in1 $end
$var wire 1 L8 in2 $end
$var wire 1 `8 out $end
$upscope $end

$scope module and_p3p2p1g0 $end
$var wire 1 `8 in1 $end
$var wire 1 a8 out $end
$upscope $end

$scope module nand_p3p2g1 $end
$var wire 1 L8 in1 $end
$var wire 1 M8 in2 $end
$var wire 1 J8 in3 $end
$var wire 1 b8 out $end
$upscope $end

$scope module and_p3p2g1 $end
$var wire 1 b8 in1 $end
$var wire 1 c8 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 L8 in1 $end
$var wire 1 I8 in2 $end
$var wire 1 d8 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 d8 in1 $end
$var wire 1 e8 out $end
$upscope $end

$scope module nor_G_LHS $end
$var wire 1 H8 in1 $end
$var wire 1 e8 in2 $end
$var wire 1 c8 in3 $end
$var wire 1 f8 out $end
$upscope $end

$scope module or_G_LHS $end
$var wire 1 f8 in1 $end
$var wire 1 g8 out $end
$upscope $end

$scope module nor_G_RHS $end
$var wire 1 a8 in1 $end
$var wire 1 g8 in2 $end
$var wire 1 h8 out $end
$upscope $end

$scope module G_out $end
$var wire 1 h8 in1 $end
$var wire 1 T8 out $end
$upscope $end

$scope module nand_P_RHS $end
$var wire 1 O8 in1 $end
$var wire 1 N8 in2 $end
$var wire 1 M8 in3 $end
$var wire 1 i8 out $end
$upscope $end

$scope module not_P_RHS $end
$var wire 1 i8 in1 $end
$var wire 1 j8 out $end
$upscope $end

$scope module nandP_LHS $end
$var wire 1 j8 in1 $end
$var wire 1 L8 in2 $end
$var wire 1 k8 out $end
$upscope $end

$scope module not_P_LHS $end
$var wire 1 k8 in1 $end
$var wire 1 U8 out $end
$upscope $end
$upscope $end

$scope module carryLogic $end
$var wire 1 H8 G [3] $end
$var wire 1 I8 G [2] $end
$var wire 1 J8 G [1] $end
$var wire 1 K8 G [0] $end
$var wire 1 L8 P [3] $end
$var wire 1 M8 P [2] $end
$var wire 1 N8 P [1] $end
$var wire 1 O8 P [0] $end
$var wire 1 `3 C_in $end
$var wire 1 P8 C_out [3] $end
$var wire 1 Q8 C_out [2] $end
$var wire 1 R8 C_out [1] $end
$var wire 1 S8 C_out [0] $end
$var wire 1 l8 pc0_nand $end
$var wire 1 m8 pc0_and $end
$var wire 1 n8 g0_nor $end
$var wire 1 o8 p1_nand $end
$var wire 1 p8 p1_and $end
$var wire 1 q8 p1g0_nand $end
$var wire 1 r8 p1g0_and $end
$var wire 1 s8 c2_nor $end
$var wire 1 t8 p2_nand $end
$var wire 1 u8 p2_and $end
$var wire 1 v8 p2g0_nand $end
$var wire 1 w8 p2g0_and $end
$var wire 1 x8 p2g1_nand $end
$var wire 1 y8 p2g1_and $end
$var wire 1 z8 c3_nor3_RHS $end
$var wire 1 {8 c3_or3_RHS $end
$var wire 1 |8 c3_nor $end
$var wire 1 }8 p3_nand $end
$var wire 1 ~8 p3_and $end
$var wire 1 !9 p3g0_nand $end
$var wire 1 "9 p3g0_and $end
$var wire 1 #9 p3g1_nand $end
$var wire 1 $9 p3g1_and $end
$var wire 1 %9 p3g2_nand $end
$var wire 1 &9 p3g2_and $end
$var wire 1 '9 c4_LHS_nor $end
$var wire 1 (9 c4_LHS_or $end
$var wire 1 )9 c4_RHS_nor $end

$scope module nand_pc0 $end
$var wire 1 O8 in1 $end
$var wire 1 `3 in2 $end
$var wire 1 l8 out $end
$upscope $end

$scope module and_pc0 $end
$var wire 1 l8 in1 $end
$var wire 1 m8 out $end
$upscope $end

$scope module nor_g0 $end
$var wire 1 m8 in1 $end
$var wire 1 K8 in2 $end
$var wire 1 n8 out $end
$upscope $end

$scope module or_g0 $end
$var wire 1 n8 in1 $end
$var wire 1 S8 out $end
$upscope $end

$scope module nand_p1p0c0 $end
$var wire 1 m8 in1 $end
$var wire 1 N8 in2 $end
$var wire 1 o8 out $end
$upscope $end

$scope module and_p1p0c0 $end
$var wire 1 o8 in1 $end
$var wire 1 p8 out $end
$upscope $end

$scope module nand_p1g0 $end
$var wire 1 N8 in1 $end
$var wire 1 K8 in2 $end
$var wire 1 q8 out $end
$upscope $end

$scope module and_p1g0 $end
$var wire 1 q8 in1 $end
$var wire 1 r8 out $end
$upscope $end

$scope module nor_c2 $end
$var wire 1 J8 in1 $end
$var wire 1 r8 in2 $end
$var wire 1 p8 in3 $end
$var wire 1 s8 out $end
$upscope $end

$scope module or_c2 $end
$var wire 1 s8 in1 $end
$var wire 1 R8 out $end
$upscope $end

$scope module nand_p2 $end
$var wire 1 M8 in1 $end
$var wire 1 p8 in2 $end
$var wire 1 t8 out $end
$upscope $end

$scope module and_p2 $end
$var wire 1 t8 in1 $end
$var wire 1 u8 out $end
$upscope $end

$scope module nand_p2g0 $end
$var wire 1 M8 in1 $end
$var wire 1 r8 in2 $end
$var wire 1 v8 out $end
$upscope $end

$scope module and_p2g0 $end
$var wire 1 v8 in1 $end
$var wire 1 w8 out $end
$upscope $end

$scope module nand_p2g1 $end
$var wire 1 M8 in1 $end
$var wire 1 J8 in2 $end
$var wire 1 x8 out $end
$upscope $end

$scope module and_p2g1 $end
$var wire 1 x8 in1 $end
$var wire 1 y8 out $end
$upscope $end

$scope module nor_RHS_c3 $end
$var wire 1 I8 in1 $end
$var wire 1 y8 in2 $end
$var wire 1 w8 in3 $end
$var wire 1 z8 out $end
$upscope $end

$scope module or_RHS_c3 $end
$var wire 1 z8 in1 $end
$var wire 1 {8 out $end
$upscope $end

$scope module nor_c3 $end
$var wire 1 u8 in1 $end
$var wire 1 {8 in2 $end
$var wire 1 |8 out $end
$upscope $end

$scope module or_c3 $end
$var wire 1 |8 in1 $end
$var wire 1 Q8 out $end
$upscope $end

$scope module nand_p3 $end
$var wire 1 L8 in1 $end
$var wire 1 u8 in2 $end
$var wire 1 }8 out $end
$upscope $end

$scope module and_p3 $end
$var wire 1 }8 in1 $end
$var wire 1 ~8 out $end
$upscope $end

$scope module nand_p3g0 $end
$var wire 1 L8 in1 $end
$var wire 1 w8 in2 $end
$var wire 1 !9 out $end
$upscope $end

$scope module and_p3g0 $end
$var wire 1 !9 in1 $end
$var wire 1 "9 out $end
$upscope $end

$scope module nand_p3g1 $end
$var wire 1 L8 in1 $end
$var wire 1 y8 in2 $end
$var wire 1 #9 out $end
$upscope $end

$scope module and_p3g1 $end
$var wire 1 #9 in1 $end
$var wire 1 $9 out $end
$upscope $end

$scope module nand_p3g2 $end
$var wire 1 L8 in1 $end
$var wire 1 I8 in2 $end
$var wire 1 %9 out $end
$upscope $end

$scope module and_p3g2 $end
$var wire 1 %9 in1 $end
$var wire 1 &9 out $end
$upscope $end

$scope module nor_LHS_c4 $end
$var wire 1 H8 in1 $end
$var wire 1 &9 in2 $end
$var wire 1 $9 in3 $end
$var wire 1 '9 out $end
$upscope $end

$scope module or_LHS_c4 $end
$var wire 1 '9 in1 $end
$var wire 1 (9 out $end
$upscope $end

$scope module nor_RHS_c4 $end
$var wire 1 (9 in1 $end
$var wire 1 "9 in2 $end
$var wire 1 ~8 in3 $end
$var wire 1 )9 out $end
$upscope $end

$scope module or_RHS_c4 $end
$var wire 1 )9 in1 $end
$var wire 1 P8 out $end
$upscope $end
$upscope $end

$scope module fa_sum0 $end
$var wire 1 ,0 A $end
$var wire 1 <0 B $end
$var wire 1 `3 C_in $end
$var wire 1 \0 S $end
$var wire 1 *9 C_out $end
$var wire 1 +9 nand_bc $end
$var wire 1 ,9 nand_ac $end
$var wire 1 -9 nand_ab $end
$var wire 1 .9 and_bc $end
$var wire 1 /9 and_ac $end
$var wire 1 09 and_ab $end
$var wire 1 19 nor_res $end

$scope module xor_sum $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 `3 in3 $end
$var wire 1 \0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 <0 in1 $end
$var wire 1 `3 in2 $end
$var wire 1 +9 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 ,0 in1 $end
$var wire 1 `3 in2 $end
$var wire 1 ,9 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 ,0 in1 $end
$var wire 1 <0 in2 $end
$var wire 1 -9 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 +9 in1 $end
$var wire 1 .9 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 ,9 in1 $end
$var wire 1 /9 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 -9 in1 $end
$var wire 1 09 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 .9 in1 $end
$var wire 1 /9 in2 $end
$var wire 1 09 in3 $end
$var wire 1 19 out $end
$upscope $end

$scope module res $end
$var wire 1 19 in1 $end
$var wire 1 *9 out $end
$upscope $end
$upscope $end

$scope module fa_sum1 $end
$var wire 1 +0 A $end
$var wire 1 ;0 B $end
$var wire 1 S8 C_in $end
$var wire 1 [0 S $end
$var wire 1 29 C_out $end
$var wire 1 39 nand_bc $end
$var wire 1 49 nand_ac $end
$var wire 1 59 nand_ab $end
$var wire 1 69 and_bc $end
$var wire 1 79 and_ac $end
$var wire 1 89 and_ab $end
$var wire 1 99 nor_res $end

$scope module xor_sum $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 S8 in3 $end
$var wire 1 [0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 ;0 in1 $end
$var wire 1 S8 in2 $end
$var wire 1 39 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 +0 in1 $end
$var wire 1 S8 in2 $end
$var wire 1 49 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 +0 in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 59 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 39 in1 $end
$var wire 1 69 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 49 in1 $end
$var wire 1 79 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 59 in1 $end
$var wire 1 89 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 69 in1 $end
$var wire 1 79 in2 $end
$var wire 1 89 in3 $end
$var wire 1 99 out $end
$upscope $end

$scope module res $end
$var wire 1 99 in1 $end
$var wire 1 29 out $end
$upscope $end
$upscope $end

$scope module fa_sum2 $end
$var wire 1 *0 A $end
$var wire 1 :0 B $end
$var wire 1 R8 C_in $end
$var wire 1 Z0 S $end
$var wire 1 :9 C_out $end
$var wire 1 ;9 nand_bc $end
$var wire 1 <9 nand_ac $end
$var wire 1 =9 nand_ab $end
$var wire 1 >9 and_bc $end
$var wire 1 ?9 and_ac $end
$var wire 1 @9 and_ab $end
$var wire 1 A9 nor_res $end

$scope module xor_sum $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 R8 in3 $end
$var wire 1 Z0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 :0 in1 $end
$var wire 1 R8 in2 $end
$var wire 1 ;9 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 *0 in1 $end
$var wire 1 R8 in2 $end
$var wire 1 <9 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 *0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 =9 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 ;9 in1 $end
$var wire 1 >9 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 <9 in1 $end
$var wire 1 ?9 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 =9 in1 $end
$var wire 1 @9 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 >9 in1 $end
$var wire 1 ?9 in2 $end
$var wire 1 @9 in3 $end
$var wire 1 A9 out $end
$upscope $end

$scope module res $end
$var wire 1 A9 in1 $end
$var wire 1 :9 out $end
$upscope $end
$upscope $end

$scope module fa_sum3 $end
$var wire 1 )0 A $end
$var wire 1 90 B $end
$var wire 1 Q8 C_in $end
$var wire 1 Y0 S $end
$var wire 1 B9 C_out $end
$var wire 1 C9 nand_bc $end
$var wire 1 D9 nand_ac $end
$var wire 1 E9 nand_ab $end
$var wire 1 F9 and_bc $end
$var wire 1 G9 and_ac $end
$var wire 1 H9 and_ab $end
$var wire 1 I9 nor_res $end

$scope module xor_sum $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 Q8 in3 $end
$var wire 1 Y0 out $end
$upscope $end

$scope module nand2_bc $end
$var wire 1 90 in1 $end
$var wire 1 Q8 in2 $end
$var wire 1 C9 out $end
$upscope $end

$scope module nand2_ac $end
$var wire 1 )0 in1 $end
$var wire 1 Q8 in2 $end
$var wire 1 D9 out $end
$upscope $end

$scope module nand2_ab $end
$var wire 1 )0 in1 $end
$var wire 1 90 in2 $end
$var wire 1 E9 out $end
$upscope $end

$scope module not1_bc $end
$var wire 1 C9 in1 $end
$var wire 1 F9 out $end
$upscope $end

$scope module not1_ac $end
$var wire 1 D9 in1 $end
$var wire 1 G9 out $end
$upscope $end

$scope module not1_ab $end
$var wire 1 E9 in1 $end
$var wire 1 H9 out $end
$upscope $end

$scope module sum_of_ands $end
$var wire 1 F9 in1 $end
$var wire 1 G9 in2 $end
$var wire 1 H9 in3 $end
$var wire 1 I9 out $end
$upscope $end

$scope module res $end
$var wire 1 I9 in1 $end
$var wire 1 B9 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module ALUOpCNTRL_Inst $end
$var wire 1 :" instr_op_ext [6] $end
$var wire 1 ;" instr_op_ext [5] $end
$var wire 1 <" instr_op_ext [4] $end
$var wire 1 =" instr_op_ext [3] $end
$var wire 1 >" instr_op_ext [2] $end
$var wire 1 ?" instr_op_ext [1] $end
$var wire 1 @" instr_op_ext [0] $end
$var reg 1 J9 ALU_Cin_CNTRL $end
$var reg 1 K9 ALU_invA_CNTRL $end
$var reg 1 L9 ALU_invB_CNTRL $end
$var reg 1 M9 ALU_sign_CNTRL $end
$var reg 3 N9 ALU_Op_CNTRL [2:0] $end
$upscope $end
$upscope $end

$scope module memory $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 t" memWriteEn_CNTRL $end
$var wire 1 E! HaltSel_CNTRL $end
$var wire 1 D" ALU_output [15] $end
$var wire 1 E" ALU_output [14] $end
$var wire 1 F" ALU_output [13] $end
$var wire 1 G" ALU_output [12] $end
$var wire 1 H" ALU_output [11] $end
$var wire 1 I" ALU_output [10] $end
$var wire 1 J" ALU_output [9] $end
$var wire 1 K" ALU_output [8] $end
$var wire 1 L" ALU_output [7] $end
$var wire 1 M" ALU_output [6] $end
$var wire 1 N" ALU_output [5] $end
$var wire 1 O" ALU_output [4] $end
$var wire 1 P" ALU_output [3] $end
$var wire 1 Q" ALU_output [2] $end
$var wire 1 R" ALU_output [1] $end
$var wire 1 S" ALU_output [0] $end
$var wire 1 d" writeRegDataExecute [15] $end
$var wire 1 e" writeRegDataExecute [14] $end
$var wire 1 f" writeRegDataExecute [13] $end
$var wire 1 g" writeRegDataExecute [12] $end
$var wire 1 h" writeRegDataExecute [11] $end
$var wire 1 i" writeRegDataExecute [10] $end
$var wire 1 j" writeRegDataExecute [9] $end
$var wire 1 k" writeRegDataExecute [8] $end
$var wire 1 l" writeRegDataExecute [7] $end
$var wire 1 m" writeRegDataExecute [6] $end
$var wire 1 n" writeRegDataExecute [5] $end
$var wire 1 o" writeRegDataExecute [4] $end
$var wire 1 p" writeRegDataExecute [3] $end
$var wire 1 q" writeRegDataExecute [2] $end
$var wire 1 r" writeRegDataExecute [1] $end
$var wire 1 s" writeRegDataExecute [0] $end
$var wire 1 v" memDataOut [15] $end
$var wire 1 w" memDataOut [14] $end
$var wire 1 x" memDataOut [13] $end
$var wire 1 y" memDataOut [12] $end
$var wire 1 z" memDataOut [11] $end
$var wire 1 {" memDataOut [10] $end
$var wire 1 |" memDataOut [9] $end
$var wire 1 }" memDataOut [8] $end
$var wire 1 ~" memDataOut [7] $end
$var wire 1 !# memDataOut [6] $end
$var wire 1 "# memDataOut [5] $end
$var wire 1 ## memDataOut [4] $end
$var wire 1 $# memDataOut [3] $end
$var wire 1 %# memDataOut [2] $end
$var wire 1 &# memDataOut [1] $end
$var wire 1 '# memDataOut [0] $end

$scope module DataMemory $end
$var wire 1 v" data_out [15] $end
$var wire 1 w" data_out [14] $end
$var wire 1 x" data_out [13] $end
$var wire 1 y" data_out [12] $end
$var wire 1 z" data_out [11] $end
$var wire 1 {" data_out [10] $end
$var wire 1 |" data_out [9] $end
$var wire 1 }" data_out [8] $end
$var wire 1 ~" data_out [7] $end
$var wire 1 !# data_out [6] $end
$var wire 1 "# data_out [5] $end
$var wire 1 ## data_out [4] $end
$var wire 1 $# data_out [3] $end
$var wire 1 %# data_out [2] $end
$var wire 1 &# data_out [1] $end
$var wire 1 '# data_out [0] $end
$var wire 1 d" data_in [15] $end
$var wire 1 e" data_in [14] $end
$var wire 1 f" data_in [13] $end
$var wire 1 g" data_in [12] $end
$var wire 1 h" data_in [11] $end
$var wire 1 i" data_in [10] $end
$var wire 1 j" data_in [9] $end
$var wire 1 k" data_in [8] $end
$var wire 1 l" data_in [7] $end
$var wire 1 m" data_in [6] $end
$var wire 1 n" data_in [5] $end
$var wire 1 o" data_in [4] $end
$var wire 1 p" data_in [3] $end
$var wire 1 q" data_in [2] $end
$var wire 1 r" data_in [1] $end
$var wire 1 s" data_in [0] $end
$var wire 1 D" addr [15] $end
$var wire 1 E" addr [14] $end
$var wire 1 F" addr [13] $end
$var wire 1 G" addr [12] $end
$var wire 1 H" addr [11] $end
$var wire 1 I" addr [10] $end
$var wire 1 J" addr [9] $end
$var wire 1 K" addr [8] $end
$var wire 1 L" addr [7] $end
$var wire 1 M" addr [6] $end
$var wire 1 N" addr [5] $end
$var wire 1 O" addr [4] $end
$var wire 1 P" addr [3] $end
$var wire 1 Q" addr [2] $end
$var wire 1 R" addr [1] $end
$var wire 1 S" addr [0] $end
$var wire 1 O9 enable $end
$var wire 1 t" wr $end
$var wire 1 E! createdump $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 P9 loaded $end
$var reg 17 Q9 largest [16:0] $end
$var integer 32 R9 mcd $end
$var integer 32 S9 i $end
$upscope $end
$upscope $end

$scope module wb $end
$var wire 1 u" memRead_CNTRL $end
$var wire 1 <# writeRegEnDecode $end
$var wire 1 A" writeRegSelDecode [2] $end
$var wire 1 B" writeRegSelDecode [1] $end
$var wire 1 C" writeRegSelDecode [0] $end
$var wire 1 v" memDataOut [15] $end
$var wire 1 w" memDataOut [14] $end
$var wire 1 x" memDataOut [13] $end
$var wire 1 y" memDataOut [12] $end
$var wire 1 z" memDataOut [11] $end
$var wire 1 {" memDataOut [10] $end
$var wire 1 |" memDataOut [9] $end
$var wire 1 }" memDataOut [8] $end
$var wire 1 ~" memDataOut [7] $end
$var wire 1 !# memDataOut [6] $end
$var wire 1 "# memDataOut [5] $end
$var wire 1 ## memDataOut [4] $end
$var wire 1 $# memDataOut [3] $end
$var wire 1 %# memDataOut [2] $end
$var wire 1 &# memDataOut [1] $end
$var wire 1 '# memDataOut [0] $end
$var wire 1 d" writeRegDataExecute [15] $end
$var wire 1 e" writeRegDataExecute [14] $end
$var wire 1 f" writeRegDataExecute [13] $end
$var wire 1 g" writeRegDataExecute [12] $end
$var wire 1 h" writeRegDataExecute [11] $end
$var wire 1 i" writeRegDataExecute [10] $end
$var wire 1 j" writeRegDataExecute [9] $end
$var wire 1 k" writeRegDataExecute [8] $end
$var wire 1 l" writeRegDataExecute [7] $end
$var wire 1 m" writeRegDataExecute [6] $end
$var wire 1 n" writeRegDataExecute [5] $end
$var wire 1 o" writeRegDataExecute [4] $end
$var wire 1 p" writeRegDataExecute [3] $end
$var wire 1 q" writeRegDataExecute [2] $end
$var wire 1 r" writeRegDataExecute [1] $end
$var wire 1 s" writeRegDataExecute [0] $end
$var wire 1 (# writeRegEn $end
$var wire 1 )# writeRegSel [2] $end
$var wire 1 *# writeRegSel [1] $end
$var wire 1 +# writeRegSel [0] $end
$var wire 1 ,# writeRegData [15] $end
$var wire 1 -# writeRegData [14] $end
$var wire 1 .# writeRegData [13] $end
$var wire 1 /# writeRegData [12] $end
$var wire 1 0# writeRegData [11] $end
$var wire 1 1# writeRegData [10] $end
$var wire 1 2# writeRegData [9] $end
$var wire 1 3# writeRegData [8] $end
$var wire 1 4# writeRegData [7] $end
$var wire 1 5# writeRegData [6] $end
$var wire 1 6# writeRegData [5] $end
$var wire 1 7# writeRegData [4] $end
$var wire 1 8# writeRegData [3] $end
$var wire 1 9# writeRegData [2] $end
$var wire 1 :# writeRegData [1] $end
$var wire 1 ;# writeRegData [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1~
1!!
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
18*
b0 9*
x<*
x=*
bx >*
bx ?*
b0xxxxx @*
bx A*
xF+
bx I+
bx J+
xK+
xL+
0D.
0C.
0B.
0A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
07.
06.
05.
0U.
0T.
0S.
0R.
0Q.
0P.
0O.
0N.
0M.
0L.
0K.
0J.
0I.
0H.
0G.
0F.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
0Y.
0X.
0W.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0*/
0)/
0(/
0'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0;/
0:/
09/
08/
07/
06/
05/
04/
03/
02/
01/
00/
0//
0./
0-/
0,/
0L/
0K/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
x^/
x_/
bx y/
xJ9
xK9
xL9
xM9
bx N9
1P9
b0 Q9
b10000 m#
b10000 ~#
b100 u%
b100 y&
b100 }'
b100 #)
b10000 H+
b10000 4.
b10000 E.
b10000 V.
b10000 g.
b10000 x.
b10000 +/
b10000 </
b10000 M/
b10000 '0
b11 (0
b10000 m0
b100 n0
b10 o0
b10000 V3
b100 ;5
b100 ?6
b100 C7
b100 G8
b0 x
b10 y
b100 z
b1 "!
bx :*
b10000000000000000 ;*
bx R9
b10000000000000000 S9
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
zA
xD
xC
xB
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xU
xV
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xw
1{
1|
1}
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
xC!
xD!
xE!
xF!
xG!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xg!
xf!
xe!
xd!
xc!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x@"
x?"
x>"
x="
x<"
x;"
x:"
xC"
xB"
xA"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xt"
xu"
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
z(#
x+#
x*#
x)#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x6$
05$
04$
03$
x:$
x9$
x8$
x7$
1G$
xH$
1I$
1J$
xK$
0L$
xM$
xN$
1O$
0P$
1Q$
0R$
xS$
xT$
1U$
0V$
xW$
xX$
xY$
xZ$
x[$
x\$
1e$
1f$
1g$
1h$
xi$
xj$
xk$
xl$
1m$
0n$
1o$
0p$
1q$
0r$
1s$
0t$
1u$
0v$
1w$
xx$
xy$
xz$
1%%
1&%
1'%
1(%
x)%
x*%
x+%
x,%
1-%
0.%
1/%
00%
11%
02%
13%
04%
15%
06%
17%
x8%
x9%
x:%
1C%
1D%
1E%
1F%
xG%
xH%
xI%
xJ%
1K%
0L%
1M%
0N%
1O%
0P%
1Q%
0R%
1S%
0T%
1U%
xV%
xW%
xX%
x>$
x=$
x<$
x;$
1Y%
0Z%
x[%
1\%
0]%
x^%
x_%
x`%
1a%
0b%
xc%
xd%
1e%
0f%
xg%
xh%
xi%
1j%
0k%
xl%
xm%
1n%
0o%
1p%
0q%
1r%
0s%
xt%
0z%
xy%
0x%
0w%
x~%
1}%
x|%
x{%
1'&
x(&
1)&
1*&
x+&
0,&
x-&
x.&
1/&
00&
11&
02&
x3&
x4&
15&
06&
x7&
x8&
x9&
x:&
x;&
x<&
0$&
x#&
x"&
x!&
1=&
0>&
1?&
1@&
0A&
1B&
0C&
xD&
1E&
0F&
1G&
0H&
xI&
xJ&
xK&
xL&
xM&
1N&
0O&
1P&
0Q&
xR&
xS&
1T&
0U&
xV&
xW&
xX&
1Z&
1[&
1\&
0]&
0^&
0_&
1`&
1b&
1c&
xd&
0e&
0f&
xg&
xh&
1j&
xk&
1l&
0m&
xn&
0o&
xp&
1r&
xs&
1t&
0u&
xv&
0w&
xx&
0~&
0}&
0|&
0{&
x$'
x#'
x"'
x!'
1+'
1,'
1-'
1.'
x/'
x0'
x1'
x2'
13'
04'
15'
06'
17'
08'
19'
0:'
1;'
0<'
1='
x>'
x?'
x@'
x('
x''
x&'
x%'
xA'
xB'
xC'
xD'
xE'
1F'
0G'
xH'
xI'
xJ'
1K'
0L'
1M'
0N'
1O'
0P'
xQ'
xR'
xS'
1T'
0U'
1V'
0W'
1X'
0Y'
1Z'
0['
x\'
1^'
x_'
1`'
0a'
xb'
0c'
xd'
1f'
xg'
1h'
0i'
xj'
0k'
xl'
1n'
xo'
1p'
0q'
xr'
0s'
xt'
1v'
xw'
1x'
0y'
xz'
0{'
x|'
0$(
0#(
0"(
0!(
x((
x'(
x&(
x%(
1/(
10(
11(
12(
x3(
x4(
x5(
x6(
17(
08(
19(
0:(
1;(
0<(
1=(
0>(
1?(
0@(
1A(
xB(
xC(
xD(
x,(
x+(
x*(
x)(
xE(
xF(
xG(
xH(
xI(
1J(
0K(
xL(
xM(
xN(
1O(
0P(
1Q(
0R(
1S(
0T(
xU(
xV(
xW(
1X(
0Y(
1Z(
0[(
1\(
0](
1^(
0_(
x`(
1b(
xc(
1d(
0e(
xf(
0g(
xh(
1j(
xk(
1l(
0m(
xn(
0o(
xp(
1r(
xs(
1t(
0u(
xv(
0w(
xx(
1z(
x{(
1|(
0}(
x~(
0!)
x")
0')
0&)
0%)
0$)
x+)
x*)
x))
x()
12)
13)
14)
15)
x6)
x7)
x8)
x9)
1:)
0;)
1<)
0=)
1>)
0?)
1@)
0A)
1B)
0C)
1D)
xE)
xF)
xG)
x/)
x.)
x-)
x,)
xH)
xI)
xJ)
xK)
xL)
1M)
0N)
xO)
xP)
xQ)
1R)
0S)
1T)
0U)
1V)
0W)
xX)
xY)
xZ)
1[)
0\)
1])
0^)
1_)
0`)
1a)
0b)
xc)
1e)
xf)
1g)
0h)
xi)
0j)
xk)
1m)
xn)
1o)
0p)
xq)
0r)
xs)
1u)
xv)
1w)
0x)
xy)
0z)
x{)
1})
x~)
1!*
0"*
x#*
0$*
x%*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xq*
xp*
xo*
xn*
xm*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
xD+
xE+
zG+
1M+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xQ+
xP+
xO+
xN+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xo+
xn+
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x~+
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
xP,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
xc,
xb,
xa,
x`,
x!-
x~,
x},
x|,
x{,
xz,
xy,
xx,
xw,
xv,
xu,
xt,
xs,
xr,
xq,
xp,
x1-
x0-
x/-
x.-
x--
x,-
x+-
x*-
x)-
x(-
x'-
x&-
x%-
x$-
x#-
x"-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
x7-
x6-
x5-
x4-
x3-
x2-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
xB-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
xR-
xq-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
xh-
xg-
xf-
xe-
xd-
xc-
xb-
x#.
x".
x!.
x~-
x}-
x|-
x{-
xz-
xy-
xx-
xw-
xv-
xu-
xt-
xs-
xr-
x3.
x2.
x1.
x0.
x/.
x..
x-.
x,.
x+.
x*.
x).
x(.
x'.
x&.
x%.
x$.
z`/
za/
zb/
zc/
xd/
xe/
xf/
xg/
xh/
xx/
xw/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xz/
x{/
x|/
x}/
x"0
x!0
x~/
x#0
x$0
x%0
z&0
x80
x70
x60
x50
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
xH0
xG0
xF0
xE0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
xX0
xW0
xV0
xU0
xT0
xS0
xR0
xQ0
xP0
xO0
xN0
xM0
xL0
xK0
xJ0
xI0
x!1
x~0
x}0
x|0
x{0
xz0
xy0
xx0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
x11
x01
x/1
x.1
x-1
x,1
x+1
x*1
x)1
x(1
x'1
x&1
x%1
x$1
x#1
x"1
xA1
x@1
x?1
x>1
x=1
x<1
x;1
x:1
x91
x81
x71
x61
x51
x41
x31
x21
xQ1
xP1
xO1
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
xF1
xE1
xD1
xC1
xB1
xa1
x`1
x_1
x^1
x]1
x\1
x[1
xZ1
xY1
xX1
xW1
xV1
xU1
xT1
xS1
xR1
xq1
xp1
xo1
xn1
xm1
xl1
xk1
xj1
xi1
xh1
xg1
xf1
xe1
xd1
xc1
xb1
x#2
x"2
x!2
x~1
x}1
x|1
x{1
xz1
xy1
xx1
xw1
xv1
xu1
xt1
xs1
xr1
x32
x22
x12
x02
x/2
x.2
x-2
x,2
x+2
x*2
x)2
x(2
x'2
x&2
x%2
x$2
xC2
xB2
xA2
x@2
x?2
x>2
x=2
x<2
x;2
x:2
x92
x82
x72
x62
x52
x42
xS2
xR2
xQ2
xP2
xO2
xN2
xM2
xL2
xK2
xJ2
xI2
xH2
xG2
xF2
xE2
xD2
xc2
xb2
xa2
x`2
x_2
x^2
x]2
x\2
x[2
xZ2
xY2
xX2
xW2
xV2
xU2
xT2
xs2
xr2
xq2
xp2
xo2
xn2
xm2
xl2
xk2
xj2
xi2
xh2
xg2
xf2
xe2
xd2
x%3
x$3
x#3
x"3
x!3
x~2
x}2
x|2
x{2
xz2
xy2
xx2
xw2
xv2
xu2
xt2
x53
x43
x33
x23
x13
x03
x/3
x.3
x-3
x,3
x+3
x*3
x)3
x(3
x'3
x&3
xE3
xD3
xC3
xB3
xA3
x@3
x?3
x>3
x=3
x<3
x;3
x:3
x93
x83
x73
x63
xU3
xT3
xS3
xR3
xQ3
xP3
xO3
xN3
xM3
xL3
xK3
xJ3
xI3
xH3
xG3
xF3
xh0
xg0
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x\0
x[0
xZ0
xY0
xi0
xZ3
xY3
xX3
xW3
x^3
x]3
x\3
x[3
xk3
xl3
xm3
xn3
xo3
xp3
xq3
xr3
xs3
xt3
xu3
xv3
xw3
xx3
xy3
xz3
x{3
x|3
x}3
x~3
x!4
x"4
x+4
x,4
x-4
x.4
x/4
x04
x14
x24
x34
x44
x54
x64
x74
x84
x94
x:4
x;4
x<4
x=4
x>4
x?4
x@4
xI4
xJ4
xK4
xL4
xM4
xN4
xO4
xP4
xQ4
xR4
xS4
xT4
xU4
xV4
xW4
xX4
xY4
xZ4
x[4
x\4
x]4
x^4
xg4
xh4
xi4
xj4
xk4
xl4
xm4
xn4
xo4
xp4
xq4
xr4
xs4
xt4
xu4
xv4
xw4
xx4
xy4
xz4
x{4
x|4
xb3
xa3
x`3
x_3
x}4
x~4
x!5
x"5
x#5
x$5
x%5
x&5
x'5
x(5
x)5
x*5
x+5
x,5
x-5
x.5
x/5
x05
x15
x25
x35
x45
x55
x65
x75
x85
x95
x:5
x@5
x?5
x>5
x=5
xD5
xC5
xB5
xA5
xK5
xL5
xM5
xN5
xO5
xP5
xQ5
xR5
xS5
xT5
xU5
xV5
xW5
xX5
xY5
xZ5
x[5
x\5
x]5
x^5
x_5
x`5
xH5
xG5
xF5
xE5
xa5
xb5
xc5
xd5
xe5
xf5
xg5
xh5
xi5
xj5
xk5
xl5
xm5
xn5
xo5
xp5
xq5
xr5
xs5
xt5
xu5
xv5
xw5
xx5
xy5
xz5
x{5
x|5
x~5
x!6
x"6
x#6
x$6
x%6
x&6
x(6
x)6
x*6
x+6
x,6
x-6
x.6
x06
x16
x26
x36
x46
x56
x66
x86
x96
x:6
x;6
x<6
x=6
x>6
xD6
xC6
xB6
xA6
xH6
xG6
xF6
xE6
xO6
xP6
xQ6
xR6
xS6
xT6
xU6
xV6
xW6
xX6
xY6
xZ6
x[6
x\6
x]6
x^6
x_6
x`6
xa6
xb6
xc6
xd6
xL6
xK6
xJ6
xI6
xe6
xf6
xg6
xh6
xi6
xj6
xk6
xl6
xm6
xn6
xo6
xp6
xq6
xr6
xs6
xt6
xu6
xv6
xw6
xx6
xy6
xz6
x{6
x|6
x}6
x~6
x!7
x"7
x$7
x%7
x&7
x'7
x(7
x)7
x*7
x,7
x-7
x.7
x/7
x07
x17
x27
x47
x57
x67
x77
x87
x97
x:7
x<7
x=7
x>7
x?7
x@7
xA7
xB7
xH7
xG7
xF7
xE7
xL7
xK7
xJ7
xI7
xS7
xT7
xU7
xV7
xW7
xX7
xY7
xZ7
x[7
x\7
x]7
x^7
x_7
x`7
xa7
xb7
xc7
xd7
xe7
xf7
xg7
xh7
xP7
xO7
xN7
xM7
xi7
xj7
xk7
xl7
xm7
xn7
xo7
xp7
xq7
xr7
xs7
xt7
xu7
xv7
xw7
xx7
xy7
xz7
x{7
x|7
x}7
x~7
x!8
x"8
x#8
x$8
x%8
x&8
x(8
x)8
x*8
x+8
x,8
x-8
x.8
x08
x18
x28
x38
x48
x58
x68
x88
x98
x:8
x;8
x<8
x=8
x>8
x@8
xA8
xB8
xC8
xD8
xE8
xF8
xK8
xJ8
xI8
xH8
xO8
xN8
xM8
xL8
xV8
xW8
xX8
xY8
xZ8
x[8
x\8
x]8
x^8
x_8
x`8
xa8
xb8
xc8
xd8
xe8
xf8
xg8
xh8
xi8
xj8
xk8
xS8
xR8
xQ8
xP8
xl8
xm8
xn8
xo8
xp8
xq8
xr8
xs8
xt8
xu8
xv8
xw8
xx8
xy8
xz8
x{8
x|8
x}8
x~8
x!9
x"9
x#9
x$9
x%9
x&9
x'9
x(9
x)9
x+9
x,9
x-9
x.9
x/9
x09
x19
x39
x49
x59
x69
x79
x89
x99
x;9
x<9
x=9
x>9
x?9
x@9
xA9
xC9
xD9
xE9
xF9
xG9
xH9
xI9
xj0
xk0
xl0
z<#
07*
x6*
01$
00$
1/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
x2$
0B$
xA$
0@$
0?$
xF$
1E$
xD$
xC$
0`$
0_$
0^$
0]$
xd$
xc$
xb$
xa$
0~$
0}$
0|$
0{$
x$%
x#%
x"%
x!%
0>%
0=%
0<%
0;%
xB%
xA%
x@%
x?%
xv%
x%&
x&&
0Y&
xa&
xi&
xq&
xz&
0)'
x*'
x]'
xe'
xm'
xu'
x~'
0-(
x.(
xa(
xi(
xq(
xy(
00)
x1)
xd)
xl)
xt)
x|)
z5*
z4*
z3*
z2*
z1*
z0*
z/*
z.*
z-*
z,*
z+*
z**
z)*
z(*
z'*
z&*
xf3
xe3
xd3
xc3
xj3
xi3
xh3
xg3
x&4
x%4
x$4
x#4
x*4
x)4
x(4
x'4
xD4
xC4
xB4
xA4
xH4
xG4
xF4
xE4
xb4
xa4
x`4
x_4
xf4
xe4
xd4
xc4
x<5
xI5
xJ5
x}5
x'6
x/6
x76
x@6
xM6
xN6
x#7
x+7
x37
x;7
xD7
xQ7
xR7
x'8
x/8
x78
x?8
xT8
xU8
x*9
x29
x:9
xB9
xO9
$end
#1
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
0S+
0R+
0Q+
0P+
0O+
0N+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0t+
0s+
0r+
0q+
0p+
0o+
0n+
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
0#,
0",
0!,
0~+
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
00,
0O,
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0G,
0F,
0E,
0D,
0C,
0B,
0A,
0@,
0_,
0^,
0],
0\,
0[,
0Z,
0Y,
0X,
0W,
0V,
0U,
0T,
0S,
0R,
0Q,
0P,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
0f,
0e,
0d,
0c,
0b,
0a,
0`,
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
1+&
1K$
1d&
1(&
1H$
1k&
1-&
1M$
1s&
1.&
1N$
1_'
1/'
1i$
1g'
10'
1j$
1o'
11'
1k$
1w'
12'
1l$
1c(
13(
1)%
1k(
14(
1*%
1s(
15(
1+%
1{(
16(
1,%
1f)
16)
1G%
1n)
17)
1H%
1v)
18)
1I%
1~)
19)
1J%
0~%
0F$
0g&
0y%
0A$
0n&
0|%
0D$
0v&
0{%
0C$
0b'
0$'
0d$
0j'
0#'
0c$
0r'
0"'
0b$
0z'
0!'
0a$
0f(
0((
0$%
0n(
0'(
0#%
0v(
0&(
0"%
0~(
0%(
0!%
0i)
0+)
0B%
0q)
0*)
0A%
0y)
0))
0@%
0#*
0()
0?%
1:&
1Z$
1h&
1I&
1D&
13&
1S$
1p&
1x&
1R&
1<&
1\$
1d'
1A'
1>'
1x$
1l'
1D'
1t'
1I'
1|'
1R'
1@'
1z$
1h(
1E(
1B(
18%
1p(
1H(
1x(
1M(
1")
1V(
1D(
1:%
1k)
1H)
1E)
1V%
1s)
1K)
1{)
1P)
1%*
1Y)
1G)
1X%
0;&
0[$
0a&
0J&
0#&
04&
0T$
0i&
0q&
0S&
0&&
0:$
0]'
0B'
0?'
0y$
0e'
0E'
0m'
0J'
0u'
0S'
0*'
09$
0a(
0F(
0C(
09%
0i(
0I(
0q(
0N(
0y(
0W(
0.(
08$
0d)
0I)
0F)
0W%
0l)
0L)
0t)
0Q)
0|)
0Z)
01)
07$
1K&
17&
1W$
1V&
1C'
1H'
1Q'
1\'
1^%
1G(
1L(
1U(
1`(
1c%
1J)
1O)
1X)
1c)
1l%
0L&
08&
0X$
0W&
0('
0''
0&'
0%'
0_%
0,(
0+(
0*(
0)(
0d%
0/)
0.)
0-)
0,)
0m%
1M&
19&
1Y$
1X&
0z&
1`%
0~'
1g%
1t%
0"&
0%&
06$
0!&
0=$
0h%
0;$
1[%
0v%
1i%
02$
0>$
0<$
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
11!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
0C!
0D!
0L#
1K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0q*
0p*
0o*
0n*
0m*
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0(+
0'+
0&+
0%+
0$+
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
0@"
0?"
0>"
0="
0<"
0;"
0:"
1E!
1w
0O9
06*
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0^/
0_/
0<*
0=*
b0 @*
b0 I+
0K+
b0 J+
0L+
0t"
0V
0u"
0F!
0G!
0g!
0f!
0e!
0d!
0c!
0U
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
1D+
0E+
0x/
0w/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
1F+
#50
0~
0{
#100
1~
